{"ast":null,"code":"import _get from \"C:/Users/Dell/Desktop/PocketMoneyWeb/PocketMoney/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/Dell/Desktop/PocketMoneyWeb/PocketMoney/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _construct from \"C:/Users/Dell/Desktop/PocketMoneyWeb/PocketMoney/node_modules/@babel/runtime/helpers/esm/construct.js\";\nimport _slicedToArray from \"C:/Users/Dell/Desktop/PocketMoneyWeb/PocketMoney/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/Dell/Desktop/PocketMoneyWeb/PocketMoney/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"C:/Users/Dell/Desktop/PocketMoneyWeb/PocketMoney/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Dell/Desktop/PocketMoneyWeb/PocketMoney/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _inherits from \"C:/Users/Dell/Desktop/PocketMoneyWeb/PocketMoney/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Dell/Desktop/PocketMoneyWeb/PocketMoney/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _toConsumableArray from \"C:/Users/Dell/Desktop/PocketMoneyWeb/PocketMoney/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"C:/Users/Dell/Desktop/PocketMoneyWeb/PocketMoney/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Dell/Desktop/PocketMoneyWeb/PocketMoney/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { _registerComponent, registerVersion, _getProvider, getApp, _removeServiceInstance, SDK_VERSION } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { FirebaseError, getDefaultEmulatorHostnameAndPort, createMockUserToken, getModularInstance, deepEqual } from '@firebase/util';\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\n\nvar d = /*#__PURE__*/function () {\n  function d(t) {\n    _classCallCheck(this, d);\n\n    this.uid = t;\n  }\n\n  _createClass(d, [{\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */\n\n  }, {\n    key: \"toKey\",\n    value: function toKey() {\n      return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t.uid === this.uid;\n    }\n  }]);\n\n  return d;\n}();\n/** A user with a null UID. */\n\n\nd.UNAUTHENTICATED = new d(null), // TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), d.MOCK_USER = new d(\"mock-user\");\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar w = \"9.17.1\";\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar m = new Logger(\"@firebase/firestore\");\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */\n\nfunction p(t) {\n  m.setLogLevel(t);\n}\n\nfunction y(t) {\n  if (m.logLevel <= LogLevel.DEBUG) {\n    for (var _len = arguments.length, e = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      e[_key - 1] = arguments[_key];\n    }\n\n    var n = e.map(v);\n    m.debug.apply(m, [\"Firestore (\".concat(w, \"): \").concat(t)].concat(_toConsumableArray(n)));\n  }\n}\n\nfunction g(t) {\n  if (m.logLevel <= LogLevel.ERROR) {\n    for (var _len2 = arguments.length, e = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      e[_key2 - 1] = arguments[_key2];\n    }\n\n    var n = e.map(v);\n    m.error.apply(m, [\"Firestore (\".concat(w, \"): \").concat(t)].concat(_toConsumableArray(n)));\n  }\n}\n/**\n * @internal\n */\n\n\nfunction _(t) {\n  if (m.logLevel <= LogLevel.WARN) {\n    for (var _len3 = arguments.length, e = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      e[_key3 - 1] = arguments[_key3];\n    }\n\n    var n = e.map(v);\n    m.warn.apply(m, [\"Firestore (\".concat(w, \"): \").concat(t)].concat(_toConsumableArray(n)));\n  }\n}\n/**\n * Converts an additional log parameter to a string representation.\n */\n\n\nfunction v(t) {\n  if (\"string\" == typeof t) return t;\n\n  try {\n    return e = t, JSON.stringify(e);\n  } catch (e) {\n    // Converting to JSON failed, just log the object directly\n    return t;\n  }\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  /** Formats an object as a JSON string, suitable for logging. */\n\n\n  var e;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */\n\n\nfunction b() {\n  var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Unexpected state\";\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  var e = \"FIRESTORE (\".concat(w, \") INTERNAL ASSERTION FAILED: \") + t; // NOTE: We don't use FirestoreError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n\n  throw g(e), new Error(e);\n}\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */\n\n\nfunction E(t, e) {\n  t || b();\n}\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */\n\n\nfunction I(t, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  return t;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar T = \"ok\",\n    A = \"cancelled\",\n    R = \"unknown\",\n    P = \"invalid-argument\",\n    V = \"deadline-exceeded\",\n    $ = \"not-found\",\n    N = \"already-exists\",\n    D = \"permission-denied\",\n    F = \"unauthenticated\",\n    x = \"resource-exhausted\",\n    S = \"failed-precondition\",\n    q = \"aborted\",\n    O = \"out-of-range\",\n    k = \"unimplemented\",\n    C = \"internal\",\n    L = \"unavailable\",\n    M = \"data-loss\";\n/** An error returned by a Firestore operation. */\n\nvar U = /*#__PURE__*/function (_FirebaseError) {\n  _inherits(U, _FirebaseError);\n\n  var _super = _createSuper(U);\n\n  /** @hideconstructor */\n  function U(\n  /**\n   * The backend error code associated with this error.\n   */\n  t,\n  /**\n   * A custom error description.\n   */\n  e) {\n    var _this;\n\n    _classCallCheck(this, U);\n\n    _this = _super.call(this, t, e), _this.code = t, _this.message = e, // HACK: We write a toString property directly because Error is not a real\n    // class and so inheritance does not work correctly. We could alternatively\n    // do the same \"back-door inheritance\" trick that FirebaseError does.\n    _this.toString = function () {\n      return \"\".concat(_this.name, \": [code=\").concat(_this.code, \"]: \").concat(_this.message);\n    };\n    return _this;\n  }\n\n  return _createClass(U);\n}(FirebaseError);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar j = /*#__PURE__*/_createClass(function j() {\n  var _this2 = this;\n\n  _classCallCheck(this, j);\n\n  this.promise = new Promise(function (t, e) {\n    _this2.resolve = t, _this2.reject = e;\n  });\n});\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar B = /*#__PURE__*/_createClass(function B(t, e) {\n  _classCallCheck(this, B);\n\n  this.user = e, this.type = \"OAuth\", this.headers = new Map(), this.headers.set(\"Authorization\", \"Bearer \".concat(t));\n});\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */\n\n\nvar Q = /*#__PURE__*/function () {\n  function Q() {\n    _classCallCheck(this, Q);\n  }\n\n  _createClass(Q, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return Promise.resolve(null);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, e) {\n      // Fire with initial user.\n      t.enqueueRetryable(function () {\n        return e(d.UNAUTHENTICATED);\n      });\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }]);\n\n  return Q;\n}();\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */\n\n\nvar z = /*#__PURE__*/function () {\n  function z(t) {\n    _classCallCheck(this, z);\n\n    this.token = t,\n    /**\n     * Stores the listener registered with setChangeListener()\n     * This isn't actually necessary since the UID never changes, but we use this\n     * to verify the listen contract is adhered to in tests.\n     */\n    this.changeListener = null;\n  }\n\n  _createClass(z, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return Promise.resolve(this.token);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, e) {\n      var _this3 = this;\n\n      this.changeListener = e, // Fire with initial user.\n      t.enqueueRetryable(function () {\n        return e(_this3.token.user);\n      });\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {\n      this.changeListener = null;\n    }\n  }]);\n\n  return z;\n}();\n/** Credential provider for the Lite SDK. */\n\n\nvar W = /*#__PURE__*/function () {\n  function W(t) {\n    var _this4 = this;\n\n    _classCallCheck(this, W);\n\n    this.auth = null, t.onInit(function (t) {\n      _this4.auth = t;\n    });\n  }\n\n  _createClass(W, [{\n    key: \"getToken\",\n    value: function getToken() {\n      var _this5 = this;\n\n      return this.auth ? this.auth.getToken().then(function (t) {\n        return t ? (E(\"string\" == typeof t.accessToken), new B(t.accessToken, new d(_this5.auth.getUid()))) : null;\n      }) : Promise.resolve(null);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, e) {}\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }]);\n\n  return W;\n}();\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */\n\n\nvar G = /*#__PURE__*/function () {\n  function G(t, e, n, r) {\n    _classCallCheck(this, G);\n\n    this.t = t, this.i = e, this.o = n, this.u = r, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, this.h = new Map();\n  }\n  /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */\n\n\n  _createClass(G, [{\n    key: \"l\",\n    value: function l() {\n      return this.u ? this.u() : ( // Make sure this really is a Gapi client.\n      E(!(\"object\" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), this.t.auth.getAuthHeaderValueForFirstParty([]));\n    }\n  }, {\n    key: \"headers\",\n    get: function get() {\n      this.h.set(\"X-Goog-AuthUser\", this.i); // Use array notation to prevent minification\n\n      var t = this.l();\n      return t && this.h.set(\"Authorization\", t), this.o && this.h.set(\"X-Goog-Iam-Authorization-Token\", this.o), this.h;\n    }\n  }]);\n\n  return G;\n}();\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */\n\n\nvar K = /*#__PURE__*/function () {\n  function K(t, e, n, r) {\n    _classCallCheck(this, K);\n\n    this.t = t, this.i = e, this.o = n, this.u = r;\n  }\n\n  _createClass(K, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return Promise.resolve(new G(this.t, this.i, this.o, this.u));\n    }\n  }, {\n    key: \"start\",\n    value: function start(t, e) {\n      // Fire with initial uid.\n      t.enqueueRetryable(function () {\n        return e(d.FIRST_PARTY);\n      });\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }]);\n\n  return K;\n}();\n\nvar Y = /*#__PURE__*/_createClass(function Y(t) {\n  _classCallCheck(this, Y);\n\n  this.value = t, this.type = \"AppCheck\", this.headers = new Map(), t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n});\n/** AppCheck token provider for the Lite SDK. */\n\n\nvar H = /*#__PURE__*/function () {\n  function H(t) {\n    var _this6 = this;\n\n    _classCallCheck(this, H);\n\n    this.m = t, this.appCheck = null, t.onInit(function (t) {\n      _this6.appCheck = t;\n    });\n  }\n\n  _createClass(H, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return this.appCheck ? this.appCheck.getToken().then(function (t) {\n        return t ? (E(\"string\" == typeof t.token), new Y(t.token)) : null;\n      }) : Promise.resolve(null);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, e) {}\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }]);\n\n  return H;\n}();\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar J = /*#__PURE__*/_createClass(\n/**\n * Constructs a DatabaseInfo using the provided host, databaseId and\n * persistenceKey.\n *\n * @param databaseId - The database to use.\n * @param appId - The Firebase App Id.\n * @param persistenceKey - A unique identifier for this Firestore's local\n * storage (used in conjunction with the databaseId).\n * @param host - The Firestore backend host to connect to.\n * @param ssl - Whether to use SSL when connecting.\n * @param forceLongPolling - Whether to use the forceLongPolling option\n * when using WebChannel as the network transport.\n * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n * option when using WebChannel as the network transport.\n * @param useFetchStreams Whether to use the Fetch API instead of\n * XMLHTTPRequest\n */\nfunction J(t, e, n, r, s, i, o, u) {\n  _classCallCheck(this, J);\n\n  this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n});\n/** The default database name for a project. */\n\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\n\n\nvar X = /*#__PURE__*/function () {\n  function X(t, e) {\n    _classCallCheck(this, X);\n\n    this.projectId = t, this.database = e || \"(default)\";\n  }\n\n  _createClass(X, [{\n    key: \"isDefaultDatabase\",\n    get: function get() {\n      return \"(default)\" === this.database;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof X && t.projectId === this.projectId && t.database === this.database;\n    }\n  }], [{\n    key: \"empty\",\n    value: function empty() {\n      return new X(\"\", \"\");\n    }\n  }]);\n\n  return X;\n}();\n/**\n * Path represents an ordered sequence of string segments.\n */\n\n\nvar Z = /*#__PURE__*/function () {\n  function Z(t, e, n) {\n    _classCallCheck(this, Z);\n\n    void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), this.segments = t, this.offset = e, this.len = n;\n  }\n\n  _createClass(Z, [{\n    key: \"length\",\n    get: function get() {\n      return this.len;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return 0 === Z.comparator(this, t);\n    }\n  }, {\n    key: \"child\",\n    value: function child(t) {\n      var e = this.segments.slice(this.offset, this.limit());\n      return t instanceof Z ? t.forEach(function (t) {\n        e.push(t);\n      }) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */\n\n  }, {\n    key: \"limit\",\n    value: function limit() {\n      return this.offset + this.length;\n    }\n  }, {\n    key: \"popFirst\",\n    value: function popFirst(t) {\n      return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n  }, {\n    key: \"popLast\",\n    value: function popLast() {\n      return this.construct(this.segments, this.offset, this.length - 1);\n    }\n  }, {\n    key: \"firstSegment\",\n    value: function firstSegment() {\n      return this.segments[this.offset];\n    }\n  }, {\n    key: \"lastSegment\",\n    value: function lastSegment() {\n      return this.get(this.length - 1);\n    }\n  }, {\n    key: \"get\",\n    value: function get(t) {\n      return this.segments[this.offset + t];\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return 0 === this.length;\n    }\n  }, {\n    key: \"isPrefixOf\",\n    value: function isPrefixOf(t) {\n      if (t.length < this.length) return !1;\n\n      for (var e = 0; e < this.length; e++) {\n        if (this.get(e) !== t.get(e)) return !1;\n      }\n\n      return !0;\n    }\n  }, {\n    key: \"isImmediateParentOf\",\n    value: function isImmediateParentOf(t) {\n      if (this.length + 1 !== t.length) return !1;\n\n      for (var e = 0; e < this.length; e++) {\n        if (this.get(e) !== t.get(e)) return !1;\n      }\n\n      return !0;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(t) {\n      for (var e = this.offset, n = this.limit(); e < n; e++) {\n        t(this.segments[e]);\n      }\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return this.segments.slice(this.offset, this.limit());\n    }\n  }], [{\n    key: \"comparator\",\n    value: function comparator(t, e) {\n      var n = Math.min(t.length, e.length);\n\n      for (var r = 0; r < n; r++) {\n        var _n2 = t.get(r),\n            s = e.get(r);\n\n        if (_n2 < s) return -1;\n        if (_n2 > s) return 1;\n      }\n\n      return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n  }]);\n\n  return Z;\n}();\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */\n\n\nvar tt = /*#__PURE__*/function (_Z) {\n  _inherits(tt, _Z);\n\n  var _super2 = _createSuper(tt);\n\n  function tt() {\n    _classCallCheck(this, tt);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(tt, [{\n    key: \"construct\",\n    value: function construct(t, e, n) {\n      return new tt(t, e, n);\n    }\n  }, {\n    key: \"canonicalString\",\n    value: function canonicalString() {\n      // NOTE: The client is ignorant of any path segments containing escape\n      // sequences (e.g. __id123__) and just passes them through raw (they exist\n      // for legacy reasons and should not be used frequently).\n      return this.toArray().join(\"/\");\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */\n\n  }], [{\n    key: \"fromString\",\n    value: function fromString() {\n      // NOTE: The client is ignorant of any path segments containing escape\n      // sequences (e.g. __id123__) and just passes them through raw (they exist\n      // for legacy reasons and should not be used frequently).\n      var e = [];\n\n      for (var _len4 = arguments.length, t = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        t[_key4] = arguments[_key4];\n      }\n\n      for (var _i = 0, _t2 = t; _i < _t2.length; _i++) {\n        var n = _t2[_i];\n        if (n.indexOf(\"//\") >= 0) throw new U(P, \"Invalid segment (\".concat(n, \"). Paths must not contain // in them.\")); // Strip leading and traling slashed.\n\n        e.push.apply(e, _toConsumableArray(n.split(\"/\").filter(function (t) {\n          return t.length > 0;\n        })));\n      }\n\n      return new tt(e);\n    }\n  }, {\n    key: \"emptyPath\",\n    value: function emptyPath() {\n      return new tt([]);\n    }\n  }]);\n\n  return tt;\n}(Z);\n\nvar et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */\n\nvar nt = /*#__PURE__*/function (_Z2) {\n  _inherits(nt, _Z2);\n\n  var _super3 = _createSuper(nt);\n\n  function nt() {\n    _classCallCheck(this, nt);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(nt, [{\n    key: \"construct\",\n    value: function construct(t, e, n) {\n      return new nt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */\n\n  }, {\n    key: \"canonicalString\",\n    value: function canonicalString() {\n      return this.toArray().map(function (t) {\n        return t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t;\n      }).join(\".\");\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */\n\n  }, {\n    key: \"isKeyField\",\n    value: function isKeyField() {\n      return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */\n\n  }], [{\n    key: \"isValidIdentifier\",\n    value: function isValidIdentifier(t) {\n      return et.test(t);\n    }\n  }, {\n    key: \"keyField\",\n    value: function keyField() {\n      return new nt([\"__name__\"]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */\n\n  }, {\n    key: \"fromServerFormat\",\n    value: function fromServerFormat(t) {\n      var e = [];\n      var n = \"\",\n          r = 0;\n\n      var s = function s() {\n        if (0 === n.length) throw new U(P, \"Invalid field path (\".concat(t, \"). Paths must not be empty, begin with '.', end with '.', or contain '..'\"));\n        e.push(n), n = \"\";\n      };\n\n      var i = !1;\n\n      for (; r < t.length;) {\n        var _e2 = t[r];\n\n        if (\"\\\\\" === _e2) {\n          if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n          var _e3 = t[r + 1];\n          if (\"\\\\\" !== _e3 && \".\" !== _e3 && \"`\" !== _e3) throw new U(P, \"Path has invalid escape sequence: \" + t);\n          n += _e3, r += 2;\n        } else \"`\" === _e2 ? (i = !i, r++) : \".\" !== _e2 || i ? (n += _e2, r++) : (s(), r++);\n      }\n\n      if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n      return new nt(e);\n    }\n  }, {\n    key: \"emptyPath\",\n    value: function emptyPath() {\n      return new nt([]);\n    }\n  }]);\n\n  return nt;\n}(Z);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @internal\n */\n\n\nvar rt = /*#__PURE__*/function () {\n  function rt(t) {\n    _classCallCheck(this, rt);\n\n    this.path = t;\n  }\n\n  _createClass(rt, [{\n    key: \"collectionGroup\",\n    get: function get() {\n      return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */\n\n  }, {\n    key: \"hasCollectionId\",\n    value: function hasCollectionId(t) {\n      return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */\n\n  }, {\n    key: \"getCollectionGroup\",\n    value: function getCollectionGroup() {\n      return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */\n\n  }, {\n    key: \"getCollectionPath\",\n    value: function getCollectionPath() {\n      return this.path.popLast();\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return null !== t && 0 === tt.comparator(this.path, t.path);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.path.toString();\n    }\n  }], [{\n    key: \"fromPath\",\n    value: function fromPath(t) {\n      return new rt(tt.fromString(t));\n    }\n  }, {\n    key: \"fromName\",\n    value: function fromName(t) {\n      return new rt(tt.fromString(t).popFirst(5));\n    }\n  }, {\n    key: \"empty\",\n    value: function empty() {\n      return new rt(tt.emptyPath());\n    }\n  }, {\n    key: \"comparator\",\n    value: function comparator(t, e) {\n      return tt.comparator(t.path, e.path);\n    }\n  }, {\n    key: \"isDocumentKey\",\n    value: function isDocumentKey(t) {\n      return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */\n\n  }, {\n    key: \"fromSegments\",\n    value: function fromSegments(t) {\n      return new rt(new tt(t.slice()));\n    }\n  }]);\n\n  return rt;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction st(t, e, n) {\n  if (!n) throw new U(P, \"Function \".concat(t, \"() cannot be called with an empty \").concat(e, \".\"));\n}\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\n\n\nfunction it(t) {\n  if (!rt.isDocumentKey(t)) throw new U(P, \"Invalid document reference. Document references must have an even number of segments, but \".concat(t, \" has \").concat(t.length, \".\"));\n}\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */\n\n\nfunction ot(t) {\n  if (rt.isDocumentKey(t)) throw new U(P, \"Invalid collection reference. Collection references must have an odd number of segments, but \".concat(t, \" has \").concat(t.length, \".\"));\n}\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n\n/** Returns a string describing the type / value of the provided input. */\n\n\nfunction ut(t) {\n  if (void 0 === t) return \"undefined\";\n  if (null === t) return \"null\";\n  if (\"string\" == typeof t) return t.length > 20 && (t = \"\".concat(t.substring(0, 20), \"...\")), JSON.stringify(t);\n  if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n\n  if (\"object\" == typeof t) {\n    if (t instanceof Array) return \"an array\";\n    {\n      var e =\n      /** try to get the constructor name for an object. */\n      function (t) {\n        if (t.constructor) return t.constructor.name;\n        return null;\n      }\n      /**\n      * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n      * underlying instance. Throws if  `obj` is not an instance of `T`.\n      *\n      * This cast is used in the Lite and Full SDK to verify instance types for\n      * arguments passed to the public API.\n      * @internal\n      */\n      (t);\n\n      return e ? \"a custom \".concat(e, \" object\") : \"an object\";\n    }\n  }\n\n  return \"function\" == typeof t ? \"a function\" : b();\n}\n\nfunction ct(t, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  if (\"_delegate\" in t && ( // Unwrap Compat types\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  t = t._delegate), !(t instanceof e)) {\n    if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n    {\n      var n = ut(t);\n      throw new U(P, \"Expected type '\".concat(e.name, \"', but it was: \").concat(n));\n    }\n  }\n\n  return t;\n}\n\nfunction at(t, e) {\n  if (e <= 0) throw new U(P, \"Function \".concat(t, \"() requires a positive number, but it was: \").concat(e, \".\"));\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns whether a variable is either undefined or null.\n */\n\n\nfunction ht(t) {\n  return null == t;\n}\n/** Returns whether the value represents -0. */\n\n\nfunction lt(t) {\n  // Detect if the value is -0.0. Based on polyfill from\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n  return 0 === t && 1 / t == -1 / 0;\n}\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar ft = {\n  BatchGetDocuments: \"batchGet\",\n  Commit: \"commit\",\n  RunQuery: \"runQuery\",\n  RunAggregationQuery: \"runAggregationQuery\"\n};\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\n\nvar dt, wt;\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\n\nfunction mt(t) {\n  if (void 0 === t) return g(\"RPC_ERROR\", \"HTTP error has no status\"), R; // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n  // status codes but the mapping is not bijective. In each case of ambiguity\n  // this function chooses a primary error.\n  // [1]\n  // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n\n  switch (t) {\n    case 200:\n      // OK\n      return T;\n\n    case 400:\n      // Bad Request\n      return S;\n    // Other possibilities based on the forward mapping\n    // return Code.INVALID_ARGUMENT;\n    // return Code.OUT_OF_RANGE;\n\n    case 401:\n      // Unauthorized\n      return F;\n\n    case 403:\n      // Forbidden\n      return D;\n\n    case 404:\n      // Not Found\n      return $;\n\n    case 409:\n      // Conflict\n      return q;\n    // Other possibilities:\n    // return Code.ALREADY_EXISTS;\n\n    case 416:\n      // Range Not Satisfiable\n      return O;\n\n    case 429:\n      // Too Many Requests\n      return x;\n\n    case 499:\n      // Client Closed Request\n      return A;\n\n    case 500:\n      // Internal Server Error\n      return R;\n    // Other possibilities:\n    // return Code.INTERNAL;\n    // return Code.DATA_LOSS;\n\n    case 501:\n      // Unimplemented\n      return k;\n\n    case 503:\n      // Service Unavailable\n      return L;\n\n    case 504:\n      // Gateway Timeout\n      return V;\n\n    default:\n      return t >= 200 && t < 300 ? T : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : R;\n  }\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */\n\n\n(wt = dt || (dt = {}))[wt.OK = 0] = \"OK\", wt[wt.CANCELLED = 1] = \"CANCELLED\", wt[wt.UNKNOWN = 2] = \"UNKNOWN\", wt[wt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", wt[wt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", wt[wt.NOT_FOUND = 5] = \"NOT_FOUND\", wt[wt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", wt[wt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", wt[wt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", wt[wt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", wt[wt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", wt[wt.ABORTED = 10] = \"ABORTED\", wt[wt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", wt[wt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", wt[wt.INTERNAL = 13] = \"INTERNAL\", wt[wt.UNAVAILABLE = 14] = \"UNAVAILABLE\", wt[wt.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nvar pt = /*#__PURE__*/function (_ref) {\n  _inherits(pt, _ref);\n\n  var _super4 = _createSuper(pt);\n\n  /**\n   * @param databaseInfo - The connection info.\n   * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n   */\n  function pt(t, e) {\n    var _this7;\n\n    _classCallCheck(this, pt);\n\n    _this7 = _super4.call(this, t), _this7.V = e;\n    return _this7;\n  }\n\n  _createClass(pt, [{\n    key: \"$\",\n    value: function $(t, e) {\n      throw new Error(\"Not supported by FetchConnection\");\n    }\n  }, {\n    key: \"R\",\n    value: function () {\n      var _R = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(t, e, n, r) {\n        var s, i, o, _e4, _t3, _e5;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                i = JSON.stringify(r);\n                _context.prev = 1;\n                _context.next = 4;\n                return this.V(e, {\n                  method: \"POST\",\n                  headers: n,\n                  body: i\n                });\n\n              case 4:\n                o = _context.sent;\n                _context.next = 11;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                _e4 = _context.t0;\n                throw new U(mt(_e4.status), \"Request failed with error: \" + _e4.statusText);\n\n              case 11:\n                if (o.ok) {\n                  _context.next = 18;\n                  break;\n                }\n\n                _context.next = 14;\n                return o.json();\n\n              case 14:\n                _t3 = _context.sent;\n                Array.isArray(_t3) && (_t3 = _t3[0]);\n                _e5 = null === (s = null == _t3 ? void 0 : _t3.error) || void 0 === s ? void 0 : s.message;\n                throw new U(mt(o.status), \"Request failed with error: \".concat(null != _e5 ? _e5 : o.statusText));\n\n              case 18:\n                return _context.abrupt(\"return\", o.json());\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 7]]);\n      }));\n\n      function R(_x, _x2, _x3, _x4) {\n        return _R.apply(this, arguments);\n      }\n\n      return R;\n    }()\n  }]);\n\n  return pt;\n}(\n/*#__PURE__*/\n\n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nfunction () {\n  function _class(t) {\n    _classCallCheck(this, _class);\n\n    this.databaseInfo = t, this.databaseId = t.databaseId;\n    var e = t.ssl ? \"https\" : \"http\";\n    this.p = e + \"://\" + t.host, this.g = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n  }\n\n  _createClass(_class, [{\n    key: \"v\",\n    get: function get() {\n      // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n      // where to run the query, and expect the `request` to NOT specify the \"path\".\n      return !1;\n    }\n  }, {\n    key: \"I\",\n    value: function I(t, e, n, r, s) {\n      var i = this.T(t, e);\n      y(\"RestConnection\", \"Sending: \", i, n);\n      var o = {};\n      return this.A(o, r, s), this.R(t, i, o, n).then(function (t) {\n        return y(\"RestConnection\", \"Received: \", t), t;\n      }, function (e) {\n        throw _(\"RestConnection\", \"\".concat(t, \" failed with error: \"), e, \"url: \", i, \"request:\", n), e;\n      });\n    }\n  }, {\n    key: \"P\",\n    value: function P(t, e, n, r, s, i) {\n      // The REST API automatically aggregates all of the streamed results, so we\n      // can just use the normal invoke() method.\n      return this.I(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */\n\n  }, {\n    key: \"A\",\n    value: function A(t, e, n) {\n      t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w, // Content-Type: text/plain will avoid preflight requests which might\n      // mess with CORS and redirects by proxies. If we add custom headers\n      // we will need to change this code to potentially use the $httpOverwrite\n      // parameter supported by ESF to avoid triggering preflight requests.\n      t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), e && e.headers.forEach(function (e, n) {\n        return t[n] = e;\n      }), n && n.headers.forEach(function (e, n) {\n        return t[n] = e;\n      });\n    }\n  }, {\n    key: \"T\",\n    value: function T(t, e) {\n      var n = ft[t];\n      return \"\".concat(this.p, \"/v1/\").concat(e, \":\").concat(n);\n    }\n  }]);\n\n  return _class;\n}());\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Initializes the HTTP connection for the REST API. */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\n\n\nfunction yt(t) {\n  // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n  var e = // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  \"undefined\" != typeof self && (self.crypto || self.msCrypto),\n      n = new Uint8Array(t);\n  if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n);else // Falls back to Math.random\n    for (var _e6 = 0; _e6 < t; _e6++) {\n      n[_e6] = Math.floor(256 * Math.random());\n    }\n  return n;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar gt = /*#__PURE__*/function () {\n  function gt() {\n    _classCallCheck(this, gt);\n  }\n\n  _createClass(gt, null, [{\n    key: \"N\",\n    value: function N() {\n      // Alphanumeric characters\n      var t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",\n          e = Math.floor(256 / t.length) * t.length; // The largest byte value that is a multiple of `char.length`.\n\n      var n = \"\";\n\n      for (; n.length < 20;) {\n        var r = yt(40);\n\n        for (var s = 0; s < r.length; ++s) {\n          // Only accept values that are [0, maxMultiple), this ensures they can\n          // be evenly mapped to indices of `chars` via a modulo operation.\n          n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n      }\n\n      return n;\n    }\n  }]);\n\n  return gt;\n}();\n\nfunction _t(t, e) {\n  return t < e ? -1 : t > e ? 1 : 0;\n}\n/** Helper to compare arrays using isEqual(). */\n\n\nfunction vt(t, e, n) {\n  return t.length === e.length && t.every(function (t, r) {\n    return n(t, e[r]);\n  });\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction bt(t) {\n  var e = 0;\n\n  for (var n in t) {\n    Object.prototype.hasOwnProperty.call(t, n) && e++;\n  }\n\n  return e;\n}\n\nfunction Et(t, e) {\n  for (var n in t) {\n    Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n  }\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\n\n\nvar It = /*#__PURE__*/function (_Symbol$iterator) {\n  function It(t) {\n    _classCallCheck(this, It);\n\n    this.binaryString = t;\n  }\n\n  _createClass(It, [{\n    key: _Symbol$iterator,\n    value: function value() {\n      var _this8 = this;\n\n      var t = 0;\n      return {\n        next: function next() {\n          return t < _this8.binaryString.length ? {\n            value: _this8.binaryString.charCodeAt(t++),\n            done: !1\n          } : {\n            value: void 0,\n            done: !0\n          };\n        }\n      };\n    }\n  }, {\n    key: \"toBase64\",\n    value: function toBase64() {\n      return t = this.binaryString, btoa(t);\n      /** Converts a binary string to a Base64 encoded string. */\n\n      var t;\n    }\n  }, {\n    key: \"toUint8Array\",\n    value: function toUint8Array() {\n      return function (t) {\n        var e = new Uint8Array(t.length);\n\n        for (var n = 0; n < t.length; n++) {\n          e[n] = t.charCodeAt(n);\n        }\n\n        return e;\n      }\n      /**\n      * @license\n      * Copyright 2020 Google LLC\n      *\n      * Licensed under the Apache License, Version 2.0 (the \"License\");\n      * you may not use this file except in compliance with the License.\n      * You may obtain a copy of the License at\n      *\n      *   http://www.apache.org/licenses/LICENSE-2.0\n      *\n      * Unless required by applicable law or agreed to in writing, software\n      * distributed under the License is distributed on an \"AS IS\" BASIS,\n      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      * See the License for the specific language governing permissions and\n      * limitations under the License.\n      */\n      // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n      (this.binaryString);\n    }\n  }, {\n    key: \"approximateByteSize\",\n    value: function approximateByteSize() {\n      return 2 * this.binaryString.length;\n    }\n  }, {\n    key: \"compareTo\",\n    value: function compareTo(t) {\n      return _t(this.binaryString, t.binaryString);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.binaryString === t.binaryString;\n    }\n  }], [{\n    key: \"fromBase64String\",\n    value: function fromBase64String(t) {\n      var e = atob(t);\n      return new It(e);\n    }\n  }, {\n    key: \"fromUint8Array\",\n    value: function fromUint8Array(t) {\n      // TODO(indexing); Remove the copy of the byte string here as this method\n      // is frequently called during indexing.\n      var e =\n      /**\n      * Helper function to convert an Uint8array to a binary string.\n      */\n      function (t) {\n        var e = \"\";\n\n        for (var n = 0; n < t.length; ++n) {\n          e += String.fromCharCode(t[n]);\n        }\n\n        return e;\n      }\n      /**\n      * Helper function to convert a binary string to an Uint8Array.\n      */\n      (t);\n\n      return new It(e);\n    }\n  }]);\n\n  return It;\n}(Symbol.iterator);\n\nIt.EMPTY_BYTE_STRING = new It(\"\");\nvar Tt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */\n\nfunction At(t) {\n  // The json interface (for the browser) will return an iso timestamp string,\n  // while the proto js library (for node) will return a\n  // google.protobuf.Timestamp instance.\n  if (E(!!t), \"string\" == typeof t) {\n    // The date string can have higher precision (nanos) than the Date class\n    // (millis), so we do some custom parsing here.\n    // Parse the nanos right out of the string.\n    var e = 0;\n    var n = Tt.exec(t);\n\n    if (E(!!n), n[1]) {\n      // Pad the fraction out to 9 digits (nanos).\n      var _t4 = n[1];\n      _t4 = (_t4 + \"000000000\").substr(0, 9), e = Number(_t4);\n    } // Parse the date to get the seconds.\n\n\n    var r = new Date(t);\n    return {\n      seconds: Math.floor(r.getTime() / 1e3),\n      nanos: e\n    };\n  }\n\n  return {\n    seconds: Rt(t.seconds),\n    nanos: Rt(t.nanos)\n  };\n}\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */\n\n\nfunction Rt(t) {\n  // TODO(bjornick): Handle int64 greater than 53 bits.\n  return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n/** Converts the possible Proto types for Blobs into a ByteString. */\n\n\nfunction Pt(t) {\n  return \"string\" == typeof t ? It.fromBase64String(t) : It.fromUint8Array(t);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\n\n\nvar Vt = /*#__PURE__*/function () {\n  /**\n   * Creates a new timestamp.\n   *\n   * @param seconds - The number of seconds of UTC time since Unix epoch\n   *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n   *     9999-12-31T23:59:59Z inclusive.\n   * @param nanoseconds - The non-negative fractions of a second at nanosecond\n   *     resolution. Negative second values with fractions must still have\n   *     non-negative nanoseconds values that count forward in time. Must be\n   *     from 0 to 999,999,999 inclusive.\n   */\n  function Vt(\n  /**\n   * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n   */\n  t,\n  /**\n   * The fractions of a second at nanosecond resolution.*\n   */\n  e) {\n    _classCallCheck(this, Vt);\n\n    if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n    if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n    if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t); // This will break in the year 10,000.\n\n    if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n  }\n  /**\n   * Creates a new timestamp with the current date, with millisecond precision.\n   *\n   * @returns a new timestamp representing the current date.\n   */\n\n\n  _createClass(Vt, [{\n    key: \"toDate\",\n    value:\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */\n    function toDate() {\n      return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */\n\n  }, {\n    key: \"toMillis\",\n    value: function toMillis() {\n      return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n  }, {\n    key: \"_compareTo\",\n    value: function _compareTo(t) {\n      return this.seconds === t.seconds ? _t(this.nanoseconds, t.nanoseconds) : _t(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        seconds: this.seconds,\n        nanoseconds: this.nanoseconds\n      };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */\n\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      // This method returns a string of the form <seconds>.<nanoseconds> where\n      // <seconds> is translated to have a non-negative value and both <seconds>\n      // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n      // Strings with this format then have a lexiographical ordering that matches\n      // the expected ordering. The <seconds> translation is done to avoid having\n      // a leading negative sign (i.e. a leading '-' character) in its string\n      // representation, which would affect its lexiographical ordering.\n      var t = this.seconds - -62135596800; // Note: Up to 12 decimal digits are required to represent all valid\n      // 'seconds' values.\n\n      return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n  }], [{\n    key: \"now\",\n    value: function now() {\n      return Vt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */\n\n  }, {\n    key: \"fromDate\",\n    value: function fromDate(t) {\n      return Vt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */\n\n  }, {\n    key: \"fromMillis\",\n    value: function fromMillis(t) {\n      var e = Math.floor(t / 1e3),\n          n = Math.floor(1e6 * (t - 1e3 * e));\n      return new Vt(e, n);\n    }\n  }]);\n\n  return Vt;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */\n\n\nfunction $t(t) {\n  var e, n;\n  return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */\n\n\nfunction Nt(t) {\n  var e = t.mapValue.fields.__previous_value__;\n  return $t(e) ? Nt(e) : e;\n}\n/**\n * Returns the local time at which this timestamp was first set.\n */\n\n\nfunction Dt(t) {\n  var e = At(t.mapValue.fields.__local_write_time__.timestampValue);\n  return new Vt(e.seconds, e.nanos);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Ft = {\n  fields: {\n    __type__: {\n      stringValue: \"__max__\"\n    }\n  }\n};\n/** Extracts the backend's type order for the provided value. */\n\nfunction xt(t) {\n  return \"nullValue\" in t ? 0\n  /* TypeOrder.NullValue */\n  : \"booleanValue\" in t ? 1\n  /* TypeOrder.BooleanValue */\n  : \"integerValue\" in t || \"doubleValue\" in t ? 2\n  /* TypeOrder.NumberValue */\n  : \"timestampValue\" in t ? 3\n  /* TypeOrder.TimestampValue */\n  : \"stringValue\" in t ? 5\n  /* TypeOrder.StringValue */\n  : \"bytesValue\" in t ? 6\n  /* TypeOrder.BlobValue */\n  : \"referenceValue\" in t ? 7\n  /* TypeOrder.RefValue */\n  : \"geoPointValue\" in t ? 8\n  /* TypeOrder.GeoPointValue */\n  : \"arrayValue\" in t ? 9\n  /* TypeOrder.ArrayValue */\n  : \"mapValue\" in t ? $t(t) ? 4\n  /* TypeOrder.ServerTimestampValue */\n  :\n  /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n  function (t) {\n    return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n  }\n  /**\n  * @license\n  * Copyright 2022 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  /**\n  * Represents a bound of a query.\n  *\n  * The bound is specified with the given components representing a position and\n  * whether it's just before or just after the position (relative to whatever the\n  * query order is).\n  *\n  * The position represents a logical index position for a query. It's a prefix\n  * of values for the (potentially implicit) order by clauses of a query.\n  *\n  * Bound provides a function to determine whether a document comes before or\n  * after a bound. This is influenced by whether the position is just before or\n  * just after the provided values.\n  */\n  (t) ? 9007199254740991\n  /* TypeOrder.MaxValue */\n  : 10\n  /* TypeOrder.ObjectValue */\n  : b();\n}\n/** Tests `left` and `right` for equality based on the backend semantics. */\n\n\nfunction St(t, e) {\n  if (t === e) return !0;\n  var n = xt(t);\n  if (n !== xt(e)) return !1;\n\n  switch (n) {\n    case 0\n    /* TypeOrder.NullValue */\n    :\n    case 9007199254740991\n    /* TypeOrder.MaxValue */\n    :\n      return !0;\n\n    case 1\n    /* TypeOrder.BooleanValue */\n    :\n      return t.booleanValue === e.booleanValue;\n\n    case 4\n    /* TypeOrder.ServerTimestampValue */\n    :\n      return Dt(t).isEqual(Dt(e));\n\n    case 3\n    /* TypeOrder.TimestampValue */\n    :\n      return function (t, e) {\n        if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) // Use string equality for ISO 8601 timestamps\n          return t.timestampValue === e.timestampValue;\n        var n = At(t.timestampValue),\n            r = At(e.timestampValue);\n        return n.seconds === r.seconds && n.nanos === r.nanos;\n      }(t, e);\n\n    case 5\n    /* TypeOrder.StringValue */\n    :\n      return t.stringValue === e.stringValue;\n\n    case 6\n    /* TypeOrder.BlobValue */\n    :\n      return function (t, e) {\n        return Pt(t.bytesValue).isEqual(Pt(e.bytesValue));\n      }(t, e);\n\n    case 7\n    /* TypeOrder.RefValue */\n    :\n      return t.referenceValue === e.referenceValue;\n\n    case 8\n    /* TypeOrder.GeoPointValue */\n    :\n      return function (t, e) {\n        return Rt(t.geoPointValue.latitude) === Rt(e.geoPointValue.latitude) && Rt(t.geoPointValue.longitude) === Rt(e.geoPointValue.longitude);\n      }(t, e);\n\n    case 2\n    /* TypeOrder.NumberValue */\n    :\n      return function (t, e) {\n        if (\"integerValue\" in t && \"integerValue\" in e) return Rt(t.integerValue) === Rt(e.integerValue);\n\n        if (\"doubleValue\" in t && \"doubleValue\" in e) {\n          var _n3 = Rt(t.doubleValue),\n              r = Rt(e.doubleValue);\n\n          return _n3 === r ? lt(_n3) === lt(r) : isNaN(_n3) && isNaN(r);\n        }\n\n        return !1;\n      }(t, e);\n\n    case 9\n    /* TypeOrder.ArrayValue */\n    :\n      return vt(t.arrayValue.values || [], e.arrayValue.values || [], St);\n\n    case 10\n    /* TypeOrder.ObjectValue */\n    :\n      return function (t, e) {\n        var n = t.mapValue.fields || {},\n            r = e.mapValue.fields || {};\n        if (bt(n) !== bt(r)) return !1;\n\n        for (var _t5 in n) {\n          if (n.hasOwnProperty(_t5) && (void 0 === r[_t5] || !St(n[_t5], r[_t5]))) return !1;\n        }\n\n        return !0;\n      }\n      /** Returns true if the ArrayValue contains the specified element. */\n      (t, e);\n\n    default:\n      return b();\n  }\n}\n\nfunction qt(t, e) {\n  return void 0 !== (t.values || []).find(function (t) {\n    return St(t, e);\n  });\n}\n\nfunction Ot(t, e) {\n  if (t === e) return 0;\n  var n = xt(t),\n      r = xt(e);\n  if (n !== r) return _t(n, r);\n\n  switch (n) {\n    case 0\n    /* TypeOrder.NullValue */\n    :\n    case 9007199254740991\n    /* TypeOrder.MaxValue */\n    :\n      return 0;\n\n    case 1\n    /* TypeOrder.BooleanValue */\n    :\n      return _t(t.booleanValue, e.booleanValue);\n\n    case 2\n    /* TypeOrder.NumberValue */\n    :\n      return function (t, e) {\n        var n = Rt(t.integerValue || t.doubleValue),\n            r = Rt(e.integerValue || e.doubleValue);\n        return n < r ? -1 : n > r ? 1 : n === r ? 0 : // one or both are NaN.\n        isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n      }(t, e);\n\n    case 3\n    /* TypeOrder.TimestampValue */\n    :\n      return kt(t.timestampValue, e.timestampValue);\n\n    case 4\n    /* TypeOrder.ServerTimestampValue */\n    :\n      return kt(Dt(t), Dt(e));\n\n    case 5\n    /* TypeOrder.StringValue */\n    :\n      return _t(t.stringValue, e.stringValue);\n\n    case 6\n    /* TypeOrder.BlobValue */\n    :\n      return function (t, e) {\n        var n = Pt(t),\n            r = Pt(e);\n        return n.compareTo(r);\n      }(t.bytesValue, e.bytesValue);\n\n    case 7\n    /* TypeOrder.RefValue */\n    :\n      return function (t, e) {\n        var n = t.split(\"/\"),\n            r = e.split(\"/\");\n\n        for (var _t6 = 0; _t6 < n.length && _t6 < r.length; _t6++) {\n          var _e7 = _t(n[_t6], r[_t6]);\n\n          if (0 !== _e7) return _e7;\n        }\n\n        return _t(n.length, r.length);\n      }(t.referenceValue, e.referenceValue);\n\n    case 8\n    /* TypeOrder.GeoPointValue */\n    :\n      return function (t, e) {\n        var n = _t(Rt(t.latitude), Rt(e.latitude));\n\n        if (0 !== n) return n;\n        return _t(Rt(t.longitude), Rt(e.longitude));\n      }(t.geoPointValue, e.geoPointValue);\n\n    case 9\n    /* TypeOrder.ArrayValue */\n    :\n      return function (t, e) {\n        var n = t.values || [],\n            r = e.values || [];\n\n        for (var _t7 = 0; _t7 < n.length && _t7 < r.length; ++_t7) {\n          var _e8 = Ot(n[_t7], r[_t7]);\n\n          if (_e8) return _e8;\n        }\n\n        return _t(n.length, r.length);\n      }(t.arrayValue, e.arrayValue);\n\n    case 10\n    /* TypeOrder.ObjectValue */\n    :\n      return function (t, e) {\n        if (t === Ft && e === Ft) return 0;\n        if (t === Ft) return 1;\n        if (e === Ft) return -1;\n        var n = t.fields || {},\n            r = Object.keys(n),\n            s = e.fields || {},\n            i = Object.keys(s); // Even though MapValues are likely sorted correctly based on their insertion\n        // order (e.g. when received from the backend), local modifications can bring\n        // elements out of order. We need to re-sort the elements to ensure that\n        // canonical IDs are independent of insertion order.\n\n        r.sort(), i.sort();\n\n        for (var _t8 = 0; _t8 < r.length && _t8 < i.length; ++_t8) {\n          var _e9 = _t(r[_t8], i[_t8]);\n\n          if (0 !== _e9) return _e9;\n          var o = Ot(n[r[_t8]], s[i[_t8]]);\n          if (0 !== o) return o;\n        }\n\n        return _t(r.length, i.length);\n      }\n      /** Returns a reference value for the provided database and key. */\n      (t.mapValue, e.mapValue);\n\n    default:\n      throw b();\n  }\n}\n\nfunction kt(t, e) {\n  if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return _t(t, e);\n\n  var n = At(t),\n      r = At(e),\n      s = _t(n.seconds, r.seconds);\n\n  return 0 !== s ? s : _t(n.nanos, r.nanos);\n}\n\nfunction Ct(t, e) {\n  return {\n    referenceValue: \"projects/\".concat(t.projectId, \"/databases/\").concat(t.database, \"/documents/\").concat(e.path.canonicalString())\n  };\n}\n/** Returns true if `value` is an ArrayValue. */\n\n\nfunction Lt(t) {\n  return !!t && \"arrayValue\" in t;\n}\n/** Returns true if `value` is a NullValue. */\n\n\nfunction Mt(t) {\n  return !!t && \"nullValue\" in t;\n}\n/** Returns true if `value` is NaN. */\n\n\nfunction Ut(t) {\n  return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n/** Returns true if `value` is a MapValue. */\n\n\nfunction jt(t) {\n  return !!t && \"mapValue\" in t;\n}\n/** Creates a deep copy of `source`. */\n\n\nfunction Bt(t) {\n  if (t.geoPointValue) return {\n    geoPointValue: Object.assign({}, t.geoPointValue)\n  };\n  if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n    timestampValue: Object.assign({}, t.timestampValue)\n  };\n\n  if (t.mapValue) {\n    var e = {\n      mapValue: {\n        fields: {}\n      }\n    };\n    return Et(t.mapValue.fields, function (t, n) {\n      return e.mapValue.fields[t] = Bt(n);\n    }), e;\n  }\n\n  if (t.arrayValue) {\n    var _e10 = {\n      arrayValue: {\n        values: []\n      }\n    };\n\n    for (var n = 0; n < (t.arrayValue.values || []).length; ++n) {\n      _e10.arrayValue.values[n] = Bt(t.arrayValue.values[n]);\n    }\n\n    return _e10;\n  }\n\n  return Object.assign({}, t);\n}\n\nvar Qt = /*#__PURE__*/_createClass(function Qt(t, e) {\n  _classCallCheck(this, Qt);\n\n  this.position = t, this.inclusive = e;\n});\n\nfunction zt(t, e) {\n  if (null === t) return null === e;\n  if (null === e) return !1;\n  if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n\n  for (var n = 0; n < t.position.length; n++) {\n    if (!St(t.position[n], e.position[n])) return !1;\n  }\n\n  return !0;\n}\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Wt = /*#__PURE__*/_createClass(function Wt() {\n  _classCallCheck(this, Wt);\n});\n\nvar Gt = /*#__PURE__*/function (_Wt) {\n  _inherits(Gt, _Wt);\n\n  var _super5 = _createSuper(Gt);\n\n  function Gt(t, e, n) {\n    var _this9;\n\n    _classCallCheck(this, Gt);\n\n    _this9 = _super5.call(this), _this9.field = t, _this9.op = e, _this9.value = n;\n    return _this9;\n  }\n  /**\n   * Creates a filter based on the provided arguments.\n   */\n\n\n  _createClass(Gt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = t.data.field(this.field); // Types do not have to match in NOT_EQUAL filters.\n\n      return \"!=\"\n      /* Operator.NOT_EQUAL */\n      === this.op ? null !== e && this.matchesComparison(Ot(e, this.value)) : null !== e && xt(this.value) === xt(e) && this.matchesComparison(Ot(e, this.value)); // Only compare types with matching backend order (such as double and int).\n    }\n  }, {\n    key: \"matchesComparison\",\n    value: function matchesComparison(t) {\n      switch (this.op) {\n        case \"<\"\n        /* Operator.LESS_THAN */\n        :\n          return t < 0;\n\n        case \"<=\"\n        /* Operator.LESS_THAN_OR_EQUAL */\n        :\n          return t <= 0;\n\n        case \"==\"\n        /* Operator.EQUAL */\n        :\n          return 0 === t;\n\n        case \"!=\"\n        /* Operator.NOT_EQUAL */\n        :\n          return 0 !== t;\n\n        case \">\"\n        /* Operator.GREATER_THAN */\n        :\n          return t > 0;\n\n        case \">=\"\n        /* Operator.GREATER_THAN_OR_EQUAL */\n        :\n          return t >= 0;\n\n        default:\n          return b();\n      }\n    }\n  }, {\n    key: \"isInequality\",\n    value: function isInequality() {\n      return [\"<\"\n      /* Operator.LESS_THAN */\n      , \"<=\"\n      /* Operator.LESS_THAN_OR_EQUAL */\n      , \">\"\n      /* Operator.GREATER_THAN */\n      , \">=\"\n      /* Operator.GREATER_THAN_OR_EQUAL */\n      , \"!=\"\n      /* Operator.NOT_EQUAL */\n      , \"not-in\"\n      /* Operator.NOT_IN */\n      ].indexOf(this.op) >= 0;\n    }\n  }, {\n    key: \"getFlattenedFilters\",\n    value: function getFlattenedFilters() {\n      return [this];\n    }\n  }, {\n    key: \"getFilters\",\n    value: function getFilters() {\n      return [this];\n    }\n  }, {\n    key: \"getFirstInequalityField\",\n    value: function getFirstInequalityField() {\n      return this.isInequality() ? this.field : null;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(t, e, n) {\n      return t.isKeyField() ? \"in\"\n      /* Operator.IN */\n      === e || \"not-in\"\n      /* Operator.NOT_IN */\n      === e ? this.createKeyFieldInFilter(t, e, n) : new Ht(t, e, n) : \"array-contains\"\n      /* Operator.ARRAY_CONTAINS */\n      === e ? new te(t, n) : \"in\"\n      /* Operator.IN */\n      === e ? new ee(t, n) : \"not-in\"\n      /* Operator.NOT_IN */\n      === e ? new ne(t, n) : \"array-contains-any\"\n      /* Operator.ARRAY_CONTAINS_ANY */\n      === e ? new re(t, n) : new Gt(t, e, n);\n    }\n  }, {\n    key: \"createKeyFieldInFilter\",\n    value: function createKeyFieldInFilter(t, e, n) {\n      return \"in\"\n      /* Operator.IN */\n      === e ? new Jt(t, n) : new Xt(t, n);\n    }\n  }]);\n\n  return Gt;\n}(Wt);\n\nvar Kt = /*#__PURE__*/function (_Wt2) {\n  _inherits(Kt, _Wt2);\n\n  var _super6 = _createSuper(Kt);\n\n  function Kt(t, e) {\n    var _this10;\n\n    _classCallCheck(this, Kt);\n\n    _this10 = _super6.call(this), _this10.filters = t, _this10.op = e, _this10.D = null;\n    return _this10;\n  }\n  /**\n   * Creates a filter based on the provided arguments.\n   */\n\n\n  _createClass(Kt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      return \"and\"\n      /* CompositeOperator.AND */\n      === this.op ? void 0 === this.filters.find(function (e) {\n        return !e.matches(t);\n      }) : void 0 !== this.filters.find(function (e) {\n        return e.matches(t);\n      });\n    }\n  }, {\n    key: \"getFlattenedFilters\",\n    value: function getFlattenedFilters() {\n      return null !== this.D || (this.D = this.filters.reduce(function (t, e) {\n        return t.concat(e.getFlattenedFilters());\n      }, [])), this.D;\n    } // Returns a mutable copy of `this.filters`\n\n  }, {\n    key: \"getFilters\",\n    value: function getFilters() {\n      return Object.assign([], this.filters);\n    }\n  }, {\n    key: \"getFirstInequalityField\",\n    value: function getFirstInequalityField() {\n      var t = this.F(function (t) {\n        return t.isInequality();\n      });\n      return null !== t ? t.field : null;\n    } // Performs a depth-first search to find and return the first FieldFilter in the composite filter\n    // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the\n    // predicate.\n\n  }, {\n    key: \"F\",\n    value: function F(t) {\n      var _iterator = _createForOfIteratorHelper(this.getFlattenedFilters()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var e = _step.value;\n          if (t(e)) return e;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return null;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(t, e) {\n      return new Kt(t, e);\n    }\n  }]);\n\n  return Kt;\n}(Wt);\n\nfunction Yt(t, e) {\n  return t instanceof Gt ? function (t, e) {\n    return e instanceof Gt && t.op === e.op && t.field.isEqual(e.field) && St(t.value, e.value);\n  }(t, e) : t instanceof Kt ? function (t, e) {\n    if (e instanceof Kt && t.op === e.op && t.filters.length === e.filters.length) {\n      return t.filters.reduce(function (t, n, r) {\n        return t && Yt(n, e.filters[r]);\n      }, !0);\n    }\n\n    return !1;\n  }\n  /** Filter that matches on key fields (i.e. '__name__'). */\n  (t, e) : void b();\n}\n\nvar Ht = /*#__PURE__*/function (_Gt) {\n  _inherits(Ht, _Gt);\n\n  var _super7 = _createSuper(Ht);\n\n  function Ht(t, e, n) {\n    var _this11;\n\n    _classCallCheck(this, Ht);\n\n    _this11 = _super7.call(this, t, e, n), _this11.key = rt.fromName(n.referenceValue);\n    return _this11;\n  }\n\n  _createClass(Ht, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = rt.comparator(t.key, this.key);\n      return this.matchesComparison(e);\n    }\n  }]);\n\n  return Ht;\n}(Gt);\n/** Filter that matches on key fields within an array. */\n\n\nvar Jt = /*#__PURE__*/function (_Gt2) {\n  _inherits(Jt, _Gt2);\n\n  var _super8 = _createSuper(Jt);\n\n  function Jt(t, e) {\n    var _this12;\n\n    _classCallCheck(this, Jt);\n\n    _this12 = _super8.call(this, t, \"in\"\n    /* Operator.IN */\n    , e), _this12.keys = Zt(\"in\"\n    /* Operator.IN */\n    , e);\n    return _this12;\n  }\n\n  _createClass(Jt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      return this.keys.some(function (e) {\n        return e.isEqual(t.key);\n      });\n    }\n  }]);\n\n  return Jt;\n}(Gt);\n/** Filter that matches on key fields not present within an array. */\n\n\nvar Xt = /*#__PURE__*/function (_Gt3) {\n  _inherits(Xt, _Gt3);\n\n  var _super9 = _createSuper(Xt);\n\n  function Xt(t, e) {\n    var _this13;\n\n    _classCallCheck(this, Xt);\n\n    _this13 = _super9.call(this, t, \"not-in\"\n    /* Operator.NOT_IN */\n    , e), _this13.keys = Zt(\"not-in\"\n    /* Operator.NOT_IN */\n    , e);\n    return _this13;\n  }\n\n  _createClass(Xt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      return !this.keys.some(function (e) {\n        return e.isEqual(t.key);\n      });\n    }\n  }]);\n\n  return Xt;\n}(Gt);\n\nfunction Zt(t, e) {\n  var n;\n  return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map(function (t) {\n    return rt.fromName(t.referenceValue);\n  });\n}\n/** A Filter that implements the array-contains operator. */\n\n\nvar te = /*#__PURE__*/function (_Gt4) {\n  _inherits(te, _Gt4);\n\n  var _super10 = _createSuper(te);\n\n  function te(t, e) {\n    _classCallCheck(this, te);\n\n    return _super10.call(this, t, \"array-contains\"\n    /* Operator.ARRAY_CONTAINS */\n    , e);\n  }\n\n  _createClass(te, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = t.data.field(this.field);\n      return Lt(e) && qt(e.arrayValue, this.value);\n    }\n  }]);\n\n  return te;\n}(Gt);\n/** A Filter that implements the IN operator. */\n\n\nvar ee = /*#__PURE__*/function (_Gt5) {\n  _inherits(ee, _Gt5);\n\n  var _super11 = _createSuper(ee);\n\n  function ee(t, e) {\n    _classCallCheck(this, ee);\n\n    return _super11.call(this, t, \"in\"\n    /* Operator.IN */\n    , e);\n  }\n\n  _createClass(ee, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = t.data.field(this.field);\n      return null !== e && qt(this.value.arrayValue, e);\n    }\n  }]);\n\n  return ee;\n}(Gt);\n/** A Filter that implements the not-in operator. */\n\n\nvar ne = /*#__PURE__*/function (_Gt6) {\n  _inherits(ne, _Gt6);\n\n  var _super12 = _createSuper(ne);\n\n  function ne(t, e) {\n    _classCallCheck(this, ne);\n\n    return _super12.call(this, t, \"not-in\"\n    /* Operator.NOT_IN */\n    , e);\n  }\n\n  _createClass(ne, [{\n    key: \"matches\",\n    value: function matches(t) {\n      if (qt(this.value.arrayValue, {\n        nullValue: \"NULL_VALUE\"\n      })) return !1;\n      var e = t.data.field(this.field);\n      return null !== e && !qt(this.value.arrayValue, e);\n    }\n  }]);\n\n  return ne;\n}(Gt);\n/** A Filter that implements the array-contains-any operator. */\n\n\nvar re = /*#__PURE__*/function (_Gt7) {\n  _inherits(re, _Gt7);\n\n  var _super13 = _createSuper(re);\n\n  function re(t, e) {\n    _classCallCheck(this, re);\n\n    return _super13.call(this, t, \"array-contains-any\"\n    /* Operator.ARRAY_CONTAINS_ANY */\n    , e);\n  }\n\n  _createClass(re, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var _this14 = this;\n\n      var e = t.data.field(this.field);\n      return !(!Lt(e) || !e.arrayValue.values) && e.arrayValue.values.some(function (t) {\n        return qt(_this14.value.arrayValue, t);\n      });\n    }\n  }]);\n\n  return re;\n}(Gt);\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */\n\n\nvar se = /*#__PURE__*/_createClass(function se(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n\n  _classCallCheck(this, se);\n\n  this.field = t, this.dir = e;\n});\n\nfunction ie(t, e) {\n  return t.dir === e.dir && t.field.isEqual(e.field);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */\n\n\nvar oe = /*#__PURE__*/function () {\n  function oe(t) {\n    _classCallCheck(this, oe);\n\n    this.timestamp = t;\n  }\n\n  _createClass(oe, [{\n    key: \"compareTo\",\n    value: function compareTo(t) {\n      return this.timestamp._compareTo(t.timestamp);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */\n\n  }, {\n    key: \"toMicroseconds\",\n    value: function toMicroseconds() {\n      // Convert to microseconds.\n      return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n  }, {\n    key: \"toTimestamp\",\n    value: function toTimestamp() {\n      return this.timestamp;\n    }\n  }], [{\n    key: \"fromTimestamp\",\n    value: function fromTimestamp(t) {\n      return new oe(t);\n    }\n  }, {\n    key: \"min\",\n    value: function min() {\n      return new oe(new Vt(0, 0));\n    }\n  }, {\n    key: \"max\",\n    value: function max() {\n      return new oe(new Vt(253402300799, 999999999));\n    }\n  }]);\n\n  return oe;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\n\n\nvar ue = /*#__PURE__*/function () {\n  function ue(t, e) {\n    _classCallCheck(this, ue);\n\n    this.comparator = t, this.root = e || ae.EMPTY;\n  } // Returns a copy of the map, with the specified key/value added or replaced.\n\n\n  _createClass(ue, [{\n    key: \"insert\",\n    value: function insert(t, e) {\n      return new ue(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, ae.BLACK, null, null));\n    } // Returns a copy of the map, with the specified key removed.\n\n  }, {\n    key: \"remove\",\n    value: function remove(t) {\n      return new ue(this.comparator, this.root.remove(t, this.comparator).copy(null, null, ae.BLACK, null, null));\n    } // Returns the value of the node with the given key, or null.\n\n  }, {\n    key: \"get\",\n    value: function get(t) {\n      var e = this.root;\n\n      for (; !e.isEmpty();) {\n        var n = this.comparator(t, e.key);\n        if (0 === n) return e.value;\n        n < 0 ? e = e.left : n > 0 && (e = e.right);\n      }\n\n      return null;\n    } // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n\n  }, {\n    key: \"indexOf\",\n    value: function indexOf(t) {\n      // Number of nodes that were pruned when descending right\n      var e = 0,\n          n = this.root;\n\n      for (; !n.isEmpty();) {\n        var r = this.comparator(t, n.key);\n        if (0 === r) return e + n.left.size;\n        r < 0 ? n = n.left : ( // Count all nodes left of the node plus the node itself\n        e += n.left.size + 1, n = n.right);\n      } // Node not found\n\n\n      return -1;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.root.isEmpty();\n    } // Returns the total number of nodes in the map.\n\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.root.size;\n    } // Returns the minimum key in the map.\n\n  }, {\n    key: \"minKey\",\n    value: function minKey() {\n      return this.root.minKey();\n    } // Returns the maximum key in the map.\n\n  }, {\n    key: \"maxKey\",\n    value: function maxKey() {\n      return this.root.maxKey();\n    } // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n\n  }, {\n    key: \"inorderTraversal\",\n    value: function inorderTraversal(t) {\n      return this.root.inorderTraversal(t);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(t) {\n      this.inorderTraversal(function (e, n) {\n        return t(e, n), !1;\n      });\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var t = [];\n      return this.inorderTraversal(function (e, n) {\n        return t.push(\"\".concat(e, \":\").concat(n)), !1;\n      }), \"{\".concat(t.join(\", \"), \"}\");\n    } // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n\n  }, {\n    key: \"reverseTraversal\",\n    value: function reverseTraversal(t) {\n      return this.root.reverseTraversal(t);\n    } // Returns an iterator over the SortedMap.\n\n  }, {\n    key: \"getIterator\",\n    value: function getIterator() {\n      return new ce(this.root, null, this.comparator, !1);\n    }\n  }, {\n    key: \"getIteratorFrom\",\n    value: function getIteratorFrom(t) {\n      return new ce(this.root, t, this.comparator, !1);\n    }\n  }, {\n    key: \"getReverseIterator\",\n    value: function getReverseIterator() {\n      return new ce(this.root, null, this.comparator, !0);\n    }\n  }, {\n    key: \"getReverseIteratorFrom\",\n    value: function getReverseIteratorFrom(t) {\n      return new ce(this.root, t, this.comparator, !0);\n    }\n  }]);\n\n  return ue;\n}(); // end SortedMap\n// An iterator over an LLRBNode.\n\n\nvar ce = /*#__PURE__*/function () {\n  function ce(t, e, n, r) {\n    _classCallCheck(this, ce);\n\n    this.isReverse = r, this.nodeStack = [];\n    var s = 1;\n\n    for (; !t.isEmpty();) {\n      if (s = e ? n(t.key, e) : 1, // flip the comparison if we're going in reverse\n      e && r && (s *= -1), s < 0) // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right;else {\n        if (0 === s) {\n          // This node is exactly equal to our start key. Push it on the stack,\n          // but stop iterating;\n          this.nodeStack.push(t);\n          break;\n        } // This node is greater than our start key, add it to the stack and move\n        // to the next one\n\n\n        this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n      }\n    }\n  }\n\n  _createClass(ce, [{\n    key: \"getNext\",\n    value: function getNext() {\n      var t = this.nodeStack.pop();\n      var e = {\n        key: t.key,\n        value: t.value\n      };\n      if (this.isReverse) for (t = t.left; !t.isEmpty();) {\n        this.nodeStack.push(t), t = t.right;\n      } else for (t = t.right; !t.isEmpty();) {\n        this.nodeStack.push(t), t = t.left;\n      }\n      return e;\n    }\n  }, {\n    key: \"hasNext\",\n    value: function hasNext() {\n      return this.nodeStack.length > 0;\n    }\n  }, {\n    key: \"peek\",\n    value: function peek() {\n      if (0 === this.nodeStack.length) return null;\n      var t = this.nodeStack[this.nodeStack.length - 1];\n      return {\n        key: t.key,\n        value: t.value\n      };\n    }\n  }]);\n\n  return ce;\n}(); // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\n\n\nvar ae = /*#__PURE__*/function () {\n  function ae(t, e, n, r, s) {\n    _classCallCheck(this, ae);\n\n    this.key = t, this.value = e, this.color = null != n ? n : ae.RED, this.left = null != r ? r : ae.EMPTY, this.right = null != s ? s : ae.EMPTY, this.size = this.left.size + 1 + this.right.size;\n  } // Returns a copy of the current node, optionally replacing pieces of it.\n\n\n  _createClass(ae, [{\n    key: \"copy\",\n    value: function copy(t, e, n, r, s) {\n      return new ae(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return !1;\n    } // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n\n  }, {\n    key: \"inorderTraversal\",\n    value: function inorderTraversal(t) {\n      return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    } // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n\n  }, {\n    key: \"reverseTraversal\",\n    value: function reverseTraversal(t) {\n      return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    } // Returns the minimum node in the tree.\n\n  }, {\n    key: \"min\",\n    value: function min() {\n      return this.left.isEmpty() ? this : this.left.min();\n    } // Returns the maximum key in the tree.\n\n  }, {\n    key: \"minKey\",\n    value: function minKey() {\n      return this.min().key;\n    } // Returns the maximum key in the tree.\n\n  }, {\n    key: \"maxKey\",\n    value: function maxKey() {\n      return this.right.isEmpty() ? this.key : this.right.maxKey();\n    } // Returns new tree, with the key/value added.\n\n  }, {\n    key: \"insert\",\n    value: function insert(t, e, n) {\n      var r = this;\n      var s = n(t, r.key);\n      return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), r.fixUp();\n    }\n  }, {\n    key: \"removeMin\",\n    value: function removeMin() {\n      if (this.left.isEmpty()) return ae.EMPTY;\n      var t = this;\n      return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), t.fixUp();\n    } // Returns new tree, with the specified item removed.\n\n  }, {\n    key: \"remove\",\n    value: function remove(t, e) {\n      var n,\n          r = this;\n      if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), r = r.copy(null, null, null, r.left.remove(t, e), null);else {\n        if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), 0 === e(t, r.key)) {\n          if (r.right.isEmpty()) return ae.EMPTY;\n          n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n        }\n\n        r = r.copy(null, null, null, null, r.right.remove(t, e));\n      }\n      return r.fixUp();\n    }\n  }, {\n    key: \"isRed\",\n    value: function isRed() {\n      return this.color;\n    } // Returns new tree after performing any needed rotations.\n\n  }, {\n    key: \"fixUp\",\n    value: function fixUp() {\n      var t = this;\n      return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n  }, {\n    key: \"moveRedLeft\",\n    value: function moveRedLeft() {\n      var t = this.colorFlip();\n      return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n  }, {\n    key: \"moveRedRight\",\n    value: function moveRedRight() {\n      var t = this.colorFlip();\n      return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n  }, {\n    key: \"rotateLeft\",\n    value: function rotateLeft() {\n      var t = this.copy(null, null, ae.RED, null, this.right.left);\n      return this.right.copy(null, null, this.color, t, null);\n    }\n  }, {\n    key: \"rotateRight\",\n    value: function rotateRight() {\n      var t = this.copy(null, null, ae.RED, this.left.right, null);\n      return this.left.copy(null, null, this.color, null, t);\n    }\n  }, {\n    key: \"colorFlip\",\n    value: function colorFlip() {\n      var t = this.left.copy(null, null, !this.left.color, null, null),\n          e = this.right.copy(null, null, !this.right.color, null, null);\n      return this.copy(null, null, !this.color, t, e);\n    } // For testing.\n\n  }, {\n    key: \"checkMaxDepth\",\n    value: function checkMaxDepth() {\n      var t = this.check();\n      return Math.pow(2, t) <= this.size + 1;\n    } // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n\n  }, {\n    key: \"check\",\n    value: function check() {\n      if (this.isRed() && this.left.isRed()) throw b();\n      if (this.right.isRed()) throw b();\n      var t = this.left.check();\n      if (t !== this.right.check()) throw b();\n      return t + (this.isRed() ? 0 : 1);\n    }\n  }]);\n\n  return ae;\n}(); // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nae.EMPTY = null, ae.RED = !0, ae.BLACK = !1; // end LLRBEmptyNode\n\nae.EMPTY = new (\n/*#__PURE__*/\n// Represents an empty node (a leaf node in the Red-Black Tree).\nfunction () {\n  function _class2() {\n    _classCallCheck(this, _class2);\n\n    this.size = 0;\n  }\n\n  _createClass(_class2, [{\n    key: \"key\",\n    get: function get() {\n      throw b();\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      throw b();\n    }\n  }, {\n    key: \"color\",\n    get: function get() {\n      throw b();\n    }\n  }, {\n    key: \"left\",\n    get: function get() {\n      throw b();\n    }\n  }, {\n    key: \"right\",\n    get: function get() {\n      throw b();\n    } // Returns a copy of the current node.\n\n  }, {\n    key: \"copy\",\n    value: function copy(t, e, n, r, s) {\n      return this;\n    } // Returns a copy of the tree, with the specified key/value added.\n\n  }, {\n    key: \"insert\",\n    value: function insert(t, e, n) {\n      return new ae(t, e);\n    } // Returns a copy of the tree, with the specified key removed.\n\n  }, {\n    key: \"remove\",\n    value: function remove(t, e) {\n      return this;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return !0;\n    }\n  }, {\n    key: \"inorderTraversal\",\n    value: function inorderTraversal(t) {\n      return !1;\n    }\n  }, {\n    key: \"reverseTraversal\",\n    value: function reverseTraversal(t) {\n      return !1;\n    }\n  }, {\n    key: \"minKey\",\n    value: function minKey() {\n      return null;\n    }\n  }, {\n    key: \"maxKey\",\n    value: function maxKey() {\n      return null;\n    }\n  }, {\n    key: \"isRed\",\n    value: function isRed() {\n      return !1;\n    } // For testing.\n\n  }, {\n    key: \"checkMaxDepth\",\n    value: function checkMaxDepth() {\n      return !0;\n    }\n  }, {\n    key: \"check\",\n    value: function check() {\n      return 0;\n    }\n  }]);\n\n  return _class2;\n}())();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\n\nvar he = /*#__PURE__*/function () {\n  function he(t) {\n    _classCallCheck(this, he);\n\n    this.comparator = t, this.data = new ue(this.comparator);\n  }\n\n  _createClass(he, [{\n    key: \"has\",\n    value: function has(t) {\n      return null !== this.data.get(t);\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.data.minKey();\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      return this.data.maxKey();\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.data.size;\n    }\n  }, {\n    key: \"indexOf\",\n    value: function indexOf(t) {\n      return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */\n\n  }, {\n    key: \"forEach\",\n    value: function forEach(t) {\n      this.data.inorderTraversal(function (e, n) {\n        return t(e), !1;\n      });\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */\n\n  }, {\n    key: \"forEachInRange\",\n    value: function forEachInRange(t, e) {\n      var n = this.data.getIteratorFrom(t[0]);\n\n      for (; n.hasNext();) {\n        var r = n.getNext();\n        if (this.comparator(r.key, t[1]) >= 0) return;\n        e(r.key);\n      }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */\n\n  }, {\n    key: \"forEachWhile\",\n    value: function forEachWhile(t, e) {\n      var n;\n\n      for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext();) {\n        if (!t(n.getNext().key)) return;\n      }\n    }\n    /** Finds the least element greater than or equal to `elem`. */\n\n  }, {\n    key: \"firstAfterOrEqual\",\n    value: function firstAfterOrEqual(t) {\n      var e = this.data.getIteratorFrom(t);\n      return e.hasNext() ? e.getNext().key : null;\n    }\n  }, {\n    key: \"getIterator\",\n    value: function getIterator() {\n      return new le(this.data.getIterator());\n    }\n  }, {\n    key: \"getIteratorFrom\",\n    value: function getIteratorFrom(t) {\n      return new le(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */\n\n  }, {\n    key: \"add\",\n    value: function add(t) {\n      return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.data.isEmpty();\n    }\n  }, {\n    key: \"unionWith\",\n    value: function unionWith(t) {\n      var e = this; // Make sure `result` always refers to the larger one of the two sets.\n\n      return e.size < t.size && (e = t, t = this), t.forEach(function (t) {\n        e = e.add(t);\n      }), e;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      if (!(t instanceof he)) return !1;\n      if (this.size !== t.size) return !1;\n      var e = this.data.getIterator(),\n          n = t.data.getIterator();\n\n      for (; e.hasNext();) {\n        var _t9 = e.getNext().key,\n            r = n.getNext().key;\n        if (0 !== this.comparator(_t9, r)) return !1;\n      }\n\n      return !0;\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      var t = [];\n      return this.forEach(function (e) {\n        t.push(e);\n      }), t;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var t = [];\n      return this.forEach(function (e) {\n        return t.push(e);\n      }), \"SortedSet(\" + t.toString() + \")\";\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(t) {\n      var e = new he(this.comparator);\n      return e.data = t, e;\n    }\n  }]);\n\n  return he;\n}();\n\nvar le = /*#__PURE__*/function () {\n  function le(t) {\n    _classCallCheck(this, le);\n\n    this.iter = t;\n  }\n\n  _createClass(le, [{\n    key: \"getNext\",\n    value: function getNext() {\n      return this.iter.getNext().key;\n    }\n  }, {\n    key: \"hasNext\",\n    value: function hasNext() {\n      return this.iter.hasNext();\n    }\n  }]);\n\n  return le;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */\n\n\nvar fe = /*#__PURE__*/function () {\n  function fe(t) {\n    _classCallCheck(this, fe);\n\n    this.fields = t, // TODO(dimond): validation of FieldMask\n    // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n    t.sort(nt.comparator);\n  }\n\n  _createClass(fe, [{\n    key: \"unionWith\",\n    value:\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */\n    function unionWith(t) {\n      var e = new he(nt.comparator);\n\n      var _iterator2 = _createForOfIteratorHelper(this.fields),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _t10 = _step2.value;\n          e = e.add(_t10);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      var _iterator3 = _createForOfIteratorHelper(t),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var n = _step3.value;\n          e = e.add(n);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return new fe(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */\n\n  }, {\n    key: \"covers\",\n    value: function covers(t) {\n      var _iterator4 = _createForOfIteratorHelper(this.fields),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var e = _step4.value;\n          if (e.isPrefixOf(t)) return !0;\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return !1;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return vt(this.fields, t.fields, function (t, e) {\n        return t.isEqual(e);\n      });\n    }\n  }], [{\n    key: \"empty\",\n    value: function empty() {\n      return new fe([]);\n    }\n  }]);\n\n  return fe;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */\n\n\nvar de = /*#__PURE__*/function () {\n  function de(t) {\n    _classCallCheck(this, de);\n\n    this.value = t;\n  }\n\n  _createClass(de, [{\n    key: \"field\",\n    value:\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */\n    function field(t) {\n      if (t.isEmpty()) return this.value;\n      {\n        var e = this.value;\n\n        for (var n = 0; n < t.length - 1; ++n) {\n          if (e = (e.mapValue.fields || {})[t.get(n)], !jt(e)) return null;\n        }\n\n        return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n      }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(t, e) {\n      this.getFieldsMap(t.popLast())[t.lastSegment()] = Bt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */\n\n  }, {\n    key: \"setAll\",\n    value: function setAll(t) {\n      var _this15 = this;\n\n      var e = nt.emptyPath(),\n          n = {},\n          r = [];\n      t.forEach(function (t, s) {\n        if (!e.isImmediateParentOf(s)) {\n          // Insert the accumulated changes at this parent location\n          var _t11 = _this15.getFieldsMap(e);\n\n          _this15.applyChanges(_t11, n, r), n = {}, r = [], e = s.popLast();\n        }\n\n        t ? n[s.lastSegment()] = Bt(t) : r.push(s.lastSegment());\n      });\n      var s = this.getFieldsMap(e);\n      this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      var e = this.field(t.popLast());\n      jt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return St(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */\n\n  }, {\n    key: \"getFieldsMap\",\n    value: function getFieldsMap(t) {\n      var e = this.value;\n      e.mapValue.fields || (e.mapValue = {\n        fields: {}\n      });\n\n      for (var n = 0; n < t.length; ++n) {\n        var r = e.mapValue.fields[t.get(n)];\n        jt(r) && r.mapValue.fields || (r = {\n          mapValue: {\n            fields: {}\n          }\n        }, e.mapValue.fields[t.get(n)] = r), e = r;\n      }\n\n      return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */\n\n  }, {\n    key: \"applyChanges\",\n    value: function applyChanges(t, e, n) {\n      Et(e, function (e, n) {\n        return t[e] = n;\n      });\n\n      var _iterator5 = _createForOfIteratorHelper(n),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _e11 = _step5.value;\n          delete t[_e11];\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new de(Bt(this.value));\n    }\n  }], [{\n    key: \"empty\",\n    value: function empty() {\n      return new de({\n        mapValue: {}\n      });\n    }\n  }]);\n\n  return de;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */\n\n\nvar we = /*#__PURE__*/function () {\n  function we(t, e, n, r, s, i, o) {\n    _classCallCheck(this, we);\n\n    this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.createTime = s, this.data = i, this.documentState = o;\n  }\n  /**\n   * Creates a document with no known version or data, but which can serve as\n   * base document for mutations.\n   */\n\n\n  _createClass(we, [{\n    key: \"convertToFoundDocument\",\n    value:\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */\n    function convertToFoundDocument(t, e) {\n      // If a document is switching state from being an invalid or deleted\n      // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n      // update from Watch or due to applying a local set mutation on top\n      // of a deleted document, our best guess about its createTime would be the\n      // version at which the document transitioned to a FOUND_DOCUMENT.\n      return !this.createTime.isEqual(oe.min()) || 2\n      /* DocumentType.NO_DOCUMENT */\n      !== this.documentType && 0\n      /* DocumentType.INVALID */\n      !== this.documentType || (this.createTime = t), this.version = t, this.documentType = 1\n      /* DocumentType.FOUND_DOCUMENT */\n      , this.data = e, this.documentState = 0\n      /* DocumentState.SYNCED */\n      , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */\n\n  }, {\n    key: \"convertToNoDocument\",\n    value: function convertToNoDocument(t) {\n      return this.version = t, this.documentType = 2\n      /* DocumentType.NO_DOCUMENT */\n      , this.data = de.empty(), this.documentState = 0\n      /* DocumentState.SYNCED */\n      , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */\n\n  }, {\n    key: \"convertToUnknownDocument\",\n    value: function convertToUnknownDocument(t) {\n      return this.version = t, this.documentType = 3\n      /* DocumentType.UNKNOWN_DOCUMENT */\n      , this.data = de.empty(), this.documentState = 2\n      /* DocumentState.HAS_COMMITTED_MUTATIONS */\n      , this;\n    }\n  }, {\n    key: \"setHasCommittedMutations\",\n    value: function setHasCommittedMutations() {\n      return this.documentState = 2\n      /* DocumentState.HAS_COMMITTED_MUTATIONS */\n      , this;\n    }\n  }, {\n    key: \"setHasLocalMutations\",\n    value: function setHasLocalMutations() {\n      return this.documentState = 1\n      /* DocumentState.HAS_LOCAL_MUTATIONS */\n      , this.version = oe.min(), this;\n    }\n  }, {\n    key: \"setReadTime\",\n    value: function setReadTime(t) {\n      return this.readTime = t, this;\n    }\n  }, {\n    key: \"hasLocalMutations\",\n    get: function get() {\n      return 1\n      /* DocumentState.HAS_LOCAL_MUTATIONS */\n      === this.documentState;\n    }\n  }, {\n    key: \"hasCommittedMutations\",\n    get: function get() {\n      return 2\n      /* DocumentState.HAS_COMMITTED_MUTATIONS */\n      === this.documentState;\n    }\n  }, {\n    key: \"hasPendingWrites\",\n    get: function get() {\n      return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n  }, {\n    key: \"isValidDocument\",\n    value: function isValidDocument() {\n      return 0\n      /* DocumentType.INVALID */\n      !== this.documentType;\n    }\n  }, {\n    key: \"isFoundDocument\",\n    value: function isFoundDocument() {\n      return 1\n      /* DocumentType.FOUND_DOCUMENT */\n      === this.documentType;\n    }\n  }, {\n    key: \"isNoDocument\",\n    value: function isNoDocument() {\n      return 2\n      /* DocumentType.NO_DOCUMENT */\n      === this.documentType;\n    }\n  }, {\n    key: \"isUnknownDocument\",\n    value: function isUnknownDocument() {\n      return 3\n      /* DocumentType.UNKNOWN_DOCUMENT */\n      === this.documentType;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof we && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n  }, {\n    key: \"mutableCopy\",\n    value: function mutableCopy() {\n      return new we(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Document(\".concat(this.key, \", \").concat(this.version, \", \").concat(JSON.stringify(this.data.value), \", {createTime: \").concat(this.createTime, \"}), {documentType: \").concat(this.documentType, \"}), {documentState: \").concat(this.documentState, \"})\");\n    }\n  }], [{\n    key: \"newInvalidDocument\",\n    value: function newInvalidDocument(t) {\n      return new we(t, 0\n      /* DocumentType.INVALID */\n      ,\n      /* version */\n      oe.min(),\n      /* readTime */\n      oe.min(),\n      /* createTime */\n      oe.min(), de.empty(), 0\n      /* DocumentState.SYNCED */\n      );\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */\n\n  }, {\n    key: \"newFoundDocument\",\n    value: function newFoundDocument(t, e, n, r) {\n      return new we(t, 1\n      /* DocumentType.FOUND_DOCUMENT */\n      ,\n      /* version */\n      e,\n      /* readTime */\n      oe.min(),\n      /* createTime */\n      n, r, 0\n      /* DocumentState.SYNCED */\n      );\n    }\n    /** Creates a new document that is known to not exist at the given version. */\n\n  }, {\n    key: \"newNoDocument\",\n    value: function newNoDocument(t, e) {\n      return new we(t, 2\n      /* DocumentType.NO_DOCUMENT */\n      ,\n      /* version */\n      e,\n      /* readTime */\n      oe.min(),\n      /* createTime */\n      oe.min(), de.empty(), 0\n      /* DocumentState.SYNCED */\n      );\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */\n\n  }, {\n    key: \"newUnknownDocument\",\n    value: function newUnknownDocument(t, e) {\n      return new we(t, 3\n      /* DocumentType.UNKNOWN_DOCUMENT */\n      ,\n      /* version */\n      e,\n      /* readTime */\n      oe.min(),\n      /* createTime */\n      oe.min(), de.empty(), 2\n      /* DocumentState.HAS_COMMITTED_MUTATIONS */\n      );\n    }\n  }]);\n\n  return we;\n}();\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\n\n\nvar me = /*#__PURE__*/_createClass(function me(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n\n  _classCallCheck(this, me);\n\n  this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, this.startAt = i, this.endAt = o, this.S = null;\n});\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */\n\n\nfunction pe(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  return new me(t, e, n, r, s, i, o);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\n\n\nvar ye = /*#__PURE__*/_createClass(\n/**\n * Initializes a Query with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n */\nfunction ye(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \"F\";\n  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  var u = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n\n  _classCallCheck(this, ye);\n\n  this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.q = null, // The corresponding `Target` of this `Query` instance.\n  this.O = null, this.startAt, this.endAt;\n});\n/** Creates a new Query for a query that matches all documents at `path` */\n\n\nfunction ge(t) {\n  return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction _e(t) {\n  var _iterator6 = _createForOfIteratorHelper(t.filters),\n      _step6;\n\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var e = _step6.value;\n\n      var _t12 = e.getFirstInequalityField();\n\n      if (null !== _t12) return _t12;\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n\n  return null;\n}\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\n\n\nfunction ve(t) {\n  return null !== t.collectionGroup;\n}\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */\n\n\nfunction be(t) {\n  var e = I(t);\n\n  if (null === e.q) {\n    e.q = [];\n\n    var _t13 = _e(e),\n        n = ge(e);\n\n    if (null !== _t13 && null === n) // In order to implicitly add key ordering, we must also add the\n      // inequality filter field for it to be a valid query.\n      // Note that the default inequality field and key ordering is ascending.\n      _t13.isKeyField() || e.q.push(new se(_t13)), e.q.push(new se(nt.keyField(), \"asc\"\n      /* Direction.ASCENDING */\n      ));else {\n      var _t14 = !1;\n\n      var _iterator7 = _createForOfIteratorHelper(e.explicitOrderBy),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var _n4 = _step7.value;\n          e.q.push(_n4), _n4.field.isKeyField() && (_t14 = !0);\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      if (!_t14) {\n        // The order of the implicit key ordering always matches the last\n        // explicit order by\n        var _t15 = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\"\n        /* Direction.ASCENDING */\n        ;\n\n        e.q.push(new se(nt.keyField(), _t15));\n      }\n    }\n  }\n\n  return e.q;\n}\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */\n\n\nfunction Ee(t) {\n  var e = I(t);\n  if (!e.O) if (\"F\"\n  /* LimitType.First */\n  === e.limitType) e.O = pe(e.path, e.collectionGroup, be(e), e.filters, e.limit, e.startAt, e.endAt);else {\n    // Flip the orderBy directions since we want the last results\n    var _t16 = [];\n\n    var _iterator8 = _createForOfIteratorHelper(be(e)),\n        _step8;\n\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var _n5 = _step8.value;\n\n        var _e12 = \"desc\"\n        /* Direction.DESCENDING */\n        === _n5.dir ? \"asc\"\n        /* Direction.ASCENDING */\n        : \"desc\"\n        /* Direction.DESCENDING */\n        ;\n\n        _t16.push(new se(_n5.field, _e12));\n      } // We need to swap the cursors to match the now-flipped query ordering.\n\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n\n    var n = e.endAt ? new Qt(e.endAt.position, e.endAt.inclusive) : null,\n        r = e.startAt ? new Qt(e.startAt.position, e.startAt.inclusive) : null; // Now return as a LimitType.First query.\n\n    e.O = pe(e.path, e.collectionGroup, _t16, e.filters, e.limit, n, r);\n  }\n  return e.O;\n}\n\nfunction Ie(t, e) {\n  e.getFirstInequalityField(), _e(t);\n  var n = t.filters.concat([e]);\n  return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n}\n\nfunction Te(t, e) {\n  return function (t, e) {\n    if (t.limit !== e.limit) return !1;\n    if (t.orderBy.length !== e.orderBy.length) return !1;\n\n    for (var n = 0; n < t.orderBy.length; n++) {\n      if (!ie(t.orderBy[n], e.orderBy[n])) return !1;\n    }\n\n    if (t.filters.length !== e.filters.length) return !1;\n\n    for (var _n6 = 0; _n6 < t.filters.length; _n6++) {\n      if (!Yt(t.filters[_n6], e.filters[_n6])) return !1;\n    }\n\n    return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!zt(t.startAt, e.startAt) && zt(t.endAt, e.endAt);\n  }(Ee(t), Ee(e)) && t.limitType === e.limitType;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\n\n\nfunction Ae(t, e) {\n  return function (t) {\n    return \"number\" == typeof t && Number.isInteger(t) && !lt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n  }(e) ?\n  /**\n  * Returns an IntegerValue for `value`.\n  */\n  function (t) {\n    return {\n      integerValue: \"\" + t\n    };\n  }(e) : function (t, e) {\n    if (t.k) {\n      if (isNaN(e)) return {\n        doubleValue: \"NaN\"\n      };\n      if (e === 1 / 0) return {\n        doubleValue: \"Infinity\"\n      };\n      if (e === -1 / 0) return {\n        doubleValue: \"-Infinity\"\n      };\n    }\n\n    return {\n      doubleValue: lt(e) ? \"-0\" : e\n    };\n  }(t, e);\n}\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Used to represent a field transform on a mutation. */\n\n\nvar Re = /*#__PURE__*/_createClass(function Re() {\n  _classCallCheck(this, Re);\n\n  // Make sure that the structural type of `TransformOperation` is unique.\n  // See https://github.com/microsoft/TypeScript/issues/5451\n  this._ = void 0;\n});\n/** Transforms a value into a server-generated timestamp. */\n\n\nvar Pe = /*#__PURE__*/function (_Re) {\n  _inherits(Pe, _Re);\n\n  var _super14 = _createSuper(Pe);\n\n  function Pe() {\n    _classCallCheck(this, Pe);\n\n    return _super14.apply(this, arguments);\n  }\n\n  return _createClass(Pe);\n}(Re);\n/** Transforms an array value via a union operation. */\n\n\nvar Ve = /*#__PURE__*/function (_Re2) {\n  _inherits(Ve, _Re2);\n\n  var _super15 = _createSuper(Ve);\n\n  function Ve(t) {\n    var _this16;\n\n    _classCallCheck(this, Ve);\n\n    _this16 = _super15.call(this), _this16.elements = t;\n    return _this16;\n  }\n\n  return _createClass(Ve);\n}(Re);\n/** Transforms an array value via a remove operation. */\n\n\nvar $e = /*#__PURE__*/function (_Re3) {\n  _inherits($e, _Re3);\n\n  var _super16 = _createSuper($e);\n\n  function $e(t) {\n    var _this17;\n\n    _classCallCheck(this, $e);\n\n    _this17 = _super16.call(this), _this17.elements = t;\n    return _this17;\n  }\n\n  return _createClass($e);\n}(Re);\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */\n\n\nvar Ne = /*#__PURE__*/function (_Re4) {\n  _inherits(Ne, _Re4);\n\n  var _super17 = _createSuper(Ne);\n\n  function Ne(t, e) {\n    var _this18;\n\n    _classCallCheck(this, Ne);\n\n    _this18 = _super17.call(this), _this18.C = t, _this18.L = e;\n    return _this18;\n  }\n\n  return _createClass(Ne);\n}(Re);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** A field path and the TransformOperation to perform upon it. */\n\n\nvar De = /*#__PURE__*/_createClass(function De(t, e) {\n  _classCallCheck(this, De);\n\n  this.field = t, this.transform = e;\n});\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */\n\n\nvar Fe = /*#__PURE__*/function () {\n  function Fe(t, e) {\n    _classCallCheck(this, Fe);\n\n    this.updateTime = t, this.exists = e;\n  }\n  /** Creates a new empty Precondition. */\n\n\n  _createClass(Fe, [{\n    key: \"isNone\",\n    get:\n    /** Returns whether this Precondition is empty. */\n    function get() {\n      return void 0 === this.updateTime && void 0 === this.exists;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n  }], [{\n    key: \"none\",\n    value: function none() {\n      return new Fe();\n    }\n    /** Creates a new Precondition with an exists flag. */\n\n  }, {\n    key: \"exists\",\n    value: function exists(t) {\n      return new Fe(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */\n\n  }, {\n    key: \"updateTime\",\n    value: function updateTime(t) {\n      return new Fe(t);\n    }\n  }]);\n\n  return Fe;\n}();\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */\n\n\nvar xe = /*#__PURE__*/_createClass(function xe() {\n  _classCallCheck(this, xe);\n});\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */\n\n\nvar Se = /*#__PURE__*/function (_xe) {\n  _inherits(Se, _xe);\n\n  var _super18 = _createSuper(Se);\n\n  function Se(t, e, n) {\n    var _this19;\n\n    var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n    _classCallCheck(this, Se);\n\n    _this19 = _super18.call(this), _this19.key = t, _this19.value = e, _this19.precondition = n, _this19.fieldTransforms = r, _this19.type = 0\n    /* MutationType.Set */\n    ;\n    return _this19;\n  }\n\n  _createClass(Se, [{\n    key: \"getFieldMask\",\n    value: function getFieldMask() {\n      return null;\n    }\n  }]);\n\n  return Se;\n}(xe);\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */\n\n\nvar qe = /*#__PURE__*/function (_xe2) {\n  _inherits(qe, _xe2);\n\n  var _super19 = _createSuper(qe);\n\n  function qe(t, e, n, r) {\n    var _this20;\n\n    var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n\n    _classCallCheck(this, qe);\n\n    _this20 = _super19.call(this), _this20.key = t, _this20.data = e, _this20.fieldMask = n, _this20.precondition = r, _this20.fieldTransforms = s, _this20.type = 1\n    /* MutationType.Patch */\n    ;\n    return _this20;\n  }\n\n  _createClass(qe, [{\n    key: \"getFieldMask\",\n    value: function getFieldMask() {\n      return this.fieldMask;\n    }\n  }]);\n\n  return qe;\n}(xe);\n/** A mutation that deletes the document at the given key. */\n\n\nvar Oe = /*#__PURE__*/function (_xe3) {\n  _inherits(Oe, _xe3);\n\n  var _super20 = _createSuper(Oe);\n\n  function Oe(t, e) {\n    var _this21;\n\n    _classCallCheck(this, Oe);\n\n    _this21 = _super20.call(this), _this21.key = t, _this21.precondition = e, _this21.type = 2\n    /* MutationType.Delete */\n    , _this21.fieldTransforms = [];\n    return _this21;\n  }\n\n  _createClass(Oe, [{\n    key: \"getFieldMask\",\n    value: function getFieldMask() {\n      return null;\n    }\n  }]);\n\n  return Oe;\n}(xe);\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */\n\n\nvar ke = /*#__PURE__*/function (_xe4) {\n  _inherits(ke, _xe4);\n\n  var _super21 = _createSuper(ke);\n\n  function ke(t, e) {\n    var _this22;\n\n    _classCallCheck(this, ke);\n\n    _this22 = _super21.call(this), _this22.key = t, _this22.precondition = e, _this22.type = 3\n    /* MutationType.Verify */\n    , _this22.fieldTransforms = [];\n    return _this22;\n  }\n\n  _createClass(ke, [{\n    key: \"getFieldMask\",\n    value: function getFieldMask() {\n      return null;\n    }\n  }]);\n\n  return ke;\n}(xe);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Ce = function () {\n  var t = {\n    asc: \"ASCENDING\",\n    desc: \"DESCENDING\"\n  };\n  return t;\n}(),\n    Le = function () {\n  var t = {\n    \"<\": \"LESS_THAN\",\n    \"<=\": \"LESS_THAN_OR_EQUAL\",\n    \">\": \"GREATER_THAN\",\n    \">=\": \"GREATER_THAN_OR_EQUAL\",\n    \"==\": \"EQUAL\",\n    \"!=\": \"NOT_EQUAL\",\n    \"array-contains\": \"ARRAY_CONTAINS\",\n    in: \"IN\",\n    \"not-in\": \"NOT_IN\",\n    \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n  };\n  return t;\n}(),\n    Me = function () {\n  var t = {\n    and: \"AND\",\n    or: \"OR\"\n  };\n  return t;\n}();\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\n\n\nvar Ue = /*#__PURE__*/_createClass(function Ue(t, e) {\n  _classCallCheck(this, Ue);\n\n  this.databaseId = t, this.k = e;\n});\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\n\n\nfunction je(t, e) {\n  if (t.k) {\n    return \"\".concat(new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\"), \".\").concat((\"000000000\" + e.nanoseconds).slice(-9), \"Z\");\n  }\n\n  return {\n    seconds: \"\" + e.seconds,\n    nanos: e.nanoseconds\n  };\n}\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\n\n\nfunction Be(t, e) {\n  return t.k ? e.toBase64() : e.toUint8Array();\n}\n\nfunction Qe(t, e) {\n  return je(t, e.toTimestamp());\n}\n\nfunction ze(t) {\n  return E(!!t), oe.fromTimestamp(function (t) {\n    var e = At(t);\n    return new Vt(e.seconds, e.nanos);\n  }(t));\n}\n\nfunction We(t, e) {\n  return function (t) {\n    return new tt([\"projects\", t.projectId, \"databases\", t.database]);\n  }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Ge(t, e) {\n  return We(t.databaseId, e.path);\n}\n\nfunction Ke(t, e) {\n  var n = function (t) {\n    var e = tt.fromString(t);\n    return E(cn(e)), e;\n  }(e);\n\n  if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n  if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n  return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n  var r;\n  /** Creates a Document proto from key and fields (but no create/update time) */\n}\n\nfunction Ye(t, e) {\n  return We(t.databaseId, e);\n}\n\nfunction He(t) {\n  return new tt([\"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database]).canonicalString();\n}\n\nfunction Je(t, e, n) {\n  return {\n    name: Ge(t, e),\n    fields: n.value.mapValue.fields\n  };\n}\n\nfunction Xe(t, e) {\n  return \"found\" in e ? function (t, e) {\n    E(!!e.found), e.found.name, e.found.updateTime;\n    var n = Ke(t, e.found.name),\n        r = ze(e.found.updateTime),\n        s = e.found.createTime ? ze(e.found.createTime) : oe.min(),\n        i = new de({\n      mapValue: {\n        fields: e.found.fields\n      }\n    });\n    return we.newFoundDocument(n, r, s, i);\n  }(t, e) : \"missing\" in e ? function (t, e) {\n    E(!!e.missing), E(!!e.readTime);\n    var n = Ke(t, e.missing),\n        r = ze(e.readTime);\n    return we.newNoDocument(n, r);\n  }(t, e) : b();\n}\n\nfunction Ze(t, e) {\n  var n;\n  if (e instanceof Se) n = {\n    update: Je(t, e.key, e.value)\n  };else if (e instanceof Oe) n = {\n    delete: Ge(t, e.key)\n  };else if (e instanceof qe) n = {\n    update: Je(t, e.key, e.data),\n    updateMask: un(e.fieldMask)\n  };else {\n    if (!(e instanceof ke)) return b();\n    n = {\n      verify: Ge(t, e.key)\n    };\n  }\n  return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map(function (t) {\n    return function (t, e) {\n      var n = e.transform;\n      if (n instanceof Pe) return {\n        fieldPath: e.field.canonicalString(),\n        setToServerValue: \"REQUEST_TIME\"\n      };\n      if (n instanceof Ve) return {\n        fieldPath: e.field.canonicalString(),\n        appendMissingElements: {\n          values: n.elements\n        }\n      };\n      if (n instanceof $e) return {\n        fieldPath: e.field.canonicalString(),\n        removeAllFromArray: {\n          values: n.elements\n        }\n      };\n      if (n instanceof Ne) return {\n        fieldPath: e.field.canonicalString(),\n        increment: n.L\n      };\n      throw b();\n    }(0, t);\n  })), e.precondition.isNone || (n.currentDocument = function (t, e) {\n    return void 0 !== e.updateTime ? {\n      updateTime: Qe(t, e.updateTime)\n    } : void 0 !== e.exists ? {\n      exists: e.exists\n    } : b();\n  }(t, e.precondition)), n;\n}\n\nfunction tn(t, e) {\n  // Dissect the path into parent, collectionId, and optional key filter.\n  var n = {\n    structuredQuery: {}\n  },\n      r = e.path;\n  null !== e.collectionGroup ? (n.parent = Ye(t, r), n.structuredQuery.from = [{\n    collectionId: e.collectionGroup,\n    allDescendants: !0\n  }]) : (n.parent = Ye(t, r.popLast()), n.structuredQuery.from = [{\n    collectionId: r.lastSegment()\n  }]);\n\n  var s = function (t) {\n    if (0 === t.length) return;\n    return on(Kt.create(t, \"and\"\n    /* CompositeOperator.AND */\n    ));\n  }(e.filters);\n\n  s && (n.structuredQuery.where = s);\n\n  var i = function (t) {\n    if (0 === t.length) return;\n    return t.map(function (t) {\n      return (// visible for testing\n        function (t) {\n          return {\n            field: sn(t.field),\n            direction: en(t.dir)\n          };\n        } // visible for testing\n        (t)\n      );\n    });\n  }(e.orderBy);\n\n  i && (n.structuredQuery.orderBy = i);\n\n  var o = function (t, e) {\n    return t.k || ht(e) ? e : {\n      value: e\n    };\n  }(t, e.limit);\n\n  var u;\n  return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n    before: (u = e.startAt).inclusive,\n    values: u.position\n  }), e.endAt && (n.structuredQuery.endAt = function (t) {\n    return {\n      before: !t.inclusive,\n      values: t.position\n    };\n  } // visible for testing\n  (e.endAt)), n;\n}\n\nfunction en(t) {\n  return Ce[t];\n} // visible for testing\n\n\nfunction nn(t) {\n  return Le[t];\n}\n\nfunction rn(t) {\n  return Me[t];\n}\n\nfunction sn(t) {\n  return {\n    fieldPath: t.canonicalString()\n  };\n}\n\nfunction on(t) {\n  return t instanceof Gt ? function (t) {\n    if (\"==\"\n    /* Operator.EQUAL */\n    === t.op) {\n      if (Ut(t.value)) return {\n        unaryFilter: {\n          field: sn(t.field),\n          op: \"IS_NAN\"\n        }\n      };\n      if (Mt(t.value)) return {\n        unaryFilter: {\n          field: sn(t.field),\n          op: \"IS_NULL\"\n        }\n      };\n    } else if (\"!=\"\n    /* Operator.NOT_EQUAL */\n    === t.op) {\n      if (Ut(t.value)) return {\n        unaryFilter: {\n          field: sn(t.field),\n          op: \"IS_NOT_NAN\"\n        }\n      };\n      if (Mt(t.value)) return {\n        unaryFilter: {\n          field: sn(t.field),\n          op: \"IS_NOT_NULL\"\n        }\n      };\n    }\n\n    return {\n      fieldFilter: {\n        field: sn(t.field),\n        op: nn(t.op),\n        value: t.value\n      }\n    };\n  }(t) : t instanceof Kt ? function (t) {\n    var e = t.getFilters().map(function (t) {\n      return on(t);\n    });\n    if (1 === e.length) return e[0];\n    return {\n      compositeFilter: {\n        op: rn(t.op),\n        filters: e\n      }\n    };\n  }(t) : b();\n}\n\nfunction un(t) {\n  var e = [];\n  return t.fields.forEach(function (t) {\n    return e.push(t.canonicalString());\n  }), {\n    fieldPaths: e\n  };\n}\n\nfunction cn(t) {\n  // Resource names have at least 4 components (project ID, database ID)\n  return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction an(t) {\n  return new Ue(t,\n  /* useProto3Json= */\n  !0);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\n\n\nvar hn = /*#__PURE__*/function () {\n  function hn(\n  /**\n   * The AsyncQueue to run backoff operations on.\n   */\n  t,\n  /**\n   * The ID to use when scheduling backoff operations on the AsyncQueue.\n   */\n  e) {\n    var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1e3;\n    var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1.5;\n    var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 6e4;\n\n    _classCallCheck(this, hn);\n\n    this.M = t, this.timerId = e, this.U = n, this.j = r, this.B = s, this.W = 0, this.G = null,\n    /** The last backoff attempt, as epoch milliseconds. */\n    this.K = Date.now(), this.reset();\n  }\n  /**\n   * Resets the backoff delay.\n   *\n   * The very next backoffAndWait() will have no delay. If it is called again\n   * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n   * subsequent ones will increase according to the backoffFactor.\n   */\n\n\n  _createClass(hn, [{\n    key: \"reset\",\n    value: function reset() {\n      this.W = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */\n\n  }, {\n    key: \"Y\",\n    value: function Y() {\n      this.W = this.B;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */\n\n  }, {\n    key: \"H\",\n    value: function H(t) {\n      var _this23 = this;\n\n      // Cancel any pending backoff operation.\n      this.cancel(); // First schedule using the current base (which may be 0 and should be\n      // honored as such).\n\n      var e = Math.floor(this.W + this.J()),\n          n = Math.max(0, Date.now() - this.K),\n          r = Math.max(0, e - n); // Guard against lastAttemptTime being in the future due to a clock change.\n\n      r > 0 && y(\"ExponentialBackoff\", \"Backing off for \".concat(r, \" ms (base delay: \").concat(this.W, \" ms, delay with jitter: \").concat(e, \" ms, last attempt: \").concat(n, \" ms ago)\")), this.G = this.M.enqueueAfterDelay(this.timerId, r, function () {\n        return _this23.K = Date.now(), t();\n      }), // Apply backoff factor to determine next delay and ensure it is within\n      // bounds.\n      this.W *= this.j, this.W < this.U && (this.W = this.U), this.W > this.B && (this.W = this.B);\n    }\n  }, {\n    key: \"X\",\n    value: function X() {\n      null !== this.G && (this.G.skipDelay(), this.G = null);\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      null !== this.G && (this.G.cancel(), this.G = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */\n\n  }, {\n    key: \"J\",\n    value: function J() {\n      return (Math.random() - .5) * this.W;\n    }\n  }]);\n\n  return hn;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\n\n\nvar ln = /*#__PURE__*/function (_ref2) {\n  _inherits(ln, _ref2);\n\n  var _super22 = _createSuper(ln);\n\n  function ln(t, e, n, r) {\n    var _this24;\n\n    _classCallCheck(this, ln);\n\n    _this24 = _super22.call(this), _this24.authCredentials = t, _this24.appCheckCredentials = e, _this24.connection = n, _this24.C = r, _this24.Z = !1;\n    return _this24;\n  }\n\n  _createClass(ln, [{\n    key: \"tt\",\n    value: function tt() {\n      if (this.Z) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */\n\n  }, {\n    key: \"I\",\n    value: function I(t, e, n) {\n      var _this25 = this;\n\n      return this.tt(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            r = _ref4[0],\n            s = _ref4[1];\n\n        return _this25.connection.I(t, e, n, r, s);\n      }).catch(function (t) {\n        throw \"FirebaseError\" === t.name ? (t.code === F && (_this25.authCredentials.invalidateToken(), _this25.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n      });\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */\n\n  }, {\n    key: \"P\",\n    value: function P(t, e, n, r) {\n      var _this26 = this;\n\n      return this.tt(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            s = _ref6[0],\n            i = _ref6[1];\n\n        return _this26.connection.P(t, e, n, s, i, r);\n      }).catch(function (t) {\n        throw \"FirebaseError\" === t.name ? (t.code === F && (_this26.authCredentials.invalidateToken(), _this26.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n      });\n    }\n  }, {\n    key: \"terminate\",\n    value: function terminate() {\n      this.Z = !0;\n    }\n  }]);\n\n  return ln;\n}( /*#__PURE__*/function () {\n  function _class3() {\n    _classCallCheck(this, _class3);\n  }\n\n  return _createClass(_class3);\n}()); // TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\n\n\nfunction fn(_x5, _x6) {\n  return _fn.apply(this, arguments);\n}\n\nfunction _fn() {\n  _fn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(t, e) {\n    var n, r, s;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            n = I(t), r = He(n.C) + \"/documents\", s = {\n              writes: e.map(function (t) {\n                return Ze(n.C, t);\n              })\n            };\n            _context7.next = 3;\n            return n.I(\"Commit\", r, s);\n\n          case 3:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _fn.apply(this, arguments);\n}\n\nfunction dn(_x7, _x8) {\n  return _dn.apply(this, arguments);\n}\n\nfunction _dn() {\n  _dn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(t, e) {\n    var n, r, s, i, o, u;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            n = I(t);\n            r = He(n.C) + \"/documents\";\n            s = {\n              documents: e.map(function (t) {\n                return Ge(n.C, t);\n              })\n            };\n            _context8.next = 5;\n            return n.P(\"BatchGetDocuments\", r, s, e.length);\n\n          case 5:\n            i = _context8.sent;\n            o = new Map();\n            i.forEach(function (t) {\n              var e = Xe(n.C, t);\n              o.set(e.key.toString(), e);\n            });\n            u = [];\n            return _context8.abrupt(\"return\", (e.forEach(function (t) {\n              var e = o.get(t.toString());\n              E(!!e), u.push(e);\n            }), u));\n\n          case 10:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _dn.apply(this, arguments);\n}\n\nfunction wn(_x9, _x10) {\n  return _wn.apply(this, arguments);\n}\n\nfunction _wn() {\n  _wn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(t, e) {\n    var n, r;\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            n = I(t), r = tn(n.C, Ee(e));\n            _context9.next = 3;\n            return n.P(\"RunQuery\", r.parent, {\n              structuredQuery: r.structuredQuery\n            });\n\n          case 3:\n            return _context9.abrupt(\"return\", _context9.sent.filter(function (t) {\n              return !!t.document;\n            }).map(function (t) {\n              return function (t, e, n) {\n                var r = Ke(t, e.name),\n                    s = ze(e.updateTime),\n                    i = e.createTime ? ze(e.createTime) : oe.min(),\n                    o = new de({\n                  mapValue: {\n                    fields: e.fields\n                  }\n                }),\n                    u = we.newFoundDocument(r, s, i, o);\n                return n && u.setHasCommittedMutations(), n ? u.setHasCommittedMutations() : u;\n              }(n.C, t.document, void 0);\n            }));\n\n          case 4:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _wn.apply(this, arguments);\n}\n\nfunction mn(_x11, _x12) {\n  return _mn.apply(this, arguments);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction _mn() {\n  _mn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(t, e) {\n    var n, r, s;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            n = I(t), r = function (t, e) {\n              var n = tn(t, e);\n              return {\n                structuredAggregationQuery: {\n                  aggregations: [{\n                    count: {},\n                    alias: \"count_alias\"\n                  }],\n                  structuredQuery: n.structuredQuery\n                },\n                parent: n.parent\n              };\n            }(n.C, Ee(e)), s = r.parent;\n            n.connection.v || delete r.parent;\n            _context10.next = 4;\n            return n.P(\"RunAggregationQuery\", s, r,\n            /*expectedResponseCount=*/\n            1);\n\n          case 4:\n            return _context10.abrupt(\"return\", _context10.sent.filter(function (t) {\n              return !!t.result;\n            }).map(function (t) {\n              return t.result.aggregateFields;\n            }));\n\n          case 5:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _mn.apply(this, arguments);\n}\n\nvar pn = new Map();\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\n\nfunction yn(t) {\n  if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n\n  if (!pn.has(t)) {\n    y(\"ComponentProvider\", \"Initializing Datastore\");\n\n    var i = function (t) {\n      return new pt(t, fetch.bind(null));\n    }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), new J(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))),\n        o = an(t._databaseId),\n        u = function (t, e, n, r) {\n      return new ln(t, e, n, r);\n    }(t._authCredentials, t._appCheckCredentials, i, o);\n\n    pn.set(t, u);\n  }\n\n  var e, n, r, s;\n  /**\n  * @license\n  * Copyright 2018 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  return pn.get(t);\n}\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\n\n\nvar gn = /*#__PURE__*/function () {\n  function gn(t) {\n    _classCallCheck(this, gn);\n\n    var e;\n\n    if (void 0 === t.host) {\n      if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n      this.host = \"firestore.googleapis.com\", this.ssl = true;\n    } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n\n    if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040;else {\n      if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n      this.cacheSizeBytes = t.cacheSizeBytes;\n    }\n    this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, this.useFetchStreams = !!t.useFetchStreams, function (t, e, n, r) {\n      if (!0 === e && !0 === r) throw new U(P, \"\".concat(t, \" and \").concat(n, \" cannot be used together.\"));\n    }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n  }\n\n  _createClass(gn, [{\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n  }]);\n\n  return gn;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */\n\n\nvar _n = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function _n(t, e, n, r) {\n    _classCallCheck(this, _n);\n\n    this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, this._app = r,\n    /**\n     * Whether it's a Firestore or Firestore Lite instance.\n     */\n    this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new gn({}), this._settingsFrozen = !1;\n  }\n  /**\n   * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n   * instance.\n   */\n\n\n  _createClass(_n, [{\n    key: \"app\",\n    get: function get() {\n      if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n      return this._app;\n    }\n  }, {\n    key: \"_initialized\",\n    get: function get() {\n      return this._settingsFrozen;\n    }\n  }, {\n    key: \"_terminated\",\n    get: function get() {\n      return void 0 !== this._terminateTask;\n    }\n  }, {\n    key: \"_setSettings\",\n    value: function _setSettings(t) {\n      if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n      this._settings = new gn(t), void 0 !== t.credentials && (this._authCredentials = function (t) {\n        if (!t) return new Q();\n\n        switch (t.type) {\n          case \"gapi\":\n            var e = t.client;\n            return new K(e, t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n          case \"provider\":\n            return t.client;\n\n          default:\n            throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n        }\n      }(t.credentials));\n    }\n  }, {\n    key: \"_getSettings\",\n    value: function _getSettings() {\n      return this._settings;\n    }\n  }, {\n    key: \"_freezeSettings\",\n    value: function _freezeSettings() {\n      return this._settingsFrozen = !0, this._settings;\n    }\n  }, {\n    key: \"_delete\",\n    value: function _delete() {\n      return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        app: this._app,\n        databaseId: this._databaseId,\n        settings: this._settings\n      };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */\n\n  }, {\n    key: \"_terminate\",\n    value: function _terminate() {\n      return function (t) {\n        var e = pn.get(t);\n        e && (y(\"ComponentProvider\", \"Removing Datastore\"), pn.delete(t), e.terminate());\n      }(this), Promise.resolve();\n    }\n  }]);\n\n  return _n;\n}();\n\nfunction vn(t, e, n) {\n  n || (n = \"(default)\");\n\n  var r = _getProvider(t, \"firestore/lite\");\n\n  if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n  return r.initialize({\n    options: e,\n    instanceIdentifier: n\n  });\n}\n\nfunction bn(e, n) {\n  var r = \"object\" == typeof e ? e : getApp(),\n      s = \"string\" == typeof e ? e : n || \"(default)\",\n      i = _getProvider(r, \"firestore/lite\").getImmediate({\n    identifier: s\n  });\n\n  if (!i._initialized) {\n    var t = getDefaultEmulatorHostnameAndPort(\"firestore\");\n    t && En.apply(void 0, [i].concat(_toConsumableArray(t)));\n  }\n\n  return i;\n}\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */\n\n\nfunction En(t, e, n) {\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var s;\n\n  var i = (t = ct(t, _n))._getSettings();\n\n  if (\"firestore.googleapis.com\" !== i.host && i.host !== e && _(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), t._setSettings(Object.assign(Object.assign({}, i), {\n    host: \"\".concat(e, \":\").concat(n),\n    ssl: !1\n  })), r.mockUserToken) {\n    var _e13, _n7;\n\n    if (\"string\" == typeof r.mockUserToken) _e13 = r.mockUserToken, _n7 = d.MOCK_USER;else {\n      // Let createMockUserToken validate first (catches common mistakes like\n      // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n      _e13 = createMockUserToken(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n\n      var _i2 = r.mockUserToken.sub || r.mockUserToken.user_id;\n\n      if (!_i2) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n      _n7 = new d(_i2);\n    }\n    t._authCredentials = new z(new B(_e13, _n7));\n  }\n}\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */\n\n\nfunction In(t) {\n  return t = ct(t, _n), _removeServiceInstance(t.app, \"firestore/lite\"), t._delete();\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\nvar Tn = /*#__PURE__*/_createClass(function Tn() {\n  _classCallCheck(this, Tn);\n\n  /** A type string to uniquely identify instances of this class. */\n  this.type = \"AggregateField\";\n});\n/**\n * The results of executing an aggregation query.\n */\n\n\nvar An = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function An(t, e) {\n    _classCallCheck(this, An);\n\n    this._data = e,\n    /** A type string to uniquely identify instances of this class. */\n    this.type = \"AggregateQuerySnapshot\", this.query = t;\n  }\n  /**\n   * Returns the results of the aggregations performed over the underlying\n   * query.\n   *\n   * The keys of the returned object will be the same as those of the\n   * `AggregateSpec` object specified to the aggregation method, and the values\n   * will be the corresponding aggregation result.\n   *\n   * @returns The results of the aggregations performed over the underlying\n   * query.\n   */\n\n\n  _createClass(An, [{\n    key: \"data\",\n    value: function data() {\n      return this._data;\n    }\n  }]);\n\n  return An;\n}();\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * CountQueryRunner encapsulates the logic needed to run the count aggregation\n * queries.\n */\n\n\nvar Rn = /*#__PURE__*/function () {\n  function Rn(t, e, n) {\n    _classCallCheck(this, Rn);\n\n    this.query = t, this.datastore = e, this.userDataWriter = n;\n  }\n\n  _createClass(Rn, [{\n    key: \"run\",\n    value: function run() {\n      var _this27 = this;\n\n      return mn(this.datastore, this.query._query).then(function (t) {\n        E(void 0 !== t[0]);\n        var e = Object.entries(t[0]).filter(function (_ref7) {\n          var _ref8 = _slicedToArray(_ref7, 2),\n              t = _ref8[0],\n              e = _ref8[1];\n\n          return \"count_alias\" === t;\n        }).map(function (_ref9) {\n          var _ref10 = _slicedToArray(_ref9, 2),\n              t = _ref10[0],\n              e = _ref10[1];\n\n          return _this27.userDataWriter.convertValue(e);\n        })[0];\n        return E(\"number\" == typeof e), Promise.resolve(new An(_this27.query, {\n          count: e\n        }));\n      });\n    }\n  }]);\n\n  return Rn;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\n\n\nvar Pn = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function Pn(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    _classCallCheck(this, Pn);\n\n    this.converter = e, this._key = n,\n    /** The type of this Firestore reference. */\n    this.type = \"document\", this.firestore = t;\n  }\n\n  _createClass(Pn, [{\n    key: \"_path\",\n    get: function get() {\n      return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */\n\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */\n\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return new $n(this.firestore, this.converter, this._key.path.popLast());\n    }\n  }, {\n    key: \"withConverter\",\n    value: function withConverter(t) {\n      return new Pn(this.firestore, t, this._key);\n    }\n  }]);\n\n  return Pn;\n}();\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */\n\n\nvar Vn = /*#__PURE__*/function () {\n  // This is the lite version of the Query class in the main SDK.\n\n  /** @hideconstructor protected */\n  function Vn(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    _classCallCheck(this, Vn);\n\n    this.converter = e, this._query = n,\n    /** The type of this Firestore reference. */\n    this.type = \"query\", this.firestore = t;\n  }\n\n  _createClass(Vn, [{\n    key: \"withConverter\",\n    value: function withConverter(t) {\n      return new Vn(this.firestore, t, this._query);\n    }\n  }]);\n\n  return Vn;\n}();\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */\n\n\nvar $n = /*#__PURE__*/function (_Vn) {\n  _inherits($n, _Vn);\n\n  var _super23 = _createSuper($n);\n\n  /** @hideconstructor */\n  function $n(t, e, n) {\n    var _this28;\n\n    _classCallCheck(this, $n);\n\n    _this28 = _super23.call(this, t, e, new ye(n)), _this28._path = n,\n    /** The type of this Firestore reference. */\n    _this28.type = \"collection\";\n    return _this28;\n  }\n  /** The collection's identifier. */\n\n\n  _createClass($n, [{\n    key: \"id\",\n    get: function get() {\n      return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */\n\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      var t = this._path.popLast();\n\n      return t.isEmpty() ? null : new Pn(this.firestore,\n      /* converter= */\n      null, new rt(t));\n    }\n  }, {\n    key: \"withConverter\",\n    value: function withConverter(t) {\n      return new $n(this.firestore, t, this._path);\n    }\n  }]);\n\n  return $n;\n}(Vn);\n\nfunction Nn(t, e) {\n  for (var _len5 = arguments.length, n = new Array(_len5 > 2 ? _len5 - 2 : 0), _key5 = 2; _key5 < _len5; _key5++) {\n    n[_key5 - 2] = arguments[_key5];\n  }\n\n  if (t = getModularInstance(t), st(\"collection\", \"path\", e), t instanceof _n) {\n    var r = tt.fromString.apply(tt, [e].concat(n));\n    return ot(r), new $n(t,\n    /* converter= */\n    null, r);\n  }\n\n  {\n    if (!(t instanceof Pn || t instanceof $n)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n\n    var _r2 = t._path.child(tt.fromString.apply(tt, [e].concat(n)));\n\n    return ot(_r2), new $n(t.firestore,\n    /* converter= */\n    null, _r2);\n  }\n} // TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */\n\n\nfunction Dn(t, e) {\n  if (t = ct(t, _n), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, \"Invalid collection ID '\".concat(e, \"' passed to function collectionGroup(). Collection IDs must not contain '/'.\"));\n  return new Vn(t,\n  /* converter= */\n  null, function (t) {\n    return new ye(tt.emptyPath(), t);\n  }(e));\n}\n\nfunction Fn(t, e) {\n  for (var _len6 = arguments.length, n = new Array(_len6 > 2 ? _len6 - 2 : 0), _key6 = 2; _key6 < _len6; _key6++) {\n    n[_key6 - 2] = arguments[_key6];\n  }\n\n  if (t = getModularInstance(t), // We allow omission of 'pathString' but explicitly prohibit passing in both\n  // 'undefined' and 'null'.\n  1 === arguments.length && (e = gt.N()), st(\"doc\", \"path\", e), t instanceof _n) {\n    var r = tt.fromString.apply(tt, [e].concat(n));\n    return it(r), new Pn(t,\n    /* converter= */\n    null, new rt(r));\n  }\n\n  {\n    if (!(t instanceof Pn || t instanceof $n)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n\n    var _r3 = t._path.child(tt.fromString.apply(tt, [e].concat(n)));\n\n    return it(_r3), new Pn(t.firestore, t instanceof $n ? t.converter : null, new rt(_r3));\n  }\n}\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\n\n\nfunction xn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), (t instanceof Pn || t instanceof $n) && (e instanceof Pn || e instanceof $n) && t.firestore === e.firestore && t.path === e.path && t.converter === e.converter;\n}\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\n\n\nfunction Sn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), t instanceof Vn && e instanceof Vn && t.firestore === e.firestore && Te(t._query, e._query) && t.converter === e.converter;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An immutable object representing an array of bytes.\n */\n\n\nvar qn = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function qn(t) {\n    _classCallCheck(this, qn);\n\n    this._byteString = t;\n  }\n  /**\n   * Creates a new `Bytes` object from the given Base64 string, converting it to\n   * bytes.\n   *\n   * @param base64 - The Base64 string used to create the `Bytes` object.\n   */\n\n\n  _createClass(qn, [{\n    key: \"toBase64\",\n    value:\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */\n    function toBase64() {\n      return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */\n\n  }, {\n    key: \"toUint8Array\",\n    value: function toUint8Array() {\n      return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this._byteString.isEqual(t._byteString);\n    }\n  }], [{\n    key: \"fromBase64String\",\n    value: function fromBase64String(t) {\n      try {\n        return new qn(It.fromBase64String(t));\n      } catch (t) {\n        throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n      }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */\n\n  }, {\n    key: \"fromUint8Array\",\n    value: function fromUint8Array(t) {\n      return new qn(It.fromUint8Array(t));\n    }\n  }]);\n\n  return qn;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */\n\n\nvar On = /*#__PURE__*/function () {\n  /**\n   * Creates a `FieldPath` from the provided field names. If more than one field\n   * name is provided, the path will point to a nested field in a document.\n   *\n   * @param fieldNames - A list of field names.\n   */\n  function On() {\n    _classCallCheck(this, On);\n\n    for (var _len7 = arguments.length, t = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      t[_key7] = arguments[_key7];\n    }\n\n    for (var e = 0; e < t.length; ++e) {\n      if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n    }\n\n    this._internalPath = new nt(t);\n  }\n  /**\n   * Returns true if this `FieldPath` is equal to the provided one.\n   *\n   * @param other - The `FieldPath` to compare against.\n   * @returns true if this `FieldPath` is equal to the provided one.\n   */\n\n\n  _createClass(On, [{\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this._internalPath.isEqual(t._internalPath);\n    }\n  }]);\n\n  return On;\n}();\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */\n\n\nfunction kn() {\n  return new On(\"__name__\");\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */\n\n\nvar Cn = /*#__PURE__*/_createClass(\n/**\n * @param _methodName - The public API endpoint that returns this class.\n * @hideconstructor\n */\nfunction Cn(t) {\n  _classCallCheck(this, Cn);\n\n  this._methodName = t;\n});\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */\n\n\nvar Ln = /*#__PURE__*/function () {\n  /**\n   * Creates a new immutable `GeoPoint` object with the provided latitude and\n   * longitude values.\n   * @param latitude - The latitude as number between -90 and 90.\n   * @param longitude - The longitude as number between -180 and 180.\n   */\n  function Ln(t, e) {\n    _classCallCheck(this, Ln);\n\n    if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n    if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n    this._lat = t, this._long = e;\n  }\n  /**\n   * The latitude of this `GeoPoint` instance.\n   */\n\n\n  _createClass(Ln, [{\n    key: \"latitude\",\n    get: function get() {\n      return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */\n\n  }, {\n    key: \"longitude\",\n    get: function get() {\n      return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        latitude: this._lat,\n        longitude: this._long\n      };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */\n\n  }, {\n    key: \"_compareTo\",\n    value: function _compareTo(t) {\n      return _t(this._lat, t._lat) || _t(this._long, t._long);\n    }\n  }]);\n\n  return Ln;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Mn = /^__.*__$/;\n/** The result of parsing document data (e.g. for a setData call). */\n\nvar Un = /*#__PURE__*/function () {\n  function Un(t, e, n) {\n    _classCallCheck(this, Un);\n\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n\n  _createClass(Un, [{\n    key: \"toMutation\",\n    value: function toMutation(t, e) {\n      return null !== this.fieldMask ? new qe(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Se(t, this.data, e, this.fieldTransforms);\n    }\n  }]);\n\n  return Un;\n}();\n/** The result of parsing \"update\" data (i.e. for an updateData call). */\n\n\nvar jn = /*#__PURE__*/function () {\n  function jn(t, // The fieldMask does not include document transforms.\n  e, n) {\n    _classCallCheck(this, jn);\n\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n\n  _createClass(jn, [{\n    key: \"toMutation\",\n    value: function toMutation(t, e) {\n      return new qe(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n  }]);\n\n  return jn;\n}();\n\nfunction Bn(t) {\n  switch (t) {\n    case 0\n    /* UserDataSource.Set */\n    : // fall through\n\n    case 2\n    /* UserDataSource.MergeSet */\n    : // fall through\n\n    case 1\n    /* UserDataSource.Update */\n    :\n      return !0;\n\n    case 3\n    /* UserDataSource.Argument */\n    :\n    case 4\n    /* UserDataSource.ArrayArgument */\n    :\n      return !1;\n\n    default:\n      throw b();\n  }\n}\n/** A \"context\" object passed around while parsing user data. */\n\n\nvar Qn = /*#__PURE__*/function () {\n  /**\n   * Initializes a ParseContext with the given source and path.\n   *\n   * @param settings - The settings for the parser.\n   * @param databaseId - The database ID of the Firestore instance.\n   * @param serializer - The serializer to use to generate the Value proto.\n   * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n   * rather than throw.\n   * @param fieldTransforms - A mutable list of field transforms encountered\n   * while parsing the data.\n   * @param fieldMask - A mutable list of field paths encountered while parsing\n   * the data.\n   *\n   * TODO(b/34871131): We don't support array paths right now, so path can be\n   * null to indicate the context represents any location within an array (in\n   * which case certain features will not work and errors will be somewhat\n   * compromised).\n   */\n  function Qn(t, e, n, r, s, i) {\n    _classCallCheck(this, Qn);\n\n    this.settings = t, this.databaseId = e, this.C = n, this.ignoreUndefinedProperties = r, // Minor hack: If fieldTransforms is undefined, we assume this is an\n    // external call and we need to validate the entire path.\n    void 0 === s && this.et(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n  }\n\n  _createClass(Qn, [{\n    key: \"path\",\n    get: function get() {\n      return this.settings.path;\n    }\n  }, {\n    key: \"nt\",\n    get: function get() {\n      return this.settings.nt;\n    }\n    /** Returns a new context with the specified settings overwritten. */\n\n  }, {\n    key: \"rt\",\n    value: function rt(t) {\n      return new Qn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.C, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n  }, {\n    key: \"st\",\n    value: function st(t) {\n      var e;\n      var n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n          r = this.rt({\n        path: n,\n        it: !1\n      });\n      return r.ot(t), r;\n    }\n  }, {\n    key: \"ut\",\n    value: function ut(t) {\n      var e;\n      var n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n          r = this.rt({\n        path: n,\n        it: !1\n      });\n      return r.et(), r;\n    }\n  }, {\n    key: \"ct\",\n    value: function ct(t) {\n      // TODO(b/34871131): We don't support array paths right now; so make path\n      // undefined.\n      return this.rt({\n        path: void 0,\n        it: !0\n      });\n    }\n  }, {\n    key: \"at\",\n    value: function at(t) {\n      return hr(t, this.settings.methodName, this.settings.ht || !1, this.path, this.settings.lt);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */\n\n  }, {\n    key: \"contains\",\n    value: function contains(t) {\n      return void 0 !== this.fieldMask.find(function (e) {\n        return t.isPrefixOf(e);\n      }) || void 0 !== this.fieldTransforms.find(function (e) {\n        return t.isPrefixOf(e.field);\n      });\n    }\n  }, {\n    key: \"et\",\n    value: function et() {\n      // TODO(b/34871131): Remove null check once we have proper paths for fields\n      // within arrays.\n      if (this.path) for (var t = 0; t < this.path.length; t++) {\n        this.ot(this.path.get(t));\n      }\n    }\n  }, {\n    key: \"ot\",\n    value: function ot(t) {\n      if (0 === t.length) throw this.at(\"Document fields must not be empty\");\n      if (Bn(this.nt) && Mn.test(t)) throw this.at('Document fields cannot begin and end with \"__\"');\n    }\n  }]);\n\n  return Qn;\n}();\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */\n\n\nvar zn = /*#__PURE__*/function () {\n  function zn(t, e, n) {\n    _classCallCheck(this, zn);\n\n    this.databaseId = t, this.ignoreUndefinedProperties = e, this.C = n || an(t);\n  }\n  /** Creates a new top-level parse context. */\n\n\n  _createClass(zn, [{\n    key: \"ft\",\n    value: function ft(t, e, n) {\n      var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n      return new Qn({\n        nt: t,\n        methodName: e,\n        lt: n,\n        path: nt.emptyPath(),\n        it: !1,\n        ht: r\n      }, this.databaseId, this.C, this.ignoreUndefinedProperties);\n    }\n  }]);\n\n  return zn;\n}();\n\nfunction Wn(t) {\n  var e = t._freezeSettings(),\n      n = an(t._databaseId);\n\n  return new zn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n/** Parse document data from a set() call. */\n\n\nfunction Gn(t, e, n, r, s) {\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var o = t.ft(i.merge || i.mergeFields ? 2\n  /* UserDataSource.MergeSet */\n  : 0\n  /* UserDataSource.Set */\n  , e, n, s);\n  or(\"Data must be an object, but it was:\", o, r);\n  var u = sr(r, o);\n  var c, a;\n  if (i.merge) c = new fe(o.fieldMask), a = o.fieldTransforms;else if (i.mergeFields) {\n    var _t17 = [];\n\n    var _iterator9 = _createForOfIteratorHelper(i.mergeFields),\n        _step9;\n\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var _r4 = _step9.value;\n\n        var _s = ur(e, _r4, n);\n\n        if (!o.contains(_s)) throw new U(P, \"Field '\".concat(_s, \"' is specified in your field mask but missing from your input data.\"));\n        lr(_t17, _s) || _t17.push(_s);\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n\n    c = new fe(_t17), a = o.fieldTransforms.filter(function (t) {\n      return c.covers(t.field);\n    });\n  } else c = null, a = o.fieldTransforms;\n  return new Un(new de(u), c, a);\n}\n\nvar Kn = /*#__PURE__*/function (_Cn) {\n  _inherits(Kn, _Cn);\n\n  var _super24 = _createSuper(Kn);\n\n  function Kn() {\n    _classCallCheck(this, Kn);\n\n    return _super24.apply(this, arguments);\n  }\n\n  _createClass(Kn, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      if (2\n      /* UserDataSource.MergeSet */\n      !== t.nt) throw 1\n      /* UserDataSource.Update */\n      === t.nt ? t.at(\"\".concat(this._methodName, \"() can only appear at the top level of your update data\")) : t.at(\"\".concat(this._methodName, \"() cannot be used with set() unless you pass {merge:true}\")); // No transform to add for a delete, but we need to add it to our\n      // fieldMask so it gets deleted.\n\n      return t.fieldMask.push(t.path), null;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof Kn;\n    }\n  }]);\n\n  return Kn;\n}(Cn);\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */\n\n\nfunction Yn(t, e, n) {\n  return new Qn({\n    nt: 3\n    /* UserDataSource.Argument */\n    ,\n    lt: e.settings.lt,\n    methodName: t._methodName,\n    it: n\n  }, e.databaseId, e.C, e.ignoreUndefinedProperties);\n}\n\nvar Hn = /*#__PURE__*/function (_Cn2) {\n  _inherits(Hn, _Cn2);\n\n  var _super25 = _createSuper(Hn);\n\n  function Hn() {\n    _classCallCheck(this, Hn);\n\n    return _super25.apply(this, arguments);\n  }\n\n  _createClass(Hn, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      return new De(t.path, new Pe());\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof Hn;\n    }\n  }]);\n\n  return Hn;\n}(Cn);\n\nvar Jn = /*#__PURE__*/function (_Cn3) {\n  _inherits(Jn, _Cn3);\n\n  var _super26 = _createSuper(Jn);\n\n  function Jn(t, e) {\n    var _this29;\n\n    _classCallCheck(this, Jn);\n\n    _this29 = _super26.call(this, t), _this29.dt = e;\n    return _this29;\n  }\n\n  _createClass(Jn, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      var e = Yn(this, t,\n      /*array=*/\n      !0),\n          n = this.dt.map(function (t) {\n        return rr(t, e);\n      }),\n          r = new Ve(n);\n      return new De(t.path, r);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      // TODO(mrschmidt): Implement isEquals\n      return this === t;\n    }\n  }]);\n\n  return Jn;\n}(Cn);\n\nvar Xn = /*#__PURE__*/function (_Cn4) {\n  _inherits(Xn, _Cn4);\n\n  var _super27 = _createSuper(Xn);\n\n  function Xn(t, e) {\n    var _this30;\n\n    _classCallCheck(this, Xn);\n\n    _this30 = _super27.call(this, t), _this30.dt = e;\n    return _this30;\n  }\n\n  _createClass(Xn, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      var e = Yn(this, t,\n      /*array=*/\n      !0),\n          n = this.dt.map(function (t) {\n        return rr(t, e);\n      }),\n          r = new $e(n);\n      return new De(t.path, r);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      // TODO(mrschmidt): Implement isEquals\n      return this === t;\n    }\n  }]);\n\n  return Xn;\n}(Cn);\n\nvar Zn = /*#__PURE__*/function (_Cn5) {\n  _inherits(Zn, _Cn5);\n\n  var _super28 = _createSuper(Zn);\n\n  function Zn(t, e) {\n    var _this31;\n\n    _classCallCheck(this, Zn);\n\n    _this31 = _super28.call(this, t), _this31.wt = e;\n    return _this31;\n  }\n\n  _createClass(Zn, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      var e = new Ne(t.C, Ae(t.C, this.wt));\n      return new De(t.path, e);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      // TODO(mrschmidt): Implement isEquals\n      return this === t;\n    }\n  }]);\n\n  return Zn;\n}(Cn);\n/** Parse update data from an update() call. */\n\n\nfunction tr(t, e, n, r) {\n  var s = t.ft(1\n  /* UserDataSource.Update */\n  , e, n);\n  or(\"Data must be an object, but it was:\", s, r);\n  var i = [],\n      o = de.empty();\n  Et(r, function (t, r) {\n    var u = ar(e, t, n); // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n\n    r = getModularInstance(r);\n    var c = s.ut(u);\n    if (r instanceof Kn) // Add it to the field mask, but don't add anything to updateData.\n      i.push(u);else {\n      var _t18 = rr(r, c);\n\n      null != _t18 && (i.push(u), o.set(u, _t18));\n    }\n  });\n  var u = new fe(i);\n  return new jn(o, u, s.fieldTransforms);\n}\n/** Parse update data from a list of field/value arguments. */\n\n\nfunction er(t, e, n, r, s, i) {\n  var o = t.ft(1\n  /* UserDataSource.Update */\n  , e, n),\n      u = [ur(e, r, n)],\n      c = [s];\n  if (i.length % 2 != 0) throw new U(P, \"Function \".concat(e, \"() needs to be called with an even number of arguments that alternate between field names and values.\"));\n\n  for (var _t19 = 0; _t19 < i.length; _t19 += 2) {\n    u.push(ur(e, i[_t19])), c.push(i[_t19 + 1]);\n  }\n\n  var a = [],\n      h = de.empty(); // We iterate in reverse order to pick the last value for a field if the\n  // user specified the field multiple times.\n\n  for (var _t20 = u.length - 1; _t20 >= 0; --_t20) {\n    if (!lr(a, u[_t20])) {\n      var _e14 = u[_t20];\n      var _n8 = c[_t20]; // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n\n      _n8 = getModularInstance(_n8);\n\n      var _r5 = o.ut(_e14);\n\n      if (_n8 instanceof Kn) // Add it to the field mask, but don't add anything to updateData.\n        a.push(_e14);else {\n        var _t21 = rr(_n8, _r5);\n\n        null != _t21 && (a.push(_e14), h.set(_e14, _t21));\n      }\n    }\n  }\n\n  var f = new fe(a);\n  return new jn(h, f, o.fieldTransforms);\n}\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */\n\n\nfunction nr(t, e, n) {\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n  return rr(n, t.ft(r ? 4\n  /* UserDataSource.ArrayArgument */\n  : 3\n  /* UserDataSource.Argument */\n  , e));\n}\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */\n\n\nfunction rr(t, e) {\n  if (ir( // Unwrap the API type from the Compat SDK. This will return the API type\n  // from firestore-exp.\n  t = getModularInstance(t))) return or(\"Unsupported field value:\", e, t), sr(t, e);\n  if (t instanceof Cn) // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n\n    /**\n    * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n    * context.fieldTransforms.\n    */\n    return function (t, e) {\n      // Sentinels are only supported with writes, and not within arrays.\n      if (!Bn(e.nt)) throw e.at(\"\".concat(t._methodName, \"() can only be used with update() and set()\"));\n      if (!e.path) throw e.at(\"\".concat(t._methodName, \"() is not currently supported inside arrays\"));\n\n      var n = t._toFieldTransform(e);\n\n      n && e.fieldTransforms.push(n);\n    }\n    /**\n    * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n    *\n    * @returns The parsed value\n    */\n    (t, e), null;\n  if (void 0 === t && e.ignoreUndefinedProperties) // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n\n  if ( // If context.path is null we are inside an array and we don't support\n  // field mask paths more granular than the top-level array.\n  e.path && e.fieldMask.push(e.path), t instanceof Array) {\n    // TODO(b/34871131): Include the path containing the array in the error\n    // message.\n    // In the case of IN queries, the parsed data is an array (representing\n    // the set of values to be included for the IN query) that may directly\n    // contain additional arrays (each representing an individual field\n    // value), so we disable this validation.\n    if (e.settings.it && 4\n    /* UserDataSource.ArrayArgument */\n    !== e.nt) throw e.at(\"Nested arrays are not supported\");\n    return function (t, e) {\n      var n = [];\n      var r = 0;\n\n      var _iterator10 = _createForOfIteratorHelper(t),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var s = _step10.value;\n\n          var _t22 = rr(s, e.ct(r));\n\n          null == _t22 && ( // Just include nulls in the array for fields being replaced with a\n          // sentinel.\n          _t22 = {\n            nullValue: \"NULL_VALUE\"\n          }), n.push(_t22), r++;\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n\n      return {\n        arrayValue: {\n          values: n\n        }\n      };\n    }(t, e);\n  }\n\n  return function (t, e) {\n    if (null === (t = getModularInstance(t))) return {\n      nullValue: \"NULL_VALUE\"\n    };\n    if (\"number\" == typeof t) return Ae(e.C, t);\n    if (\"boolean\" == typeof t) return {\n      booleanValue: t\n    };\n    if (\"string\" == typeof t) return {\n      stringValue: t\n    };\n\n    if (t instanceof Date) {\n      var n = Vt.fromDate(t);\n      return {\n        timestampValue: je(e.C, n)\n      };\n    }\n\n    if (t instanceof Vt) {\n      // Firestore backend truncates precision down to microseconds. To ensure\n      // offline mode works the same with regards to truncation, perform the\n      // truncation immediately without waiting for the backend to do that.\n      var _n9 = new Vt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n\n      return {\n        timestampValue: je(e.C, _n9)\n      };\n    }\n\n    if (t instanceof Ln) return {\n      geoPointValue: {\n        latitude: t.latitude,\n        longitude: t.longitude\n      }\n    };\n    if (t instanceof qn) return {\n      bytesValue: Be(e.C, t._byteString)\n    };\n\n    if (t instanceof Pn) {\n      var _n10 = e.databaseId,\n          r = t.firestore._databaseId;\n      if (!r.isEqual(_n10)) throw e.at(\"Document reference is for database \".concat(r.projectId, \"/\").concat(r.database, \" but should be for database \").concat(_n10.projectId, \"/\").concat(_n10.database));\n      return {\n        referenceValue: We(t.firestore._databaseId || e.databaseId, t._key.path)\n      };\n    }\n\n    throw e.at(\"Unsupported field value: \".concat(ut(t)));\n  }\n  /**\n  * Checks whether an object looks like a JSON object that should be converted\n  * into a struct. Normal class/prototype instances are considered to look like\n  * JSON objects since they should be converted to a struct value. Arrays, Dates,\n  * GeoPoints, etc. are not considered to look like JSON objects since they map\n  * to specific FieldValue types other than ObjectValue.\n  */\n  (t, e);\n}\n\nfunction sr(t, e) {\n  var n = {};\n  return !function (t) {\n    for (var _e15 in t) {\n      if (Object.prototype.hasOwnProperty.call(t, _e15)) return !1;\n    }\n\n    return !0;\n  }\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  /** Converts a Base64 encoded string to a binary string. */\n  (t) ? Et(t, function (t, r) {\n    var s = rr(r, e.st(t));\n    null != s && (n[t] = s);\n  }) : // If we encounter an empty object, we explicitly add it to the update\n  // mask to ensure that the server creates a map entry.\n  e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n    mapValue: {\n      fields: n\n    }\n  };\n}\n\nfunction ir(t) {\n  return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof Vt || t instanceof Ln || t instanceof qn || t instanceof Pn || t instanceof Cn);\n}\n\nfunction or(t, e, n) {\n  if (!ir(n) || !function (t) {\n    return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n  }(n)) {\n    var r = ut(n);\n    throw \"an object\" === r ? e.at(t + \" a custom object\") : e.at(t + \" \" + r);\n  }\n}\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */\n\n\nfunction ur(t, e, n) {\n  if (( // If required, replace the FieldPath Compat class with with the firestore-exp\n  // FieldPath.\n  e = getModularInstance(e)) instanceof On) return e._internalPath;\n  if (\"string\" == typeof e) return ar(t, e);\n  throw hr(\"Field path arguments must be of type string or \", t,\n  /* hasConverter= */\n  !1,\n  /* path= */\n  void 0, n);\n}\n/**\n * Matches any characters in a field path string that are reserved.\n */\n\n\nvar cr = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */\n\nfunction ar(t, e, n) {\n  if (e.search(cr) >= 0) throw hr(\"Invalid field path (\".concat(e, \"). Paths must not contain '~', '*', '/', '[', or ']'\"), t,\n  /* hasConverter= */\n  !1,\n  /* path= */\n  void 0, n);\n\n  try {\n    return _construct(On, _toConsumableArray(e.split(\".\")))._internalPath;\n  } catch (r) {\n    throw hr(\"Invalid field path (\".concat(e, \"). Paths must not be empty, begin with '.', end with '.', or contain '..'\"), t,\n    /* hasConverter= */\n    !1,\n    /* path= */\n    void 0, n);\n  }\n}\n\nfunction hr(t, e, n, r, s) {\n  var i = r && !r.isEmpty(),\n      o = void 0 !== s;\n  var u = \"Function \".concat(e, \"() called with invalid data\");\n  n && (u += \" (via `toFirestore()`)\"), u += \". \";\n  var c = \"\";\n  return (i || o) && (c += \" (found\", i && (c += \" in field \".concat(r)), o && (c += \" in document \".concat(s)), c += \")\"), new U(P, u + t + c);\n}\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */\n\n\nfunction lr(t, e) {\n  return t.some(function (t) {\n    return t.isEqual(e);\n  });\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */\n\n\nvar fr = /*#__PURE__*/function () {\n  // Note: This class is stripped down version of the DocumentSnapshot in\n  // the legacy SDK. The changes are:\n  // - No support for SnapshotMetadata.\n  // - No support for SnapshotOptions.\n\n  /** @hideconstructor protected */\n  function fr(t, e, n, r, s) {\n    _classCallCheck(this, fr);\n\n    this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, this._converter = s;\n  }\n  /** Property of the `DocumentSnapshot` that provides the document's ID. */\n\n\n  _createClass(fr, [{\n    key: \"id\",\n    get: function get() {\n      return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */\n\n  }, {\n    key: \"ref\",\n    get: function get() {\n      return new Pn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */\n\n  }, {\n    key: \"exists\",\n    value: function exists() {\n      return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */\n\n  }, {\n    key: \"data\",\n    value: function data() {\n      if (this._document) {\n        if (this._converter) {\n          // We only want to use the converter and create a new DocumentSnapshot\n          // if a converter has been provided.\n          var t = new dr(this._firestore, this._userDataWriter, this._key, this._document,\n          /* converter= */\n          null);\n          return this._converter.fromFirestore(t);\n        }\n\n        return this._userDataWriter.convertValue(this._document.data.value);\n      }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"get\",\n    value: function get(t) {\n      if (this._document) {\n        var e = this._document.data.field(pr(\"DocumentSnapshot.get\", t));\n\n        if (null !== e) return this._userDataWriter.convertValue(e);\n      }\n    }\n  }]);\n\n  return fr;\n}();\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */\n\n\nvar dr = /*#__PURE__*/function (_fr) {\n  _inherits(dr, _fr);\n\n  var _super29 = _createSuper(dr);\n\n  function dr() {\n    _classCallCheck(this, dr);\n\n    return _super29.apply(this, arguments);\n  }\n\n  _createClass(dr, [{\n    key: \"data\",\n    value:\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    function data() {\n      return _get(_getPrototypeOf(dr.prototype), \"data\", this).call(this);\n    }\n  }]);\n\n  return dr;\n}(fr);\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */\n\n\nvar wr = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function wr(t, e) {\n    _classCallCheck(this, wr);\n\n    this._docs = e, this.query = t;\n  }\n  /** An array of all the documents in the `QuerySnapshot`. */\n\n\n  _createClass(wr, [{\n    key: \"docs\",\n    get: function get() {\n      return _toConsumableArray(this._docs);\n    }\n    /** The number of documents in the `QuerySnapshot`. */\n\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */\n\n  }, {\n    key: \"empty\",\n    get: function get() {\n      return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */\n\n  }, {\n    key: \"forEach\",\n    value: function forEach(t, e) {\n      this._docs.forEach(t, e);\n    }\n  }]);\n\n  return wr;\n}();\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */\n\n\nfunction mr(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), t instanceof fr && e instanceof fr ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof wr && e instanceof wr && Sn(t.query, e.query) && vt(t.docs, e.docs, mr);\n}\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */\n\n\nfunction pr(t, e) {\n  return \"string\" == typeof e ? ar(t, e) : e instanceof On ? e._internalPath : e._delegate._internalPath;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\n\n\nvar yr = /*#__PURE__*/_createClass(function yr() {\n  _classCallCheck(this, yr);\n});\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link startAt}, {@link startAfter}, {@link\n * endBefore}, {@link endAt}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\n\n\nvar gr = /*#__PURE__*/function (_yr) {\n  _inherits(gr, _yr);\n\n  var _super30 = _createSuper(gr);\n\n  function gr() {\n    _classCallCheck(this, gr);\n\n    return _super30.apply(this, arguments);\n  }\n\n  return _createClass(gr);\n}(yr);\n\nfunction _r(t, e) {\n  var r = [];\n\n  for (var _len8 = arguments.length, n = new Array(_len8 > 2 ? _len8 - 2 : 0), _key8 = 2; _key8 < _len8; _key8++) {\n    n[_key8 - 2] = arguments[_key8];\n  }\n\n  e instanceof yr && r.push(e), r = r.concat(n), function (t) {\n    var e = t.filter(function (t) {\n      return t instanceof Er;\n    }).length,\n        n = t.filter(function (t) {\n      return t instanceof vr;\n    }).length;\n    if (e > 1 || e > 0 && n > 0) throw new U(P, \"InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.\");\n  }\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  /**\n  * Converts Firestore's internal types to the JavaScript types that we expose\n  * to the user.\n  *\n  * @internal\n  */\n  (r);\n\n  var _iterator11 = _createForOfIteratorHelper(r),\n      _step11;\n\n  try {\n    for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n      var _e16 = _step11.value;\n      t = _e16._apply(t);\n    }\n  } catch (err) {\n    _iterator11.e(err);\n  } finally {\n    _iterator11.f();\n  }\n\n  return t;\n}\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link query} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */\n\n\nvar vr = /*#__PURE__*/function (_gr) {\n  _inherits(vr, _gr);\n\n  var _super31 = _createSuper(vr);\n\n  /**\n   * @internal\n   */\n  function vr(t, e, n) {\n    var _this32;\n\n    _classCallCheck(this, vr);\n\n    _this32 = _super31.call(this), _this32._field = t, _this32._op = e, _this32._value = n,\n    /** The type of this query constraint */\n    _this32.type = \"where\";\n    return _this32;\n  }\n\n  _createClass(vr, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = this._parse(t);\n\n      return Lr(t._query, e), new Vn(t.firestore, t.converter, Ie(t._query, e));\n    }\n  }, {\n    key: \"_parse\",\n    value: function _parse(t) {\n      var e = Wn(t.firestore),\n          n = function (t, e, n, r, s, i, o) {\n        var u;\n\n        if (s.isKeyField()) {\n          if (\"array-contains\"\n          /* Operator.ARRAY_CONTAINS */\n          === i || \"array-contains-any\"\n          /* Operator.ARRAY_CONTAINS_ANY */\n          === i) throw new U(P, \"Invalid Query. You can't perform '\".concat(i, \"' queries on documentId().\"));\n\n          if (\"in\"\n          /* Operator.IN */\n          === i || \"not-in\"\n          /* Operator.NOT_IN */\n          === i) {\n            Cr(o, i);\n            var _e17 = [];\n\n            var _iterator12 = _createForOfIteratorHelper(o),\n                _step12;\n\n            try {\n              for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n                var _n11 = _step12.value;\n\n                _e17.push(kr(r, t, _n11));\n              }\n            } catch (err) {\n              _iterator12.e(err);\n            } finally {\n              _iterator12.f();\n            }\n\n            u = {\n              arrayValue: {\n                values: _e17\n              }\n            };\n          } else u = kr(r, t, o);\n        } else \"in\"\n        /* Operator.IN */\n        !== i && \"not-in\"\n        /* Operator.NOT_IN */\n        !== i && \"array-contains-any\"\n        /* Operator.ARRAY_CONTAINS_ANY */\n        !== i || Cr(o, i), u = nr(n, e, o,\n        /* allowArrays= */\n        \"in\"\n        /* Operator.IN */\n        === i || \"not-in\"\n        /* Operator.NOT_IN */\n        === i);\n\n        return Gt.create(s, i, u);\n      }(t._query, \"where\", e, t.firestore._databaseId, this._field, this._op, this._value);\n\n      return n;\n    }\n  }], [{\n    key: \"_create\",\n    value: function _create(t, e, n) {\n      return new vr(t, e, n);\n    }\n  }]);\n\n  return vr;\n}(gr);\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */\n\n\nfunction br(t, e, n) {\n  var r = e,\n      s = pr(\"where\", t);\n  return vr._create(s, r, n);\n}\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link query} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n * @internal TODO remove this internal tag with OR Query support in the server\n */\n\n\nvar Er = /*#__PURE__*/function (_yr2) {\n  _inherits(Er, _yr2);\n\n  var _super32 = _createSuper(Er);\n\n  /**\n   * @internal\n   */\n  function Er(\n  /** The type of this query constraint */\n  t, e) {\n    var _this33;\n\n    _classCallCheck(this, Er);\n\n    _this33 = _super32.call(this), _this33.type = t, _this33._queryConstraints = e;\n    return _this33;\n  }\n\n  _createClass(Er, [{\n    key: \"_parse\",\n    value: function _parse(t) {\n      var e = this._queryConstraints.map(function (e) {\n        return e._parse(t);\n      }).filter(function (t) {\n        return t.getFilters().length > 0;\n      });\n\n      return 1 === e.length ? e[0] : Kt.create(e, this._getOperator());\n    }\n  }, {\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = this._parse(t);\n\n      return 0 === e.getFilters().length ? t : (function (t, e) {\n        var n = t;\n        var r = e.getFlattenedFilters();\n\n        var _iterator13 = _createForOfIteratorHelper(r),\n            _step13;\n\n        try {\n          for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n            var _t23 = _step13.value;\n            Lr(n, _t23), n = Ie(n, _t23);\n          }\n        } catch (err) {\n          _iterator13.e(err);\n        } finally {\n          _iterator13.f();\n        }\n      } // Checks if any of the provided filter operators are included in the given list of filters and\n      // returns the first one that is, or null if none are.\n      (t._query, e), new Vn(t.firestore, t.converter, Ie(t._query, e)));\n    }\n  }, {\n    key: \"_getQueryConstraints\",\n    value: function _getQueryConstraints() {\n      return this._queryConstraints;\n    }\n  }, {\n    key: \"_getOperator\",\n    value: function _getOperator() {\n      return \"and\" === this.type ? \"and\"\n      /* CompositeOperator.AND */\n      : \"or\"\n      /* CompositeOperator.OR */\n      ;\n    }\n  }], [{\n    key: \"_create\",\n    value: function _create(t, e) {\n      return new Er(t, e);\n    }\n  }]);\n\n  return Er;\n}(yr);\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a disjunction of\n * the given filter constraints. A disjunction filter includes a document if it\n * satisfies any of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a disjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */\n\n\nfunction Ir() {\n  for (var _len9 = arguments.length, t = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n    t[_key9] = arguments[_key9];\n  }\n\n  // Only support QueryFilterConstraints\n  return t.forEach(function (t) {\n    return Ur(\"or\", t);\n  }), Er._create(\"or\"\n  /* CompositeOperator.OR */\n  , t);\n}\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a conjunction of\n * the given filter constraints. A conjunction filter includes a document if it\n * satisfies all of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a conjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */\n\n\nfunction Tr() {\n  for (var _len10 = arguments.length, t = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n    t[_key10] = arguments[_key10];\n  }\n\n  // Only support QueryFilterConstraints\n  return t.forEach(function (t) {\n    return Ur(\"and\", t);\n  }), Er._create(\"and\"\n  /* CompositeOperator.AND */\n  , t);\n}\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link query} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */\n\n\nvar Ar = /*#__PURE__*/function (_gr2) {\n  _inherits(Ar, _gr2);\n\n  var _super33 = _createSuper(Ar);\n\n  /**\n   * @internal\n   */\n  function Ar(t, e) {\n    var _this34;\n\n    _classCallCheck(this, Ar);\n\n    _this34 = _super33.call(this), _this34._field = t, _this34._direction = e,\n    /** The type of this query constraint */\n    _this34.type = \"orderBy\";\n    return _this34;\n  }\n\n  _createClass(Ar, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = function (t, e, n) {\n        if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n        if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n        var r = new se(e, n);\n        return function (t, e) {\n          if (null === ge(t)) {\n            // This is the first order by. It must match any inequality.\n            var _n12 = _e(t);\n\n            null !== _n12 && Mr(t, _n12, e.field);\n          }\n        }(t, r), r;\n      }\n      /**\n      * Create a `Bound` from a query and a document.\n      *\n      * Note that the `Bound` will always include the key of the document\n      * and so only the provided document will compare equal to the returned\n      * position.\n      *\n      * Will throw if the document does not contain all fields of the order by\n      * of the query or if any of the fields in the order by are an uncommitted\n      * server timestamp.\n      */\n      (t._query, this._field, this._direction);\n\n      return new Vn(t.firestore, t.converter, function (t, e) {\n        // TODO(dimond): validate that orderBy does not list the same key twice.\n        var n = t.explicitOrderBy.concat([e]);\n        return new ye(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n      }(t._query, e));\n    }\n  }], [{\n    key: \"_create\",\n    value: function _create(t, e) {\n      return new Ar(t, e);\n    }\n  }]);\n\n  return Ar;\n}(gr);\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */\n\n\nfunction Rr(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n  var n = e,\n      r = pr(\"orderBy\", t);\n  return Ar._create(r, n);\n}\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */\n\n\nvar Pr = /*#__PURE__*/function (_gr3) {\n  _inherits(Pr, _gr3);\n\n  var _super34 = _createSuper(Pr);\n\n  /**\n   * @internal\n   */\n  function Pr(\n  /** The type of this query constraint */\n  t, e, n) {\n    var _this35;\n\n    _classCallCheck(this, Pr);\n\n    _this35 = _super34.call(this), _this35.type = t, _this35._limit = e, _this35._limitType = n;\n    return _this35;\n  }\n\n  _createClass(Pr, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      return new Vn(t.firestore, t.converter, function (t, e, n) {\n        return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n      }(t._query, this._limit, this._limitType));\n    }\n  }], [{\n    key: \"_create\",\n    value: function _create(t, e, n) {\n      return new Pr(t, e, n);\n    }\n  }]);\n\n  return Pr;\n}(gr);\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */\n\n\nfunction Vr(t) {\n  return at(\"limit\", t), Pr._create(\"limit\", t, \"F\"\n  /* LimitType.First */\n  );\n}\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */\n\n\nfunction $r(t) {\n  return at(\"limitToLast\", t), Pr._create(\"limitToLast\", t, \"L\"\n  /* LimitType.Last */\n  );\n}\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link query} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */\n\n\nvar Nr = /*#__PURE__*/function (_gr4) {\n  _inherits(Nr, _gr4);\n\n  var _super35 = _createSuper(Nr);\n\n  /**\n   * @internal\n   */\n  function Nr(\n  /** The type of this query constraint */\n  t, e, n) {\n    var _this36;\n\n    _classCallCheck(this, Nr);\n\n    _this36 = _super35.call(this), _this36.type = t, _this36._docOrFields = e, _this36._inclusive = n;\n    return _this36;\n  }\n\n  _createClass(Nr, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = Or(t, this.type, this._docOrFields, this._inclusive);\n      return new Vn(t.firestore, t.converter, function (t, e) {\n        return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n      }(t._query, e));\n    }\n  }], [{\n    key: \"_create\",\n    value: function _create(t, e, n) {\n      return new Nr(t, e, n);\n    }\n  }]);\n\n  return Nr;\n}(gr);\n\nfunction Dr() {\n  for (var _len11 = arguments.length, t = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n    t[_key11] = arguments[_key11];\n  }\n\n  return Nr._create(\"startAt\", t,\n  /*inclusive=*/\n  !0);\n}\n\nfunction Fr() {\n  for (var _len12 = arguments.length, t = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n    t[_key12] = arguments[_key12];\n  }\n\n  return Nr._create(\"startAfter\", t,\n  /*inclusive=*/\n  !1);\n}\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */\n\n\nvar xr = /*#__PURE__*/function (_gr5) {\n  _inherits(xr, _gr5);\n\n  var _super36 = _createSuper(xr);\n\n  /**\n   * @internal\n   */\n  function xr(\n  /** The type of this query constraint */\n  t, e, n) {\n    var _this37;\n\n    _classCallCheck(this, xr);\n\n    _this37 = _super36.call(this), _this37.type = t, _this37._docOrFields = e, _this37._inclusive = n;\n    return _this37;\n  }\n\n  _createClass(xr, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = Or(t, this.type, this._docOrFields, this._inclusive);\n      return new Vn(t.firestore, t.converter, function (t, e) {\n        return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n      }(t._query, e));\n    }\n  }], [{\n    key: \"_create\",\n    value: function _create(t, e, n) {\n      return new xr(t, e, n);\n    }\n  }]);\n\n  return xr;\n}(gr);\n\nfunction Sr() {\n  for (var _len13 = arguments.length, t = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n    t[_key13] = arguments[_key13];\n  }\n\n  return xr._create(\"endBefore\", t,\n  /*inclusive=*/\n  !1);\n}\n\nfunction qr() {\n  for (var _len14 = arguments.length, t = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {\n    t[_key14] = arguments[_key14];\n  }\n\n  return xr._create(\"endAt\", t,\n  /*inclusive=*/\n  !0);\n}\n/** Helper function to create a bound from a document or fields */\n\n\nfunction Or(t, e, n, r) {\n  if (n[0] = getModularInstance(n[0]), n[0] instanceof fr) return function (t, e, n, r, s) {\n    if (!r) throw new U($, \"Can't use a DocumentSnapshot that doesn't exist for \".concat(n, \"().\"));\n    var i = []; // Because people expect to continue/end a query at the exact document\n    // provided, we need to use the implicit sort order rather than the explicit\n    // sort order, because it's guaranteed to contain the document key. That way\n    // the position becomes unambiguous and the query continues/ends exactly at\n    // the provided document. Without the key (by using the explicit sort\n    // orders), multiple documents could match the position, yielding duplicate\n    // results.\n\n    var _iterator14 = _createForOfIteratorHelper(be(t)),\n        _step14;\n\n    try {\n      for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n        var _n13 = _step14.value;\n        if (_n13.field.isKeyField()) i.push(Ct(e, r.key));else {\n          var _t24 = r.data.field(_n13.field);\n\n          if ($t(_t24)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + _n13.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n\n          if (null === _t24) {\n            var _t25 = _n13.field.canonicalString();\n\n            throw new U(P, \"Invalid query. You are trying to start or end a query using a document for which the field '\".concat(_t25, \"' (used as the orderBy) does not exist.\"));\n          }\n\n          i.push(_t24);\n        }\n      }\n    } catch (err) {\n      _iterator14.e(err);\n    } finally {\n      _iterator14.f();\n    }\n\n    return new Qt(i, s);\n  }\n  /**\n  * Converts a list of field values to a `Bound` for the given query.\n  */\n  (t._query, t.firestore._databaseId, e, n[0]._document, r);\n  {\n    var s = Wn(t.firestore);\n    return function (t, e, n, r, s, i) {\n      // Use explicit order by's because it has to match the query the user made\n      var o = t.explicitOrderBy;\n      if (s.length > o.length) throw new U(P, \"Too many arguments provided to \".concat(r, \"(). The number of arguments must be less than or equal to the number of orderBy() clauses\"));\n      var u = [];\n\n      for (var _i3 = 0; _i3 < s.length; _i3++) {\n        var c = s[_i3];\n\n        if (o[_i3].field.isKeyField()) {\n          if (\"string\" != typeof c) throw new U(P, \"Invalid query. Expected a string for document ID in \".concat(r, \"(), but got a \").concat(typeof c));\n          if (!ve(t) && -1 !== c.indexOf(\"/\")) throw new U(P, \"Invalid query. When querying a collection and ordering by documentId(), the value passed to \".concat(r, \"() must be a plain document ID, but '\").concat(c, \"' contains a slash.\"));\n\n          var _n14 = t.path.child(tt.fromString(c));\n\n          if (!rt.isDocumentKey(_n14)) throw new U(P, \"Invalid query. When querying a collection group and ordering by documentId(), the value passed to \".concat(r, \"() must result in a valid document path, but '\").concat(_n14, \"' is not because it contains an odd number of segments.\"));\n\n          var _s2 = new rt(_n14);\n\n          u.push(Ct(e, _s2));\n        } else {\n          var _t26 = nr(n, r, c);\n\n          u.push(_t26);\n        }\n      }\n\n      return new Qt(u, i);\n    }\n    /**\n    * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n    * appropriate errors if the value is anything other than a `DocumentReference`\n    * or `string`, or if the string is malformed.\n    */\n    (t._query, t.firestore._databaseId, s, e, n, r);\n  }\n}\n\nfunction kr(t, e, n) {\n  if (\"string\" == typeof (n = getModularInstance(n))) {\n    if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n    if (!ve(e) && -1 !== n.indexOf(\"/\")) throw new U(P, \"Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '\".concat(n, \"' contains a '/' character.\"));\n    var r = e.path.child(tt.fromString(n));\n    if (!rt.isDocumentKey(r)) throw new U(P, \"Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '\".concat(r, \"' is not because it has an odd number of segments (\").concat(r.length, \").\"));\n    return Ct(t, new rt(r));\n  }\n\n  if (n instanceof Pn) return Ct(t, n._key);\n  throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: \".concat(ut(n), \".\"));\n}\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */\n\n\nfunction Cr(t, e) {\n  if (!Array.isArray(t) || 0 === t.length) throw new U(P, \"Invalid Query. A non-empty array is required for '\".concat(e.toString(), \"' filters.\"));\n  if (t.length > 10) throw new U(P, \"Invalid Query. '\".concat(e.toString(), \"' filters support a maximum of 10 elements in the value array.\"));\n}\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */\n\n\nfunction Lr(t, e) {\n  if (e.isInequality()) {\n    var _n15 = _e(t),\n        r = e.field;\n\n    if (null !== _n15 && !_n15.isEqual(r)) throw new U(P, \"Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '\".concat(_n15.toString(), \"' and '\").concat(r.toString(), \"'\"));\n    var s = ge(t);\n    null !== s && Mr(t, r, s);\n  }\n\n  var n = function (t, e) {\n    var _iterator15 = _createForOfIteratorHelper(t),\n        _step15;\n\n    try {\n      for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n        var _n16 = _step15.value;\n\n        var _iterator16 = _createForOfIteratorHelper(_n16.getFlattenedFilters()),\n            _step16;\n\n        try {\n          for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n            var _t27 = _step16.value;\n            if (e.indexOf(_t27.op) >= 0) return _t27.op;\n          }\n        } catch (err) {\n          _iterator16.e(err);\n        } finally {\n          _iterator16.f();\n        }\n      }\n    } catch (err) {\n      _iterator15.e(err);\n    } finally {\n      _iterator15.f();\n    }\n\n    return null;\n  }(t.filters, function (t) {\n    switch (t) {\n      case \"!=\"\n      /* Operator.NOT_EQUAL */\n      :\n        return [\"!=\"\n        /* Operator.NOT_EQUAL */\n        , \"not-in\"\n        /* Operator.NOT_IN */\n        ];\n\n      case \"array-contains\"\n      /* Operator.ARRAY_CONTAINS */\n      :\n        return [\"array-contains\"\n        /* Operator.ARRAY_CONTAINS */\n        , \"array-contains-any\"\n        /* Operator.ARRAY_CONTAINS_ANY */\n        , \"not-in\"\n        /* Operator.NOT_IN */\n        ];\n\n      case \"in\"\n      /* Operator.IN */\n      :\n        return [\"array-contains-any\"\n        /* Operator.ARRAY_CONTAINS_ANY */\n        , \"in\"\n        /* Operator.IN */\n        , \"not-in\"\n        /* Operator.NOT_IN */\n        ];\n\n      case \"array-contains-any\"\n      /* Operator.ARRAY_CONTAINS_ANY */\n      :\n        return [\"array-contains\"\n        /* Operator.ARRAY_CONTAINS */\n        , \"array-contains-any\"\n        /* Operator.ARRAY_CONTAINS_ANY */\n        , \"in\"\n        /* Operator.IN */\n        , \"not-in\"\n        /* Operator.NOT_IN */\n        ];\n\n      case \"not-in\"\n      /* Operator.NOT_IN */\n      :\n        return [\"array-contains\"\n        /* Operator.ARRAY_CONTAINS */\n        , \"array-contains-any\"\n        /* Operator.ARRAY_CONTAINS_ANY */\n        , \"in\"\n        /* Operator.IN */\n        , \"not-in\"\n        /* Operator.NOT_IN */\n        , \"!=\"\n        /* Operator.NOT_EQUAL */\n        ];\n\n      default:\n        return [];\n    }\n  }(e.op));\n\n  if (null !== n) // Special case when it's a duplicate op to give a slightly clearer error message.\n    throw n === e.op ? new U(P, \"Invalid query. You cannot use more than one '\".concat(e.op.toString(), \"' filter.\")) : new U(P, \"Invalid query. You cannot use '\".concat(e.op.toString(), \"' filters with '\").concat(n.toString(), \"' filters.\"));\n}\n\nfunction Mr(t, e, n) {\n  if (!n.isEqual(e)) throw new U(P, \"Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '\".concat(e.toString(), \"' and so you must also use '\").concat(e.toString(), \"' as your first argument to orderBy(), but your first orderBy() is on field '\").concat(n.toString(), \"' instead.\"));\n}\n\nfunction Ur(t, e) {\n  if (!(e instanceof vr || e instanceof Er)) throw new U(P, \"Function \".concat(t, \"() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.\"));\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\n\n\nfunction jr(t, e, n) {\n  var r; // Cast to `any` in order to satisfy the union type constraint on\n  // toFirestore().\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, r;\n}\n\nvar Br = /*#__PURE__*/function (_ref11) {\n  _inherits(Br, _ref11);\n\n  var _super37 = _createSuper(Br);\n\n  function Br(t) {\n    var _this38;\n\n    _classCallCheck(this, Br);\n\n    _this38 = _super37.call(this), _this38.firestore = t;\n    return _this38;\n  }\n\n  _createClass(Br, [{\n    key: \"convertBytes\",\n    value: function convertBytes(t) {\n      return new qn(t);\n    }\n  }, {\n    key: \"convertReference\",\n    value: function convertReference(t) {\n      var e = this.convertDocumentKey(t, this.firestore._databaseId);\n      return new Pn(this.firestore,\n      /* converter= */\n      null, e);\n    }\n  }]);\n\n  return Br;\n}( /*#__PURE__*/function () {\n  function _class4() {\n    _classCallCheck(this, _class4);\n  }\n\n  _createClass(_class4, [{\n    key: \"convertValue\",\n    value: function convertValue(t) {\n      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"none\";\n\n      switch (xt(t)) {\n        case 0\n        /* TypeOrder.NullValue */\n        :\n          return null;\n\n        case 1\n        /* TypeOrder.BooleanValue */\n        :\n          return t.booleanValue;\n\n        case 2\n        /* TypeOrder.NumberValue */\n        :\n          return Rt(t.integerValue || t.doubleValue);\n\n        case 3\n        /* TypeOrder.TimestampValue */\n        :\n          return this.convertTimestamp(t.timestampValue);\n\n        case 4\n        /* TypeOrder.ServerTimestampValue */\n        :\n          return this.convertServerTimestamp(t, e);\n\n        case 5\n        /* TypeOrder.StringValue */\n        :\n          return t.stringValue;\n\n        case 6\n        /* TypeOrder.BlobValue */\n        :\n          return this.convertBytes(Pt(t.bytesValue));\n\n        case 7\n        /* TypeOrder.RefValue */\n        :\n          return this.convertReference(t.referenceValue);\n\n        case 8\n        /* TypeOrder.GeoPointValue */\n        :\n          return this.convertGeoPoint(t.geoPointValue);\n\n        case 9\n        /* TypeOrder.ArrayValue */\n        :\n          return this.convertArray(t.arrayValue, e);\n\n        case 10\n        /* TypeOrder.ObjectValue */\n        :\n          return this.convertObject(t.mapValue, e);\n\n        default:\n          throw b();\n      }\n    }\n  }, {\n    key: \"convertObject\",\n    value: function convertObject(t, e) {\n      var _this39 = this;\n\n      var n = {};\n      return Et(t.fields, function (t, r) {\n        n[t] = _this39.convertValue(r, e);\n      }), n;\n    }\n  }, {\n    key: \"convertGeoPoint\",\n    value: function convertGeoPoint(t) {\n      return new Ln(Rt(t.latitude), Rt(t.longitude));\n    }\n  }, {\n    key: \"convertArray\",\n    value: function convertArray(t, e) {\n      var _this40 = this;\n\n      return (t.values || []).map(function (t) {\n        return _this40.convertValue(t, e);\n      });\n    }\n  }, {\n    key: \"convertServerTimestamp\",\n    value: function convertServerTimestamp(t, e) {\n      switch (e) {\n        case \"previous\":\n          var n = Nt(t);\n          return null == n ? null : this.convertValue(n, e);\n\n        case \"estimate\":\n          return this.convertTimestamp(Dt(t));\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: \"convertTimestamp\",\n    value: function convertTimestamp(t) {\n      var e = At(t);\n      return new Vt(e.seconds, e.nanos);\n    }\n  }, {\n    key: \"convertDocumentKey\",\n    value: function convertDocumentKey(t, e) {\n      var n = tt.fromString(t);\n      E(cn(n));\n      var r = new X(n.get(1), n.get(3)),\n          s = new rt(n.popFirst(5));\n      return r.isEqual(e) || // TODO(b/64130202): Somehow support foreign references.\n      g(\"Document \".concat(s, \" contains a document reference within a different database (\").concat(r.projectId, \"/\").concat(r.database, \") which is not supported. It will be treated as a reference in the current database (\").concat(e.projectId, \"/\").concat(e.database, \") instead.\")), s;\n    }\n  }]);\n\n  return _class4;\n}());\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */\n\n\nfunction Qr(t) {\n  var e = yn((t = ct(t, Pn)).firestore),\n      n = new Br(t.firestore);\n  return dn(e, [t._key]).then(function (e) {\n    E(1 === e.length);\n    var r = e[0];\n    return new fr(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n  });\n}\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */\n\n\nfunction zr(t) {\n  !function (t) {\n    if (\"L\"\n    /* LimitType.Last */\n    === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n  }((t = ct(t, Vn))._query);\n  var e = yn(t.firestore),\n      n = new Br(t.firestore);\n  return wn(e, t._query).then(function (e) {\n    var r = e.map(function (e) {\n      return new dr(t.firestore, n, e.key, e, t.converter);\n    });\n    return \"L\"\n    /* LimitType.Last */\n    === t._query.limitType && // Limit to last queries reverse the orderBy constraint that was\n    // specified by the user. As such, we need to reverse the order of the\n    // results to return the documents in the expected order.\n    r.reverse(), new wr(t, r);\n  });\n}\n\nfunction Wr(t, e, n) {\n  var r = jr((t = ct(t, Pn)).converter, e, n),\n      s = Gn(Wn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n  return fn(yn(t.firestore), [s.toMutation(t._key, Fe.none())]);\n}\n\nfunction Gr(t, e, n) {\n  var s = Wn((t = ct(t, Pn)).firestore); // For Compat types, we have to \"extract\" the underlying types before\n  // performing validation.\n\n  var i;\n\n  for (var _len15 = arguments.length, r = new Array(_len15 > 3 ? _len15 - 3 : 0), _key15 = 3; _key15 < _len15; _key15++) {\n    r[_key15 - 3] = arguments[_key15];\n  }\n\n  i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof On ? er(s, \"updateDoc\", t._key, e, n, r) : tr(s, \"updateDoc\", t._key, e);\n  return fn(yn(t.firestore), [i.toMutation(t._key, Fe.exists(!0))]);\n}\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */\n\n\nfunction Kr(t) {\n  return fn(yn((t = ct(t, Pn)).firestore), [new Oe(t._key, Fe.none())]);\n}\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */\n\n\nfunction Yr(t, e) {\n  var n = Fn(t = ct(t, $n)),\n      r = jr(t.converter, e),\n      s = Gn(Wn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n  return fn(yn(t.firestore), [s.toMutation(n._key, Fe.exists(!1))]).then(function () {\n    return n;\n  });\n}\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */\n\n\nfunction Hr(t) {\n  var e = ct(t.firestore, _n),\n      n = yn(e),\n      r = new Br(e);\n  return new Rn(t, n, r).run();\n}\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */\n\n\nfunction Jr(t, e) {\n  return Sn(t.query, e.query) && deepEqual(t.data(), e.data());\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */\n\n\nfunction Xr() {\n  return new Kn(\"deleteField\");\n}\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */\n\n\nfunction Zr() {\n  return new Hn(\"serverTimestamp\");\n}\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */\n\n\nfunction ts() {\n  for (var _len16 = arguments.length, t = new Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {\n    t[_key16] = arguments[_key16];\n  }\n\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new Jn(\"arrayUnion\", t);\n}\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\n\n\nfunction es() {\n  for (var _len17 = arguments.length, t = new Array(_len17), _key17 = 0; _key17 < _len17; _key17++) {\n    t[_key17] = arguments[_key17];\n  }\n\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new Xn(\"arrayRemove\", t);\n}\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\n\n\nfunction ns(t) {\n  return new Zn(\"increment\", t);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */\n\n\nvar rs = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function rs(t, e) {\n    _classCallCheck(this, rs);\n\n    this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, this._dataReader = Wn(t);\n  }\n\n  _createClass(rs, [{\n    key: \"set\",\n    value: function set(t, e, n) {\n      this._verifyNotCommitted();\n\n      var r = ss(t, this._firestore),\n          s = jr(r.converter, e, n),\n          i = Gn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n      return this._mutations.push(i.toMutation(r._key, Fe.none())), this;\n    }\n  }, {\n    key: \"update\",\n    value: function update(t, e, n) {\n      this._verifyNotCommitted();\n\n      var s = ss(t, this._firestore); // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n\n      var i;\n\n      for (var _len18 = arguments.length, r = new Array(_len18 > 3 ? _len18 - 3 : 0), _key18 = 3; _key18 < _len18; _key18++) {\n        r[_key18 - 3] = arguments[_key18];\n      }\n\n      return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof On ? er(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : tr(this._dataReader, \"WriteBatch.update\", s._key, e), this._mutations.push(i.toMutation(s._key, Fe.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      this._verifyNotCommitted();\n\n      var e = ss(t, this._firestore);\n      return this._mutations = this._mutations.concat(new Oe(e._key, Fe.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */\n\n  }, {\n    key: \"commit\",\n    value: function commit() {\n      return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n  }, {\n    key: \"_verifyNotCommitted\",\n    value: function _verifyNotCommitted() {\n      if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n  }]);\n\n  return rs;\n}();\n\nfunction ss(t, e) {\n  if ((t = getModularInstance(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n  return t;\n}\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */\n\n\nfunction is(t) {\n  var e = yn(t = ct(t, _n));\n  return new rs(t, function (t) {\n    return fn(e, t);\n  });\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */\n\n\nvar os = /*#__PURE__*/function () {\n  function os(t) {\n    _classCallCheck(this, os);\n\n    this.datastore = t, // The version of each document that was read during this transaction.\n    this.readVersions = new Map(), this.mutations = [], this.committed = !1,\n    /**\n     * A deferred usage error that occurred previously in this transaction that\n     * will cause the transaction to fail once it actually commits.\n     */\n    this.lastWriteError = null,\n    /**\n     * Set of documents that have been written in the transaction.\n     *\n     * When there's more than one write to the same key in a transaction, any\n     * writes after the first are handled differently.\n     */\n    this.writtenDocs = new Set();\n  }\n\n  _createClass(os, [{\n    key: \"lookup\",\n    value: function () {\n      var _lookup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(t) {\n        var _this41 = this;\n\n        var e;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.ensureCommitNotCalled(), this.mutations.length > 0)) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n\n              case 2:\n                _context2.next = 4;\n                return dn(this.datastore, t);\n\n              case 4:\n                e = _context2.sent;\n                return _context2.abrupt(\"return\", (e.forEach(function (t) {\n                  return _this41.recordVersion(t);\n                }), e));\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function lookup(_x13) {\n        return _lookup.apply(this, arguments);\n      }\n\n      return lookup;\n    }()\n  }, {\n    key: \"set\",\n    value: function set(t, e) {\n      this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n  }, {\n    key: \"update\",\n    value: function update(t, e) {\n      try {\n        this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n      } catch (t) {\n        this.lastWriteError = t;\n      }\n\n      this.writtenDocs.add(t.toString());\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      this.write(new Oe(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n  }, {\n    key: \"commit\",\n    value: function () {\n      var _commit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _this42 = this;\n\n        var t;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.ensureCommitNotCalled(), this.lastWriteError)) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                throw this.lastWriteError;\n\n              case 2:\n                t = this.readVersions; // For each mutation, note that the doc was written.\n\n                this.mutations.forEach(function (e) {\n                  t.delete(e.key.toString());\n                });\n                // For each document that was read but not written to, we want to perform\n                // a `verify` operation.\n                t.forEach(function (t, e) {\n                  var n = rt.fromPath(e);\n\n                  _this42.mutations.push(new ke(n, _this42.precondition(n)));\n                });\n                _context3.next = 7;\n                return fn(this.datastore, this.mutations);\n\n              case 7:\n                this.committed = !0;\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function commit() {\n        return _commit.apply(this, arguments);\n      }\n\n      return commit;\n    }()\n  }, {\n    key: \"recordVersion\",\n    value: function recordVersion(t) {\n      var e;\n      if (t.isFoundDocument()) e = t.version;else {\n        if (!t.isNoDocument()) throw b(); // Represent a deleted doc using SnapshotVersion.min().\n\n        e = oe.min();\n      }\n      var n = this.readVersions.get(t.key.toString());\n\n      if (n) {\n        if (!e.isEqual(n)) // This transaction will fail no matter what.\n          throw new U(q, \"Document version changed between two reads.\");\n      } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */\n\n  }, {\n    key: \"precondition\",\n    value: function precondition(t) {\n      var e = this.readVersions.get(t.toString());\n      return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(oe.min()) ? Fe.exists(!1) : Fe.updateTime(e) : Fe.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */\n\n  }, {\n    key: \"preconditionForUpdate\",\n    value: function preconditionForUpdate(t) {\n      var e = this.readVersions.get(t.toString()); // The first time a document is written, we want to take into account the\n      // read time and existence\n\n      if (!this.writtenDocs.has(t.toString()) && e) {\n        if (e.isEqual(oe.min())) // The document doesn't exist, so fail the transaction.\n          // This has to be validated locally because you can't send a\n          // precondition that a document does not exist without changing the\n          // semantics of the backend write to be an insert. This is the reverse\n          // of what we want, since we want to assert that the document doesn't\n          // exist but then send the update and have it fail. Since we can't\n          // express that to the backend, we have to validate locally.\n          // Note: this can change once we can send separate verify writes in the\n          // transaction.\n          throw new U(P, \"Can't update a document that doesn't exist.\"); // Document exists, base precondition on document update time.\n\n        return Fe.updateTime(e);\n      } // Document was not read, so we just use the preconditions for a blind\n      // update.\n\n\n      return Fe.exists(!0);\n    }\n  }, {\n    key: \"write\",\n    value: function write(t) {\n      this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n  }, {\n    key: \"ensureCommitNotCalled\",\n    value: function ensureCommitNotCalled() {}\n  }]);\n\n  return os;\n}();\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar us = {\n  maxAttempts: 5\n};\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\n\nvar cs = /*#__PURE__*/function () {\n  function cs(t, e, n, r, s) {\n    _classCallCheck(this, cs);\n\n    this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, this.deferred = s, this.yt = n.maxAttempts, this.gt = new hn(this.asyncQueue, \"transaction_retry\"\n    /* TimerId.TransactionRetry */\n    );\n  }\n  /** Runs the transaction and sets the result on deferred. */\n\n\n  _createClass(cs, [{\n    key: \"run\",\n    value: function run() {\n      this.yt -= 1, this._t();\n    }\n  }, {\n    key: \"_t\",\n    value: function _t() {\n      var _this43 = this;\n\n      this.gt.H( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var t, e;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                t = new os(_this43.datastore), e = _this43.vt(t);\n                e && e.then(function (e) {\n                  _this43.asyncQueue.enqueueAndForget(function () {\n                    return t.commit().then(function () {\n                      _this43.deferred.resolve(e);\n                    }).catch(function (t) {\n                      _this43.bt(t);\n                    });\n                  });\n                }).catch(function (t) {\n                  _this43.bt(t);\n                });\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      })));\n    }\n  }, {\n    key: \"vt\",\n    value: function vt(t) {\n      try {\n        var e = this.updateFunction(t);\n        return !ht(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), null);\n      } catch (t) {\n        // Do not retry errors thrown by user provided updateFunction.\n        return this.deferred.reject(t), null;\n      }\n    }\n  }, {\n    key: \"bt\",\n    value: function bt(t) {\n      var _this44 = this;\n\n      this.yt > 0 && this.Et(t) ? (this.yt -= 1, this.asyncQueue.enqueueAndForget(function () {\n        return _this44._t(), Promise.resolve();\n      })) : this.deferred.reject(t);\n    }\n  }, {\n    key: \"Et\",\n    value: function Et(t) {\n      if (\"FirebaseError\" === t.name) {\n        // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n        // non-matching document versions with ABORTED. These errors should be retried.\n        var e = t.code;\n        return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n        /**\n        * Determines whether an error code represents a permanent error when received\n        * in response to a non-write operation.\n        *\n        * See isPermanentWriteError for classifying write errors.\n        */\n        function (t) {\n          switch (t) {\n            default:\n              return b();\n\n            case A:\n            case R:\n            case V:\n            case x:\n            case C:\n            case L: // Unauthenticated means something went wrong with our token and we need\n            // to retry with new credentials which will happen automatically.\n\n            case F:\n              return !1;\n\n            case P:\n            case $:\n            case N:\n            case D:\n            case S: // Aborted might be retried in some scenarios, but that is dependant on\n            // the context and should handled individually by the calling code.\n            // See https://cloud.google.com/apis/design/errors.\n\n            case q:\n            case O:\n            case k:\n            case M:\n              return !0;\n          }\n        }(e);\n      }\n\n      return !1;\n    }\n  }]);\n\n  return cs;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The Platform's 'document' implementation or null if not available. */\n\n\nfunction as() {\n  // `document` is not always available, e.g. in ReactNative and WebWorkers.\n  // eslint-disable-next-line no-restricted-globals\n  return \"undefined\" != typeof document ? document : null;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */\n\n\nvar hs = /*#__PURE__*/function () {\n  function hs(t, e, n, r, s) {\n    _classCallCheck(this, hs);\n\n    this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, this.deferred = new j(), this.then = this.deferred.promise.then.bind(this.deferred.promise), // It's normal for the deferred promise to be canceled (due to cancellation)\n    // and so we attach a dummy catch callback to avoid\n    // 'UnhandledPromiseRejectionWarning' log spam.\n    this.deferred.promise.catch(function (t) {});\n  }\n  /**\n   * Creates and returns a DelayedOperation that has been scheduled to be\n   * executed on the provided asyncQueue after the provided delayMs.\n   *\n   * @param asyncQueue - The queue to schedule the operation on.\n   * @param id - A Timer ID identifying the type of operation this is.\n   * @param delayMs - The delay (ms) before the operation should be scheduled.\n   * @param op - The operation to run.\n   * @param removalCallback - A callback to be called synchronously once the\n   *   operation is executed or canceled, notifying the AsyncQueue to remove it\n   *   from its delayedOperations list.\n   *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n   *   the DelayedOperation class public.\n   */\n\n\n  _createClass(hs, [{\n    key: \"start\",\n    value:\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */\n    function start(t) {\n      var _this45 = this;\n\n      this.timerHandle = setTimeout(function () {\n        return _this45.handleDelayElapsed();\n      }, t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */\n\n  }, {\n    key: \"skipDelay\",\n    value: function skipDelay() {\n      return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function cancel(t) {\n      null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(A, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n  }, {\n    key: \"handleDelayElapsed\",\n    value: function handleDelayElapsed() {\n      var _this46 = this;\n\n      this.asyncQueue.enqueueAndForget(function () {\n        return null !== _this46.timerHandle ? (_this46.clearTimeout(), _this46.op().then(function (t) {\n          return _this46.deferred.resolve(t);\n        })) : Promise.resolve();\n      });\n    }\n  }, {\n    key: \"clearTimeout\",\n    value: function (_clearTimeout) {\n      function clearTimeout() {\n        return _clearTimeout.apply(this, arguments);\n      }\n\n      clearTimeout.toString = function () {\n        return _clearTimeout.toString();\n      };\n\n      return clearTimeout;\n    }(function () {\n      null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), this.timerHandle = null);\n    })\n  }], [{\n    key: \"createAndSchedule\",\n    value: function createAndSchedule(t, e, n, r, s) {\n      var i = Date.now() + n,\n          o = new hs(t, e, i, r, s);\n      return o.start(n), o;\n    }\n  }]);\n\n  return hs;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar ls = /*#__PURE__*/function () {\n  function ls() {\n    var _this47 = this;\n\n    _classCallCheck(this, ls);\n\n    // The last promise in the queue.\n    this.It = Promise.resolve(), // A list of retryable operations. Retryable operations are run in order and\n    // retried with backoff.\n    this.Tt = [], // Is this AsyncQueue being shut down? Once it is set to true, it will not\n    // be changed again.\n    this.At = !1, // Operations scheduled to be queued in the future. Operations are\n    // automatically removed after they are run or canceled.\n    this.Rt = [], // visible for testing\n    this.Pt = null, // Flag set while there's an outstanding AsyncQueue operation, used for\n    // assertion sanity-checks.\n    this.Vt = !1, // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n    this.$t = !1, // List of TimerIds to fast-forward delays for.\n    this.Nt = [], // Backoff timer used to schedule retries for retryable operations\n    this.gt = new hn(this, \"async_queue_retry\"\n    /* TimerId.AsyncQueueRetry */\n    ), // Visibility handler that triggers an immediate retry of all retryable\n    // operations. Meant to speed up recovery when we regain file system access\n    // after page comes into foreground.\n    this.Dt = function () {\n      var t = as();\n      t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), _this47.gt.X();\n    };\n    var t = as();\n    t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Dt);\n  }\n\n  _createClass(ls, [{\n    key: \"isShuttingDown\",\n    get: function get() {\n      return this.At;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */\n\n  }, {\n    key: \"enqueueAndForget\",\n    value: function enqueueAndForget(t) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.enqueue(t);\n    }\n  }, {\n    key: \"enqueueAndForgetEvenWhileRestricted\",\n    value: function enqueueAndForgetEvenWhileRestricted(t) {\n      this.Ft(), // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.xt(t);\n    }\n  }, {\n    key: \"enterRestrictedMode\",\n    value: function enterRestrictedMode(t) {\n      if (!this.At) {\n        this.At = !0, this.$t = t || !1;\n        var e = as();\n        e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Dt);\n      }\n    }\n  }, {\n    key: \"enqueue\",\n    value: function enqueue(t) {\n      var _this48 = this;\n\n      if (this.Ft(), this.At) // Return a Promise which never resolves.\n        return new Promise(function () {}); // Create a deferred Promise that we can return to the callee. This\n      // allows us to return a \"hanging Promise\" only to the callee and still\n      // advance the queue even when the operation is not run.\n\n      var e = new j();\n      return this.xt(function () {\n        return _this48.At && _this48.$t ? Promise.resolve() : (t().then(e.resolve, e.reject), e.promise);\n      }).then(function () {\n        return e.promise;\n      });\n    }\n  }, {\n    key: \"enqueueRetryable\",\n    value: function enqueueRetryable(t) {\n      var _this49 = this;\n\n      this.enqueueAndForget(function () {\n        return _this49.Tt.push(t), _this49.St();\n      });\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */\n\n  }, {\n    key: \"St\",\n    value: function () {\n      var _St = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _this50 = this;\n\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(0 !== this.Tt.length)) {\n                  _context5.next = 14;\n                  break;\n                }\n\n                _context5.prev = 1;\n                _context5.next = 4;\n                return this.Tt[0]();\n\n              case 4:\n                this.Tt.shift();\n                this.gt.reset();\n                _context5.next = 13;\n                break;\n\n              case 8:\n                _context5.prev = 8;\n                _context5.t0 = _context5[\"catch\"](1);\n\n                if (\n                /**\n                * @license\n                * Copyright 2017 Google LLC\n                *\n                * Licensed under the Apache License, Version 2.0 (the \"License\");\n                * you may not use this file except in compliance with the License.\n                * You may obtain a copy of the License at\n                *\n                *   http://www.apache.org/licenses/LICENSE-2.0\n                *\n                * Unless required by applicable law or agreed to in writing, software\n                * distributed under the License is distributed on an \"AS IS\" BASIS,\n                * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                * See the License for the specific language governing permissions and\n                * limitations under the License.\n                */\n\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function (t) {\n                  // Use name equality, as instanceof checks on errors don't work with errors\n                  // that wrap other errors.\n                  return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n                * @license\n                * Copyright 2020 Google LLC\n                *\n                * Licensed under the Apache License, Version 2.0 (the \"License\");\n                * you may not use this file except in compliance with the License.\n                * You may obtain a copy of the License at\n                *\n                *   http://www.apache.org/licenses/LICENSE-2.0\n                *\n                * Unless required by applicable law or agreed to in writing, software\n                * distributed under the License is distributed on an \"AS IS\" BASIS,\n                * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                * See the License for the specific language governing permissions and\n                * limitations under the License.\n                */\n                (_context5.t0)) {\n                  _context5.next = 12;\n                  break;\n                }\n\n                throw _context5.t0;\n\n              case 12:\n                // Failure will be handled by AsyncQueue\n                y(\"AsyncQueue\", \"Operation failed with retryable error: \" + _context5.t0);\n\n              case 13:\n                this.Tt.length > 0 && // If there are additional operations, we re-schedule `retryNextOp()`.\n                // This is necessary to run retryable operations that failed during\n                // their initial attempt since we don't know whether they are already\n                // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n                // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n                // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n                // call scheduled here.\n                // Since `backoffAndRun()` cancels an existing backoff and schedules a\n                // new backoff on every call, there is only ever a single additional\n                // operation in the queue.\n                this.gt.H(function () {\n                  return _this50.St();\n                });\n\n              case 14:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[1, 8]]);\n      }));\n\n      function St() {\n        return _St.apply(this, arguments);\n      }\n\n      return St;\n    }()\n  }, {\n    key: \"xt\",\n    value: function xt(t) {\n      var _this51 = this;\n\n      var e = this.It.then(function () {\n        return _this51.Vt = !0, t().catch(function (t) {\n          _this51.Pt = t, _this51.Vt = !1;\n\n          var e =\n          /**\n          * Chrome includes Error.message in Error.stack. Other browsers do not.\n          * This returns expected output of message + stack when available.\n          * @param error - Error or FirestoreError\n          */\n          function (t) {\n            var e = t.message || \"\";\n            t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n            return e;\n          }\n          /**\n          * @license\n          * Copyright 2020 Google LLC\n          *\n          * Licensed under the Apache License, Version 2.0 (the \"License\");\n          * you may not use this file except in compliance with the License.\n          * You may obtain a copy of the License at\n          *\n          *   http://www.apache.org/licenses/LICENSE-2.0\n          *\n          * Unless required by applicable law or agreed to in writing, software\n          * distributed under the License is distributed on an \"AS IS\" BASIS,\n          * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n          * See the License for the specific language governing permissions and\n          * limitations under the License.\n          */\n          // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n          // legacy SDK.\n\n          /**\n          * A reference to a transaction.\n          *\n          * The `Transaction` object passed to a transaction's `updateFunction` provides\n          * the methods to read and write data within the transaction context. See\n          * {@link runTransaction}.\n          */\n          (t); // Re-throw the error so that this.tail becomes a rejected Promise and\n          // all further attempts to chain (via .then) will just short-circuit\n          // and return the rejected Promise.\n\n\n          throw g(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        }).then(function (t) {\n          return _this51.Vt = !1, t;\n        });\n      });\n      return this.It = e, e;\n    }\n  }, {\n    key: \"enqueueAfterDelay\",\n    value: function enqueueAfterDelay(t, e, n) {\n      var _this52 = this;\n\n      this.Ft(), // Fast-forward delays for timerIds that have been overriden.\n      this.Nt.indexOf(t) > -1 && (e = 0);\n      var r = hs.createAndSchedule(this, t, e, n, function (t) {\n        return _this52.qt(t);\n      });\n      return this.Rt.push(r), r;\n    }\n  }, {\n    key: \"Ft\",\n    value: function Ft() {\n      this.Pt && b();\n    }\n  }, {\n    key: \"verifyOperationInProgress\",\n    value: function verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */\n\n  }, {\n    key: \"Ot\",\n    value: function () {\n      var _Ot = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var t;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                t = this.It;\n                _context6.next = 3;\n                return t;\n\n              case 3:\n                if (t !== this.It) {\n                  _context6.next = 0;\n                  break;\n                }\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function Ot() {\n        return _Ot.apply(this, arguments);\n      }\n\n      return Ot;\n    }()\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */\n\n  }, {\n    key: \"kt\",\n    value: function kt(t) {\n      var _iterator17 = _createForOfIteratorHelper(this.Rt),\n          _step17;\n\n      try {\n        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n          var e = _step17.value;\n          if (e.timerId === t) return !0;\n        }\n      } catch (err) {\n        _iterator17.e(err);\n      } finally {\n        _iterator17.f();\n      }\n\n      return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */\n\n  }, {\n    key: \"Ct\",\n    value: function Ct(t) {\n      var _this53 = this;\n\n      // Note that draining may generate more delayed ops, so we do that first.\n      return this.Ot().then(function () {\n        // Run ops in the same order they'd run if they ran naturally.\n        _this53.Rt.sort(function (t, e) {\n          return t.targetTimeMs - e.targetTimeMs;\n        });\n\n        var _iterator18 = _createForOfIteratorHelper(_this53.Rt),\n            _step18;\n\n        try {\n          for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n            var e = _step18.value;\n            if (e.skipDelay(), \"all\"\n            /* TimerId.All */\n            !== t && e.timerId === t) break;\n          }\n        } catch (err) {\n          _iterator18.e(err);\n        } finally {\n          _iterator18.f();\n        }\n\n        return _this53.Ot();\n      });\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */\n\n  }, {\n    key: \"Lt\",\n    value: function Lt(t) {\n      this.Nt.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */\n\n  }, {\n    key: \"qt\",\n    value: function qt(t) {\n      // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n      var e = this.Rt.indexOf(t);\n      this.Rt.splice(e, 1);\n    }\n  }]);\n\n  return ls;\n}();\n\nvar fs = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function fs(t, e) {\n    _classCallCheck(this, fs);\n\n    this._firestore = t, this._transaction = e, this._dataReader = Wn(t);\n  }\n  /**\n   * Reads the document referenced by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be read.\n   * @returns A `DocumentSnapshot` with the read data.\n   */\n\n\n  _createClass(fs, [{\n    key: \"get\",\n    value: function get(t) {\n      var _this54 = this;\n\n      var e = ss(t, this._firestore),\n          n = new Br(this._firestore);\n      return this._transaction.lookup([e._key]).then(function (t) {\n        if (!t || 1 !== t.length) return b();\n        var r = t[0];\n        if (r.isFoundDocument()) return new fr(_this54._firestore, n, r.key, r, e.converter);\n        if (r.isNoDocument()) return new fr(_this54._firestore, n, e._key, null, e.converter);\n        throw b();\n      });\n    }\n  }, {\n    key: \"set\",\n    value: function set(t, e, n) {\n      var r = ss(t, this._firestore),\n          s = jr(r.converter, e, n),\n          i = Gn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n      return this._transaction.set(r._key, i), this;\n    }\n  }, {\n    key: \"update\",\n    value: function update(t, e, n) {\n      var s = ss(t, this._firestore); // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n\n      var i;\n\n      for (var _len19 = arguments.length, r = new Array(_len19 > 3 ? _len19 - 3 : 0), _key19 = 3; _key19 < _len19; _key19++) {\n        r[_key19 - 3] = arguments[_key19];\n      }\n\n      return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof On ? er(this._dataReader, \"Transaction.update\", s._key, e, n, r) : tr(this._dataReader, \"Transaction.update\", s._key, e), this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      var e = ss(t, this._firestore);\n      return this._transaction.delete(e._key), this;\n    }\n  }]);\n\n  return fs;\n}();\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */\n\n\nfunction ds(t, e, n) {\n  var r = yn(t = ct(t, _n)),\n      s = Object.assign(Object.assign({}, us), n);\n  !function (t) {\n    if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n  }(s);\n  var i = new j();\n  return new cs(new ls(), r, s, function (n) {\n    return e(new fs(t, n));\n  }, i).run(), i.promise;\n}\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */\n\n\n!function (t) {\n  w = t;\n}(\"\".concat(SDK_VERSION, \"_lite\")), _registerComponent(new Component(\"firestore/lite\", function (t, _ref13) {\n  var e = _ref13.instanceIdentifier,\n      n = _ref13.options;\n  var r = t.getProvider(\"app\").getImmediate(),\n      s = new _n(new W(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function (t, e) {\n    if (!Object.prototype.hasOwnProperty.apply(t.options, [\"projectId\"])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n    return new X(t.options.projectId, e);\n  }\n  /**\n  * @license\n  * Copyright 2017 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n  (r, e), r);\n  return n && s._setSettings(n), s;\n}, \"PUBLIC\").setMultipleInstances(!0)), // RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nregisterVersion(\"firestore-lite\", \"3.8.3\", \"\"), registerVersion(\"firestore-lite\", \"3.8.3\", \"esm2017\");\nexport { Tn as AggregateField, An as AggregateQuerySnapshot, qn as Bytes, $n as CollectionReference, Pn as DocumentReference, fr as DocumentSnapshot, On as FieldPath, Cn as FieldValue, _n as Firestore, U as FirestoreError, Ln as GeoPoint, Vn as Query, Er as QueryCompositeFilterConstraint, gr as QueryConstraint, dr as QueryDocumentSnapshot, xr as QueryEndAtConstraint, vr as QueryFieldFilterConstraint, Pr as QueryLimitConstraint, Ar as QueryOrderByConstraint, wr as QuerySnapshot, Nr as QueryStartAtConstraint, Vt as Timestamp, fs as Transaction, rs as WriteBatch, Yr as addDoc, Jr as aggregateQuerySnapshotEqual, Tr as and, es as arrayRemove, ts as arrayUnion, Nn as collection, Dn as collectionGroup, En as connectFirestoreEmulator, Kr as deleteDoc, Xr as deleteField, Fn as doc, kn as documentId, qr as endAt, Sr as endBefore, Hr as getCount, Qr as getDoc, zr as getDocs, bn as getFirestore, ns as increment, vn as initializeFirestore, Vr as limit, $r as limitToLast, Ir as or, Rr as orderBy, _r as query, Sn as queryEqual, xn as refEqual, ds as runTransaction, Zr as serverTimestamp, Wr as setDoc, p as setLogLevel, mr as snapshotEqual, Fr as startAfter, Dr as startAt, In as terminate, Gr as updateDoc, br as where, is as writeBatch };","map":{"version":3,"mappings":"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","names":["d","t","uid","isAuthenticated","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","w","m","o","p","setLogLevel","y","logLevel","u","DEBUG","e","n","map","v","debug","g","ERROR","error","_","WARN","warn","JSON","stringify","b","Error","E","I","T","A","R","P","V","$","N","D","F","x","S","q","O","k","C","L","M","U","code","message","toString","name","c","j","promise","Promise","resolve","reject","B","user","type","headers","Map","set","Q","enqueueRetryable","z","token","changeListener","W","auth","onInit","getToken","then","accessToken","getUid","G","r","i","h","getAuthHeaderValueForFirstParty","l","K","Y","value","length","H","appCheck","J","s","databaseId","appId","persistenceKey","host","ssl","forceLongPolling","autoDetectLongPolling","useFetchStreams","X","projectId","database","Z","segments","offset","len","comparator","slice","limit","forEach","push","construct","get","Math","min","tt","toArray","join","canonicalString","indexOf","split","filter","et","nt","replace","isValidIdentifier","test","rt","path","popLast","lastSegment","fromString","popFirst","emptyPath","st","it","isDocumentKey","ot","ut","substring","Array","constructor","ct","_delegate","at","ht","lt","ft","BatchGetDocuments","Commit","RunQuery","RunAggregationQuery","dt","wt","mt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","pt","method","body","status","statusText","ok","json","isArray","databaseInfo","yt","self","crypto","msCrypto","Uint8Array","getRandomValues","floor","random","gt","charAt","_t","vt","every","bt","Object","prototype","hasOwnProperty","call","Et","It","binaryString","next","charCodeAt","done","btoa","atob","String","fromCharCode","Symbol","iterator","EMPTY_BYTE_STRING","Tt","RegExp","At","exec","substr","Number","Date","seconds","getTime","nanos","Rt","Pt","fromBase64String","fromUint8Array","Vt","nanoseconds","toMillis","padStart","fromMillis","now","$t","mapValue","fields","__type__","stringValue","Nt","__previous_value__","Dt","__local_write_time__","timestampValue","Ft","xt","St","booleanValue","isEqual","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","isNaN","arrayValue","values","qt","find","Ot","kt","compareTo","keys","sort","Ct","Lt","Mt","Ut","jt","Bt","assign","Qt","position","inclusive","zt","Wt","Gt","field","op","data","matchesComparison","isInequality","isKeyField","createKeyFieldInFilter","Ht","te","ee","ne","re","Jt","Xt","Kt","filters","matches","reduce","concat","getFlattenedFilters","Yt","key","fromName","Zt","some","nullValue","se","dir","ie","oe","timestamp","_compareTo","ue","root","ae","EMPTY","insert","copy","BLACK","remove","isEmpty","left","right","size","minKey","maxKey","inorderTraversal","reverseTraversal","ce","isReverse","nodeStack","pop","color","RED","fixUp","isRed","moveRedLeft","removeMin","rotateRight","moveRedRight","rotateLeft","colorFlip","check","pow","he","getIteratorFrom","hasNext","getNext","getIterator","le","has","add","iter","fe","isPrefixOf","de","getFieldsMap","isImmediateParentOf","applyChanges","we","documentType","version","readTime","createTime","documentState","empty","hasLocalMutations","hasCommittedMutations","clone","me","collectionGroup","orderBy","startAt","endAt","pe","ye","explicitOrderBy","limitType","ge","_e","getFirstInequalityField","ve","be","keyField","Ee","Ie","Te","Ae","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","Re","Pe","Ve","elements","$e","Ne","De","transform","Fe","updateTime","exists","xe","Se","precondition","fieldTransforms","qe","fieldMask","Oe","ke","Ce","asc","desc","Le","in","Me","and","or","Ue","je","toISOString","Be","toBase64","toUint8Array","Qe","toTimestamp","ze","fromTimestamp","We","child","Ge","Ke","cn","Ye","He","Je","Xe","found","newFoundDocument","missing","newNoDocument","Ze","update","delete","updateMask","un","verify","updateTransforms","fieldPath","setToServerValue","appendMissingElements","removeAllFromArray","increment","isNone","currentDocument","tn","structuredQuery","parent","from","collectionId","allDescendants","on","create","where","sn","direction","en","before","nn","rn","unaryFilter","fieldFilter","getFilters","compositeFilter","fieldPaths","an","hn","timerId","reset","cancel","max","enqueueAfterDelay","skipDelay","ln","authCredentials","appCheckCredentials","connection","all","catch","invalidateToken","fn","writes","dn","documents","wn","document","setHasCommittedMutations","mn","structuredAggregationQuery","aggregations","count","alias","result","aggregateFields","pn","yn","_terminated","fetch","bind","_databaseId","app","options","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","_authCredentials","_appCheckCredentials","gn","credentials","ignoreUndefinedProperties","cacheSizeBytes","_n","_app","_settings","_settingsFrozen","_terminateTask","client","sessionIndex","iamToken","authTokenFactory","_terminate","settings","terminate","vn","_getProvider","isInitialized","initialize","instanceIdentifier","bn","getImmediate","identifier","_initialized","a","En","_getSettings","_setSettings","mockUserToken","sub","user_id","In","_delete","Tn","An","_data","query","Rn","datastore","userDataWriter","_query","entries","convertValue","Pn","converter","_key","firestore","$n","Vn","_path","Nn","Dn","Fn","arguments","xn","Sn","qn","_byteString","On","_internalPath","kn","Cn","_methodName","Ln","isFinite","_lat","_long","Mn","Un","jn","Bn","Qn","hr","methodName","zn","Wn","Gn","merge","mergeFields","sr","ur","contains","lr","covers","Kn","Yn","Hn","Jn","rr","Xn","Zn","tr","ar","er","f","nr","ir","_toFieldTransform","fromDate","getPrototypeOf","cr","search","fr","_firestore","_userDataWriter","_document","_converter","dr","fromFirestore","pr","wr","_docs","docs","mr","yr","gr","_r","Er","vr","_apply","_field","_op","_value","_parse","Lr","Cr","kr","br","_create","_queryConstraints","_getOperator","Ir","Ur","Tr","Ar","_direction","Mr","Rr","Pr","_limit","_limitType","Vr","$r","Nr","_docOrFields","_inclusive","Or","Dr","Fr","xr","Sr","qr","jr","toFirestore","Br","convertDocumentKey","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","Qr","isFoundDocument","zr","reverse","Wr","toMutation","none","Gr","Kr","Yr","Hr","run","Jr","Xr","Zr","ts","es","ns","rs","_commitHandler","_mutations","_committed","_dataReader","_verifyNotCommitted","ss","is","os","readVersions","mutations","committed","lastWriteError","writtenDocs","Set","ensureCommitNotCalled","recordVersion","write","preconditionForUpdate","fromPath","isNoDocument","us","maxAttempts","cs","asyncQueue","updateFunction","deferred","enqueueAndForget","commit","as","hs","targetTimeMs","removalCallback","timerHandle","setTimeout","handleDelayElapsed","clearTimeout","start","ls","visibilityState","addEventListener","enqueue","removeEventListener","shift","stack","includes","createAndSchedule","splice","fs","_transaction","lookup","ds","getProvider","apply","setMultipleInstances"],"sources":["C:\\Users\\Dell\\Desktop\\PocketMoneyWeb\\PocketMoney\\node_modules\\@firebase\\firestore\\dist\\lite\\index.browser.esm2017.js"],"sourcesContent":["import { _getProvider, getApp as t, _removeServiceInstance as e, _registerComponent as n, registerVersion as r, SDK_VERSION as s } from \"@firebase/app\";\n\nimport { Component as i } from \"@firebase/component\";\n\nimport { Logger as o, LogLevel as u } from \"@firebase/logger\";\n\nimport { FirebaseError as c, getDefaultEmulatorHostnameAndPort as a, createMockUserToken as h, getModularInstance as l, deepEqual as f } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass d {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ d.UNAUTHENTICATED = new d(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), \nd.MOCK_USER = new d(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet w = \"9.17.1\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst m = new o(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function p(t) {\n    m.setLogLevel(t);\n}\n\nfunction y(t, ...e) {\n    if (m.logLevel <= u.DEBUG) {\n        const n = e.map(v);\n        m.debug(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\nfunction g(t, ...e) {\n    if (m.logLevel <= u.ERROR) {\n        const n = e.map(v);\n        m.error(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function _(t, ...e) {\n    if (m.logLevel <= u.WARN) {\n        const n = e.map(v);\n        m.warn(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function v(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function b(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${w}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw g(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function E(t, e) {\n    t || b();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function I(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const T = \"ok\", A = \"cancelled\", R = \"unknown\", P = \"invalid-argument\", V = \"deadline-exceeded\", $ = \"not-found\", N = \"already-exists\", D = \"permission-denied\", F = \"unauthenticated\", x = \"resource-exhausted\", S = \"failed-precondition\", q = \"aborted\", O = \"out-of-range\", k = \"unimplemented\", C = \"internal\", L = \"unavailable\", M = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class U extends c {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class B {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class Q {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(d.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class z {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class W {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (E(\"string\" == typeof t.accessToken), \n        new B(t.accessToken, new d(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class G {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, \n        this.h = new Map;\n    }\n    /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */    l() {\n        return this.u ? this.u() : (\n        // Make sure this really is a Gapi client.\n        E(!(\"object\" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), \n        this.t.auth.getAuthHeaderValueForFirstParty([]));\n    }\n    get headers() {\n        this.h.set(\"X-Goog-AuthUser\", this.i);\n        // Use array notation to prevent minification\n        const t = this.l();\n        return t && this.h.set(\"Authorization\", t), this.o && this.h.set(\"X-Goog-Iam-Authorization-Token\", this.o), \n        this.h;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class K {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r;\n    }\n    getToken() {\n        return Promise.resolve(new G(this.t, this.i, this.o, this.u));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(d.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass Y {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class H {\n    constructor(t) {\n        this.m = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (E(\"string\" == typeof t.token), \n        new Y(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass J {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass X {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new X(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof X && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass Z {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === Z.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof Z ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class tt extends Z {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new U(P, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\nconst et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class nt extends Z {\n    construct(t, e, n) {\n        return new nt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return et.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new nt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new U(P, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(P, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n        return new nt(e);\n    }\n    static emptyPath() {\n        return new nt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class rt {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new rt(tt.fromString(t));\n    }\n    static fromName(t) {\n        return new rt(tt.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new rt(tt.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === tt.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return tt.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new rt(new tt(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function st(t, e, n) {\n    if (!n) throw new U(P, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction it(t) {\n    if (!rt.isDocumentKey(t)) throw new U(P, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function ot(t) {\n    if (rt.isDocumentKey(t)) throw new U(P, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction ut(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : b();\n}\n\nfunction ct(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = ut(t);\n            throw new U(P, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction at(t, e) {\n    if (e <= 0) throw new U(P, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ht(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function lt(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ft = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\",\n    RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar dt, wt;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction mt(t) {\n    if (void 0 === t) return g(\"RPC_ERROR\", \"HTTP error has no status\"), R;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return T;\n\n      case 400:\n        // Bad Request\n        return S;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return F;\n\n      case 403:\n        // Forbidden\n        return D;\n\n      case 404:\n        // Not Found\n        return $;\n\n      case 409:\n        // Conflict\n        return q;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return O;\n\n      case 429:\n        // Too Many Requests\n        return x;\n\n      case 499:\n        // Client Closed Request\n        return A;\n\n      case 500:\n        // Internal Server Error\n        return R;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return k;\n\n      case 503:\n        // Service Unavailable\n        return L;\n\n      case 504:\n        // Gateway Timeout\n        return V;\n\n      default:\n        return t >= 200 && t < 300 ? T : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : R;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (wt = dt || (dt = {}))[wt.OK = 0] = \"OK\", wt[wt.CANCELLED = 1] = \"CANCELLED\", \nwt[wt.UNKNOWN = 2] = \"UNKNOWN\", wt[wt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nwt[wt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", wt[wt.NOT_FOUND = 5] = \"NOT_FOUND\", \nwt[wt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", wt[wt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nwt[wt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", wt[wt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nwt[wt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", wt[wt.ABORTED = 10] = \"ABORTED\", \nwt[wt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", wt[wt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nwt[wt.INTERNAL = 13] = \"INTERNAL\", wt[wt.UNAVAILABLE = 14] = \"UNAVAILABLE\", wt[wt.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass pt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.p = e + \"://\" + t.host, this.g = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    get v() {\n        // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n        // where to run the query, and expect the `request` to NOT specify the \"path\".\n        return !1;\n    }\n    I(t, e, n, r, s) {\n        const i = this.T(t, e);\n        y(\"RestConnection\", \"Sending: \", i, n);\n        const o = {};\n        return this.A(o, r, s), this.R(t, i, o, n).then((t => (y(\"RestConnection\", \"Received: \", t), \n        t)), (e => {\n            throw _(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), \n            e;\n        }));\n    }\n    P(t, e, n, r, s, i) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.I(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    A(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    T(t, e) {\n        const n = ft[t];\n        return `${this.p}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.V = e;\n    }\n    $(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async R(t, e, n, r) {\n        var s;\n        const i = JSON.stringify(r);\n        let o;\n        try {\n            o = await this.V(e, {\n                method: \"POST\",\n                headers: n,\n                body: i\n            });\n        } catch (t) {\n            const e = t;\n            throw new U(mt(e.status), \"Request failed with error: \" + e.statusText);\n        }\n        if (!o.ok) {\n            let t = await o.json();\n            Array.isArray(t) && (t = t[0]);\n            const e = null === (s = null == t ? void 0 : t.error) || void 0 === s ? void 0 : s.message;\n            throw new U(mt(o.status), `Request failed with error: ${null != e ? e : o.statusText}`);\n        }\n        return o.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction yt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class gt {\n    static N() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = yt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction _t(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function vt(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function bt(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Et(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass It {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = atob(t);\n        return new It(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new It(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        /** Converts a binary string to a Base64 encoded string. */\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return _t(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nIt.EMPTY_BYTE_STRING = new It(\"\");\n\nconst Tt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function At(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (E(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = Tt.exec(t);\n        if (E(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: Rt(t.seconds),\n        nanos: Rt(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function Rt(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function Pt(t) {\n    return \"string\" == typeof t ? It.fromBase64String(t) : It.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass Vt {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return Vt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return Vt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new Vt(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? _t(this.nanoseconds, t.nanoseconds) : _t(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function $t(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function Nt(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return $t(e) ? Nt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function Dt(t) {\n    const e = At(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new Vt(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ft = {\n    fields: {\n        __type__: {\n            stringValue: \"__max__\"\n        }\n    }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction xt(t) {\n    return \"nullValue\" in t ? 0 /* TypeOrder.NullValue */ : \"booleanValue\" in t ? 1 /* TypeOrder.BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* TypeOrder.NumberValue */ : \"timestampValue\" in t ? 3 /* TypeOrder.TimestampValue */ : \"stringValue\" in t ? 5 /* TypeOrder.StringValue */ : \"bytesValue\" in t ? 6 /* TypeOrder.BlobValue */ : \"referenceValue\" in t ? 7 /* TypeOrder.RefValue */ : \"geoPointValue\" in t ? 8 /* TypeOrder.GeoPointValue */ : \"arrayValue\" in t ? 9 /* TypeOrder.ArrayValue */ : \"mapValue\" in t ? $t(t) ? 4 /* TypeOrder.ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ (t) ? 9007199254740991 /* TypeOrder.MaxValue */ : 10 /* TypeOrder.ObjectValue */ : b();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function St(t, e) {\n    if (t === e) return !0;\n    const n = xt(t);\n    if (n !== xt(e)) return !1;\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return !0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return Dt(t).isEqual(Dt(e));\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = At(t.timestampValue), r = At(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* TypeOrder.StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            return Pt(t.bytesValue).isEqual(Pt(e.bytesValue));\n        }(t, e);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            return Rt(t.geoPointValue.latitude) === Rt(e.geoPointValue.latitude) && Rt(t.geoPointValue.longitude) === Rt(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return Rt(t.integerValue) === Rt(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = Rt(t.doubleValue), r = Rt(e.doubleValue);\n                return n === r ? lt(n) === lt(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return vt(t.arrayValue.values || [], e.arrayValue.values || [], St);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (bt(n) !== bt(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !St(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return b();\n    }\n}\n\nfunction qt(t, e) {\n    return void 0 !== (t.values || []).find((t => St(t, e)));\n}\n\nfunction Ot(t, e) {\n    if (t === e) return 0;\n    const n = xt(t), r = xt(e);\n    if (n !== r) return _t(n, r);\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return 0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return _t(t.booleanValue, e.booleanValue);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            const n = Rt(t.integerValue || t.doubleValue), r = Rt(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return kt(t.timestampValue, e.timestampValue);\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return kt(Dt(t), Dt(e));\n\n      case 5 /* TypeOrder.StringValue */ :\n        return _t(t.stringValue, e.stringValue);\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            const n = Pt(t), r = Pt(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = _t(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return _t(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            const n = _t(Rt(t.latitude), Rt(e.latitude));\n            if (0 !== n) return n;\n            return _t(Rt(t.longitude), Rt(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = Ot(n[t], r[t]);\n                if (e) return e;\n            }\n            return _t(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            if (t === Ft && e === Ft) return 0;\n            if (t === Ft) return 1;\n            if (e === Ft) return -1;\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = _t(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = Ot(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return _t(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw b();\n    }\n}\n\nfunction kt(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return _t(t, e);\n    const n = At(t), r = At(e), s = _t(n.seconds, r.seconds);\n    return 0 !== s ? s : _t(n.nanos, r.nanos);\n}\n\nfunction Ct(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function Lt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Mt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Ut(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function jt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Bt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Et(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Bt(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Bt(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Qt {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\nfunction zt(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!St(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Wt {}\n\nclass Gt extends Wt {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* Operator.IN */ === e || \"not-in\" /* Operator.NOT_IN */ === e ? this.createKeyFieldInFilter(t, e, n) : new Ht(t, e, n) : \"array-contains\" /* Operator.ARRAY_CONTAINS */ === e ? new te(t, n) : \"in\" /* Operator.IN */ === e ? new ee(t, n) : \"not-in\" /* Operator.NOT_IN */ === e ? new ne(t, n) : \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === e ? new re(t, n) : new Gt(t, e, n);\n    }\n    static createKeyFieldInFilter(t, e, n) {\n        return \"in\" /* Operator.IN */ === e ? new Jt(t, n) : new Xt(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* Operator.NOT_EQUAL */ === this.op ? null !== e && this.matchesComparison(Ot(e, this.value)) : null !== e && xt(this.value) === xt(e) && this.matchesComparison(Ot(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    matchesComparison(t) {\n        switch (this.op) {\n          case \"<\" /* Operator.LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* Operator.EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* Operator.GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return b();\n        }\n    }\n    isInequality() {\n        return [ \"<\" /* Operator.LESS_THAN */ , \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ , \">\" /* Operator.GREATER_THAN */ , \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ , \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n    getFlattenedFilters() {\n        return [ this ];\n    }\n    getFilters() {\n        return [ this ];\n    }\n    getFirstInequalityField() {\n        return this.isInequality() ? this.field : null;\n    }\n}\n\nclass Kt extends Wt {\n    constructor(t, e) {\n        super(), this.filters = t, this.op = e, this.D = null;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e) {\n        return new Kt(t, e);\n    }\n    matches(t) {\n        return \"and\" /* CompositeOperator.AND */ === this.op ? void 0 === this.filters.find((e => !e.matches(t))) : void 0 !== this.filters.find((e => e.matches(t)));\n    }\n    getFlattenedFilters() {\n        return null !== this.D || (this.D = this.filters.reduce(((t, e) => t.concat(e.getFlattenedFilters())), [])), \n        this.D;\n    }\n    // Returns a mutable copy of `this.filters`\n    getFilters() {\n        return Object.assign([], this.filters);\n    }\n    getFirstInequalityField() {\n        const t = this.F((t => t.isInequality()));\n        return null !== t ? t.field : null;\n    }\n    // Performs a depth-first search to find and return the first FieldFilter in the composite filter\n    // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the\n    // predicate.\n    F(t) {\n        for (const e of this.getFlattenedFilters()) if (t(e)) return e;\n        return null;\n    }\n}\n\nfunction Yt(t, e) {\n    return t instanceof Gt ? function(t, e) {\n        return e instanceof Gt && t.op === e.op && t.field.isEqual(e.field) && St(t.value, e.value);\n    }(t, e) : t instanceof Kt ? function(t, e) {\n        if (e instanceof Kt && t.op === e.op && t.filters.length === e.filters.length) {\n            return t.filters.reduce(((t, n, r) => t && Yt(n, e.filters[r])), !0);\n        }\n        return !1;\n    }\n    /** Filter that matches on key fields (i.e. '__name__'). */ (t, e) : void b();\n}\n\nclass Ht extends Gt {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = rt.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = rt.comparator(t.key, this.key);\n        return this.matchesComparison(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class Jt extends Gt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e), this.keys = Zt(\"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class Xt extends Gt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e), this.keys = Zt(\"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction Zt(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => rt.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class te extends Gt {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* Operator.ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return Lt(e) && qt(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class ee extends Gt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && qt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class ne extends Gt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        if (qt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !qt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class re extends Gt {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!Lt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => qt(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class se {\n    constructor(t, e = \"asc\" /* Direction.ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction ie(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class oe {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new oe(t);\n    }\n    static min() {\n        return new oe(new Vt(0, 0));\n    }\n    static max() {\n        return new oe(new Vt(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass ue {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || ae.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new ue(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, ae.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new ue(this.comparator, this.root.remove(t, this.comparator).copy(null, null, ae.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const r = this.comparator(t, n.key);\n            if (0 === r) return e + n.left.size;\n            r < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new ce(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new ce(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new ce(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new ce(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass ce {\n    constructor(t, e, n, r) {\n        this.isReverse = r, this.nodeStack = [];\n        let s = 1;\n        for (;!t.isEmpty(); ) if (s = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && r && (s *= -1), s < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === s) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass ae {\n    constructor(t, e, n, r, s) {\n        this.key = t, this.value = e, this.color = null != n ? n : ae.RED, this.left = null != r ? r : ae.EMPTY, \n        this.right = null != s ? s : ae.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, r, s) {\n        return new ae(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let r = this;\n        const s = n(t, r.key);\n        return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), \n        r.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return ae.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, r = this;\n        if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), \n        r = r.copy(null, null, null, r.left.remove(t, e), null); else {\n            if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), \n            0 === e(t, r.key)) {\n                if (r.right.isEmpty()) return ae.EMPTY;\n                n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n            }\n            r = r.copy(null, null, null, null, r.right.remove(t, e));\n        }\n        return r.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, ae.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, ae.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw b();\n        if (this.right.isRed()) throw b();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw b();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nae.EMPTY = null, ae.RED = !0, ae.BLACK = !1;\n\n// end LLRBEmptyNode\nae.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw b();\n    }\n    get value() {\n        throw b();\n    }\n    get color() {\n        throw b();\n    }\n    get left() {\n        throw b();\n    }\n    get right() {\n        throw b();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, r, s) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new ae(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass he {\n    constructor(t) {\n        this.comparator = t, this.data = new ue(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const r = n.getNext();\n            if (this.comparator(r.key, t[1]) >= 0) return;\n            e(r.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new le(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new le(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof he)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, r = n.getNext().key;\n            if (0 !== this.comparator(t, r)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new he(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass le {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class fe {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(nt.comparator);\n    }\n    static empty() {\n        return new fe([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new he(nt.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const n of t) e = e.add(n);\n        return new fe(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return vt(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ class de {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new de({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !jt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Bt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = nt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Bt(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        jt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return St(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            jt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Et(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new de(Bt(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class we {\n    constructor(t, e, n, r, s, i, o) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.createTime = s, \n        this.data = i, this.documentState = o;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new we(t, 0 /* DocumentType.INVALID */ , \n        /* version */ oe.min(), \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n, r) {\n        return new we(t, 1 /* DocumentType.FOUND_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ n, r, 0 /* DocumentState.SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new we(t, 2 /* DocumentType.NO_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new we(t, 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        // If a document is switching state from being an invalid or deleted\n        // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n        // update from Watch or due to applying a local set mutation on top\n        // of a deleted document, our best guess about its createTime would be the\n        // version at which the document transitioned to a FOUND_DOCUMENT.\n        return !this.createTime.isEqual(oe.min()) || 2 /* DocumentType.NO_DOCUMENT */ !== this.documentType && 0 /* DocumentType.INVALID */ !== this.documentType || (this.createTime = t), \n        this.version = t, this.documentType = 1 /* DocumentType.FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* DocumentType.NO_DOCUMENT */ , \n        this.data = de.empty(), this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        this.data = de.empty(), this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , \n        this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ , this.version = oe.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* DocumentType.INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* DocumentType.FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* DocumentType.NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* DocumentType.UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof we && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new we(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {createTime: ${this.createTime}}), {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass me {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.S = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function pe(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new me(t, e, n, r, s, i, o);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nclass ye {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* LimitType.First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.q = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.O = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function ge(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction _e(t) {\n    for (const e of t.filters) {\n        const t = e.getFirstInequalityField();\n        if (null !== t) return t;\n    }\n    return null;\n}\n\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction ve(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function be(t) {\n    const e = I(t);\n    if (null === e.q) {\n        e.q = [];\n        const t = _e(e), n = ge(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.q.push(new se(t)), e.q.push(new se(nt.keyField(), \"asc\" /* Direction.ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.q.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* Direction.ASCENDING */;\n                e.q.push(new se(nt.keyField(), t));\n            }\n        }\n    }\n    return e.q;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function Ee(t) {\n    const e = I(t);\n    if (!e.O) if (\"F\" /* LimitType.First */ === e.limitType) e.O = pe(e.path, e.collectionGroup, be(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of be(e)) {\n            const e = \"desc\" /* Direction.DESCENDING */ === n.dir ? \"asc\" /* Direction.ASCENDING */ : \"desc\" /* Direction.DESCENDING */;\n            t.push(new se(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new Qt(e.endAt.position, e.endAt.inclusive) : null, r = e.startAt ? new Qt(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.O = pe(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.O;\n}\n\nfunction Ie(t, e) {\n    e.getFirstInequalityField(), _e(t);\n    const n = t.filters.concat([ e ]);\n    return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n}\n\nfunction Te(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!ie(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let n = 0; n < t.filters.length; n++) if (!Yt(t.filters[n], e.filters[n])) return !1;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!zt(t.startAt, e.startAt) && zt(t.endAt, e.endAt);\n    }(Ee(t), Ee(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction Ae(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !lt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.k) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: lt(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class Re {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class Pe extends Re {}\n\n/** Transforms an array value via a union operation. */ class Ve extends Re {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class $e extends Re {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class Ne extends Re {\n    constructor(t, e) {\n        super(), this.C = t, this.L = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class De {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class Fe {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new Fe;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new Fe(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new Fe(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class xe {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class Se extends xe {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* MutationType.Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class qe extends xe {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* MutationType.Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class Oe extends xe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* MutationType.Delete */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class ke extends xe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* MutationType.Verify */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ce = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Le = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})(), Me = (() => {\n    const t = {\n        and: \"AND\",\n        or: \"OR\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Ue {\n    constructor(t, e) {\n        this.databaseId = t, this.k = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction je(t, e) {\n    if (t.k) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Be(t, e) {\n    return t.k ? e.toBase64() : e.toUint8Array();\n}\n\nfunction Qe(t, e) {\n    return je(t, e.toTimestamp());\n}\n\nfunction ze(t) {\n    return E(!!t), oe.fromTimestamp(function(t) {\n        const e = At(t);\n        return new Vt(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction We(t, e) {\n    return function(t) {\n        return new tt([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Ge(t, e) {\n    return We(t.databaseId, e.path);\n}\n\nfunction Ke(t, e) {\n    const n = function(t) {\n        const e = tt.fromString(t);\n        return E(cn(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction Ye(t, e) {\n    return We(t.databaseId, e);\n}\n\nfunction He(t) {\n    return new tt([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction Je(t, e, n) {\n    return {\n        name: Ge(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction Xe(t, e) {\n    return \"found\" in e ? function(t, e) {\n        E(!!e.found), e.found.name, e.found.updateTime;\n        const n = Ke(t, e.found.name), r = ze(e.found.updateTime), s = e.found.createTime ? ze(e.found.createTime) : oe.min(), i = new de({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return we.newFoundDocument(n, r, s, i);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        E(!!e.missing), E(!!e.readTime);\n        const n = Ke(t, e.missing), r = ze(e.readTime);\n        return we.newNoDocument(n, r);\n    }(t, e) : b();\n}\n\nfunction Ze(t, e) {\n    let n;\n    if (e instanceof Se) n = {\n        update: Je(t, e.key, e.value)\n    }; else if (e instanceof Oe) n = {\n        delete: Ge(t, e.key)\n    }; else if (e instanceof qe) n = {\n        update: Je(t, e.key, e.data),\n        updateMask: un(e.fieldMask)\n    }; else {\n        if (!(e instanceof ke)) return b();\n        n = {\n            verify: Ge(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof Pe) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof Ve) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof $e) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Ne) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.L\n        };\n        throw b();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: Qe(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : b();\n    }(t, e.precondition)), n;\n}\n\nfunction tn(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = Ye(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = Ye(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        return on(Kt.create(t, \"and\" /* CompositeOperator.AND */));\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: sn(t.field),\n                direction: en(t.dir)\n            };\n        }\n        // visible for testing\n        (t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.k || ht(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction en(t) {\n    return Ce[t];\n}\n\n// visible for testing\nfunction nn(t) {\n    return Le[t];\n}\n\nfunction rn(t) {\n    return Me[t];\n}\n\nfunction sn(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction on(t) {\n    return t instanceof Gt ? function(t) {\n        if (\"==\" /* Operator.EQUAL */ === t.op) {\n            if (Ut(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NAN\"\n                }\n            };\n            if (Mt(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NULL\"\n                }\n            };\n        } else if (\"!=\" /* Operator.NOT_EQUAL */ === t.op) {\n            if (Ut(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NOT_NAN\"\n                }\n            };\n            if (Mt(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NOT_NULL\"\n                }\n            };\n        }\n        return {\n            fieldFilter: {\n                field: sn(t.field),\n                op: nn(t.op),\n                value: t.value\n            }\n        };\n    }(t) : t instanceof Kt ? function(t) {\n        const e = t.getFilters().map((t => on(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: rn(t.op),\n                filters: e\n            }\n        };\n    }(t) : b();\n}\n\nfunction un(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction cn(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function an(t) {\n    return new Ue(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass hn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.M = t, this.timerId = e, this.U = n, this.j = r, this.B = s, this.W = 0, this.G = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.K = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.W = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    Y() {\n        this.W = this.B;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    H(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.W + this.J()), n = Math.max(0, Date.now() - this.K), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && y(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.W} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.G = this.M.enqueueAfterDelay(this.timerId, r, (() => (this.K = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.W *= this.j, this.W < this.U && (this.W = this.U), this.W > this.B && (this.W = this.B);\n    }\n    X() {\n        null !== this.G && (this.G.skipDelay(), this.G = null);\n    }\n    cancel() {\n        null !== this.G && (this.G.cancel(), this.G = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    J() {\n        return (Math.random() - .5) * this.W;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass ln extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.connection = n, \n        this.C = r, this.Z = !1;\n    }\n    tt() {\n        if (this.Z) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    I(t, e, n) {\n        return this.tt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.connection.I(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    P(t, e, n, r) {\n        return this.tt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.connection.P(t, e, n, s, i, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    terminate() {\n        this.Z = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function fn(t, e) {\n    const n = I(t), r = He(n.C) + \"/documents\", s = {\n        writes: e.map((t => Ze(n.C, t)))\n    };\n    await n.I(\"Commit\", r, s);\n}\n\nasync function dn(t, e) {\n    const n = I(t), r = He(n.C) + \"/documents\", s = {\n        documents: e.map((t => Ge(n.C, t)))\n    }, i = await n.P(\"BatchGetDocuments\", r, s, e.length), o = new Map;\n    i.forEach((t => {\n        const e = Xe(n.C, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        E(!!e), u.push(e);\n    })), u;\n}\n\nasync function wn(t, e) {\n    const n = I(t), r = tn(n.C, Ee(e));\n    return (await n.P(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = Ke(t, e.name), s = ze(e.updateTime), i = e.createTime ? ze(e.createTime) : oe.min(), o = new de({\n            mapValue: {\n                fields: e.fields\n            }\n        }), u = we.newFoundDocument(r, s, i, o);\n        return n && u.setHasCommittedMutations(), n ? u.setHasCommittedMutations() : u;\n    }(n.C, t.document, void 0)));\n}\n\nasync function mn(t, e) {\n    const n = I(t), r = function(t, e) {\n        const n = tn(t, e);\n        return {\n            structuredAggregationQuery: {\n                aggregations: [ {\n                    count: {},\n                    alias: \"count_alias\"\n                } ],\n                structuredQuery: n.structuredQuery\n            },\n            parent: n.parent\n        };\n    }(n.C, Ee(e)), s = r.parent;\n    n.connection.v || delete r.parent;\n    return (await n.P(\"RunAggregationQuery\", s, r, /*expectedResponseCount=*/ 1)).filter((t => !!t.result)).map((t => t.result.aggregateFields));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const pn = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction yn(t) {\n    if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n    if (!pn.has(t)) {\n        y(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new pt(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new J(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = an(t._databaseId), u = function(t, e, n, r) {\n            return new ln(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        pn.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return pn.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass gn {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new U(P, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */ class _n {\n    /** @hideconstructor */\n    constructor(t, e, n, r) {\n        this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, \n        this._app = r, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new gn({}), \n        this._settingsFrozen = !1;\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new gn(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new Q;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                return new K(e, t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = pn.get(t);\n            e && (y(\"ComponentProvider\", \"Removing Datastore\"), pn.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction vn(t, e, n) {\n    n || (n = \"(default)\");\n    const r = _getProvider(t, \"firestore/lite\");\n    if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n    return r.initialize({\n        options: e,\n        instanceIdentifier: n\n    });\n}\n\nfunction bn(e, n) {\n    const r = \"object\" == typeof e ? e : t(), s = \"string\" == typeof e ? e : n || \"(default)\", i = _getProvider(r, \"firestore/lite\").getImmediate({\n        identifier: s\n    });\n    if (!i._initialized) {\n        const t = a(\"firestore\");\n        t && En(i, ...t);\n    }\n    return i;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function En(t, e, n, r = {}) {\n    var s;\n    const i = (t = ct(t, _n))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && _(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = d.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = h(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new d(i);\n        }\n        t._authCredentials = new z(new B(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function In(t) {\n    return t = ct(t, _n), e(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass Tn {\n    constructor() {\n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateField\";\n    }\n}\n\n/**\n * The results of executing an aggregation query.\n */ class An {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._data = e, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateQuerySnapshot\", this.query = t;\n    }\n    /**\n     * Returns the results of the aggregations performed over the underlying\n     * query.\n     *\n     * The keys of the returned object will be the same as those of the\n     * `AggregateSpec` object specified to the aggregation method, and the values\n     * will be the corresponding aggregation result.\n     *\n     * @returns The results of the aggregations performed over the underlying\n     * query.\n     */    data() {\n        return this._data;\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * CountQueryRunner encapsulates the logic needed to run the count aggregation\n * queries.\n */ class Rn {\n    constructor(t, e, n) {\n        this.query = t, this.datastore = e, this.userDataWriter = n;\n    }\n    run() {\n        return mn(this.datastore, this.query._query).then((t => {\n            E(void 0 !== t[0]);\n            const e = Object.entries(t[0]).filter((([t, e]) => \"count_alias\" === t)).map((([t, e]) => this.userDataWriter.convertValue(e)))[0];\n            return E(\"number\" == typeof e), Promise.resolve(new An(this.query, {\n                count: e\n            }));\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */ class Pn {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new $n(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new Pn(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class Vn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new Vn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class $n extends Vn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new ye(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new Pn(this.firestore, \n        /* converter= */ null, new rt(t));\n    }\n    withConverter(t) {\n        return new $n(this.firestore, t, this._path);\n    }\n}\n\nfunction Nn(t, e, ...n) {\n    if (t = l(t), st(\"collection\", \"path\", e), t instanceof _n) {\n        const r = tt.fromString(e, ...n);\n        return ot(r), new $n(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof Pn || t instanceof $n)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return ot(r), new $n(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function Dn(t, e) {\n    if (t = ct(t, _n), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new Vn(t, \n    /* converter= */ null, function(t) {\n        return new ye(tt.emptyPath(), t);\n    }(e));\n}\n\nfunction Fn(t, e, ...n) {\n    if (t = l(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = gt.N()), st(\"doc\", \"path\", e), t instanceof _n) {\n        const r = tt.fromString(e, ...n);\n        return it(r), new Pn(t, \n        /* converter= */ null, new rt(r));\n    }\n    {\n        if (!(t instanceof Pn || t instanceof $n)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return it(r), new Pn(t.firestore, t instanceof $n ? t.converter : null, new rt(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function xn(t, e) {\n    return t = l(t), e = l(e), (t instanceof Pn || t instanceof $n) && (e instanceof Pn || e instanceof $n) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Sn(t, e) {\n    return t = l(t), e = l(e), t instanceof Vn && e instanceof Vn && (t.firestore === e.firestore && Te(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class qn {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new qn(It.fromBase64String(t));\n        } catch (t) {\n            throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new qn(It.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class On {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new nt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function kn() {\n    return new On(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class Cn {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class Ln {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return _t(this._lat, t._lat) || _t(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Mn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class Un {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new qe(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Se(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class jn {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new qe(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction Bn(t) {\n    switch (t) {\n      case 0 /* UserDataSource.Set */ :\n // fall through\n              case 2 /* UserDataSource.MergeSet */ :\n // fall through\n              case 1 /* UserDataSource.Update */ :\n        return !0;\n\n      case 3 /* UserDataSource.Argument */ :\n      case 4 /* UserDataSource.ArrayArgument */ :\n        return !1;\n\n      default:\n        throw b();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class Qn {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.C = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.et(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get nt() {\n        return this.settings.nt;\n    }\n    /** Returns a new context with the specified settings overwritten. */    rt(t) {\n        return new Qn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.C, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    st(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.rt({\n            path: n,\n            it: !1\n        });\n        return r.ot(t), r;\n    }\n    ut(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.rt({\n            path: n,\n            it: !1\n        });\n        return r.et(), r;\n    }\n    ct(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.rt({\n            path: void 0,\n            it: !0\n        });\n    }\n    at(t) {\n        return hr(t, this.settings.methodName, this.settings.ht || !1, this.path, this.settings.lt);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    et() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.ot(this.path.get(t));\n    }\n    ot(t) {\n        if (0 === t.length) throw this.at(\"Document fields must not be empty\");\n        if (Bn(this.nt) && Mn.test(t)) throw this.at('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class zn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.C = n || an(t);\n    }\n    /** Creates a new top-level parse context. */    ft(t, e, n, r = !1) {\n        return new Qn({\n            nt: t,\n            methodName: e,\n            lt: n,\n            path: nt.emptyPath(),\n            it: !1,\n            ht: r\n        }, this.databaseId, this.C, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Wn(t) {\n    const e = t._freezeSettings(), n = an(t._databaseId);\n    return new zn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Gn(t, e, n, r, s, i = {}) {\n    const o = t.ft(i.merge || i.mergeFields ? 2 /* UserDataSource.MergeSet */ : 0 /* UserDataSource.Set */ , e, n, s);\n    or(\"Data must be an object, but it was:\", o, r);\n    const u = sr(r, o);\n    let c, a;\n    if (i.merge) c = new fe(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = ur(e, r, n);\n            if (!o.contains(s)) throw new U(P, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            lr(t, s) || t.push(s);\n        }\n        c = new fe(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new Un(new de(u), c, a);\n}\n\nclass Kn extends Cn {\n    _toFieldTransform(t) {\n        if (2 /* UserDataSource.MergeSet */ !== t.nt) throw 1 /* UserDataSource.Update */ === t.nt ? t.at(`${this._methodName}() can only appear at the top level of your update data`) : t.at(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof Kn;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function Yn(t, e, n) {\n    return new Qn({\n        nt: 3 /* UserDataSource.Argument */ ,\n        lt: e.settings.lt,\n        methodName: t._methodName,\n        it: n\n    }, e.databaseId, e.C, e.ignoreUndefinedProperties);\n}\n\nclass Hn extends Cn {\n    _toFieldTransform(t) {\n        return new De(t.path, new Pe);\n    }\n    isEqual(t) {\n        return t instanceof Hn;\n    }\n}\n\nclass Jn extends Cn {\n    constructor(t, e) {\n        super(t), this.dt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Yn(this, t, \n        /*array=*/ !0), n = this.dt.map((t => rr(t, e))), r = new Ve(n);\n        return new De(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Xn extends Cn {\n    constructor(t, e) {\n        super(t), this.dt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Yn(this, t, \n        /*array=*/ !0), n = this.dt.map((t => rr(t, e))), r = new $e(n);\n        return new De(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Zn extends Cn {\n    constructor(t, e) {\n        super(t), this.wt = e;\n    }\n    _toFieldTransform(t) {\n        const e = new Ne(t.C, Ae(t.C, this.wt));\n        return new De(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function tr(t, e, n, r) {\n    const s = t.ft(1 /* UserDataSource.Update */ , e, n);\n    or(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = de.empty();\n    Et(r, ((t, r) => {\n        const u = ar(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = l(r);\n        const c = s.ut(u);\n        if (r instanceof Kn) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = rr(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new fe(i);\n    return new jn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function er(t, e, n, r, s, i) {\n    const o = t.ft(1 /* UserDataSource.Update */ , e, n), u = [ ur(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new U(P, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(ur(e, i[t])), c.push(i[t + 1]);\n    const a = [], h = de.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!lr(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = l(n);\n        const r = o.ut(e);\n        if (n instanceof Kn) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = rr(n, r);\n            null != t && (a.push(e), h.set(e, t));\n        }\n    }\n    const f = new fe(a);\n    return new jn(h, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function nr(t, e, n, r = !1) {\n    return rr(n, t.ft(r ? 4 /* UserDataSource.ArrayArgument */ : 3 /* UserDataSource.Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function rr(t, e) {\n    if (ir(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = l(t))) return or(\"Unsupported field value:\", e, t), sr(t, e);\n    if (t instanceof Cn) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Bn(e.nt)) throw e.at(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.at(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.it && 4 /* UserDataSource.ArrayArgument */ !== e.nt) throw e.at(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = rr(s, e.ct(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = l(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return Ae(e.C, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = Vt.fromDate(t);\n            return {\n                timestampValue: je(e.C, n)\n            };\n        }\n        if (t instanceof Vt) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new Vt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: je(e.C, n)\n            };\n        }\n        if (t instanceof Ln) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof qn) return {\n            bytesValue: Be(e.C, t._byteString)\n        };\n        if (t instanceof Pn) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.at(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: We(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.at(`Unsupported field value: ${ut(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction sr(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Converts a Base64 encoded string to a binary string. */ (t) ? Et(t, ((t, r) => {\n        const s = rr(r, e.st(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction ir(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof Vt || t instanceof Ln || t instanceof qn || t instanceof Pn || t instanceof Cn);\n}\n\nfunction or(t, e, n) {\n    if (!ir(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = ut(n);\n        throw \"an object\" === r ? e.at(t + \" a custom object\") : e.at(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function ur(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = l(e)) instanceof On) return e._internalPath;\n    if (\"string\" == typeof e) return ar(t, e);\n    throw hr(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const cr = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function ar(t, e, n) {\n    if (e.search(cr) >= 0) throw hr(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new On(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw hr(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction hr(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new U(P, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function lr(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class fr {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new Pn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new dr(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(pr(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class dr extends fr {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class wr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function mr(t, e) {\n    return t = l(t), e = l(e), t instanceof fr && e instanceof fr ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof wr && e instanceof wr && (Sn(t.query, e.query) && vt(t.docs, e.docs, mr));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function pr(t, e) {\n    return \"string\" == typeof e ? ar(t, e) : e instanceof On ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\nclass yr {}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link startAt}, {@link startAfter}, {@link\n * endBefore}, {@link endAt}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */ class gr extends yr {}\n\nfunction _r(t, e, ...n) {\n    let r = [];\n    e instanceof yr && r.push(e), r = r.concat(n), function(t) {\n        const e = t.filter((t => t instanceof Er)).length, n = t.filter((t => t instanceof vr)).length;\n        if (e > 1 || e > 0 && n > 0) throw new U(P, \"InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.\");\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */ (r);\n    for (const e of r) t = e._apply(t);\n    return t;\n}\n\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link query} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */ class vr extends gr {\n    /**\n     * @internal\n     */\n    constructor(t, e, n) {\n        super(), this._field = t, this._op = e, this._value = n, \n        /** The type of this query constraint */\n        this.type = \"where\";\n    }\n    static _create(t, e, n) {\n        return new vr(t, e, n);\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return Lr(t._query, e), new Vn(t.firestore, t.converter, Ie(t._query, e));\n    }\n    _parse(t) {\n        const e = Wn(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* Operator.ARRAY_CONTAINS */ === i || \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === i) throw new U(P, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i) {\n                    Cr(o, i);\n                    const e = [];\n                    for (const n of o) e.push(kr(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = kr(r, t, o);\n            } else \"in\" /* Operator.IN */ !== i && \"not-in\" /* Operator.NOT_IN */ !== i && \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ !== i || Cr(o, i), \n            u = nr(n, e, o, \n            /* allowArrays= */ \"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i);\n            return Gt.create(s, i, u);\n        }(t._query, \"where\", e, t.firestore._databaseId, this._field, this._op, this._value);\n        return n;\n    }\n}\n\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */ function br(t, e, n) {\n    const r = e, s = pr(\"where\", t);\n    return vr._create(s, r, n);\n}\n\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link query} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ class Er extends yr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e) {\n        super(), this.type = t, this._queryConstraints = e;\n    }\n    static _create(t, e) {\n        return new Er(t, e);\n    }\n    _parse(t) {\n        const e = this._queryConstraints.map((e => e._parse(t))).filter((t => t.getFilters().length > 0));\n        return 1 === e.length ? e[0] : Kt.create(e, this._getOperator());\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return 0 === e.getFilters().length ? t : (function(t, e) {\n            let n = t;\n            const r = e.getFlattenedFilters();\n            for (const t of r) Lr(n, t), n = Ie(n, t);\n        }\n        // Checks if any of the provided filter operators are included in the given list of filters and\n        // returns the first one that is, or null if none are.\n        (t._query, e), new Vn(t.firestore, t.converter, Ie(t._query, e)));\n    }\n    _getQueryConstraints() {\n        return this._queryConstraints;\n    }\n    _getOperator() {\n        return \"and\" === this.type ? \"and\" /* CompositeOperator.AND */ : \"or\" /* CompositeOperator.OR */;\n    }\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a disjunction of\n * the given filter constraints. A disjunction filter includes a document if it\n * satisfies any of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a disjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ function Ir(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => Ur(\"or\", t))), Er._create(\"or\" /* CompositeOperator.OR */ , t);\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a conjunction of\n * the given filter constraints. A conjunction filter includes a document if it\n * satisfies all of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a conjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ function Tr(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => Ur(\"and\", t))), Er._create(\"and\" /* CompositeOperator.AND */ , t);\n}\n\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link query} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */ class Ar extends gr {\n    /**\n     * @internal\n     */\n    constructor(t, e) {\n        super(), this._field = t, this._direction = e, \n        /** The type of this query constraint */\n        this.type = \"orderBy\";\n    }\n    static _create(t, e) {\n        return new Ar(t, e);\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new se(e, n);\n            return function(t, e) {\n                if (null === ge(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = _e(t);\n                    null !== n && Mr(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this._field, this._direction);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new ye(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */ function Rr(t, e = \"asc\") {\n    const n = e, r = pr(\"orderBy\", t);\n    return Ar._create(r, n);\n}\n\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */ class Pr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._limit = e, this._limitType = n;\n    }\n    static _create(t, e, n) {\n        return new Pr(t, e, n);\n    }\n    _apply(t) {\n        return new Vn(t.firestore, t.converter, function(t, e, n) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this._limit, this._limitType));\n    }\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function Vr(t) {\n    return at(\"limit\", t), Pr._create(\"limit\", t, \"F\" /* LimitType.First */);\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function $r(t) {\n    return at(\"limitToLast\", t), Pr._create(\"limitToLast\", t, \"L\" /* LimitType.Last */);\n}\n\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link query} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */ class Nr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new Nr(t, e, n);\n    }\n    _apply(t) {\n        const e = Or(t, this.type, this._docOrFields, this._inclusive);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction Dr(...t) {\n    return Nr._create(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction Fr(...t) {\n    return Nr._create(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */ class xr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new xr(t, e, n);\n    }\n    _apply(t) {\n        const e = Or(t, this.type, this._docOrFields, this._inclusive);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction Sr(...t) {\n    return xr._create(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction qr(...t) {\n    return xr._create(\"endAt\", t, \n    /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function Or(t, e, n, r) {\n    if (n[0] = l(n[0]), n[0] instanceof fr) return function(t, e, n, r, s) {\n        if (!r) throw new U($, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of be(t)) if (n.field.isKeyField()) i.push(Ct(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if ($t(t)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new U(P, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new Qt(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Wn(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new U(P, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new U(P, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!ve(t) && -1 !== c.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(tt.fromString(c));\n                    if (!rt.isDocumentKey(n)) throw new U(P, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new rt(n);\n                    u.push(Ct(e, s));\n                } else {\n                    const t = nr(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new Qt(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction kr(t, e, n) {\n    if (\"string\" == typeof (n = l(n))) {\n        if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!ve(e) && -1 !== n.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(tt.fromString(n));\n        if (!rt.isDocumentKey(r)) throw new U(P, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return Ct(t, new rt(r));\n    }\n    if (n instanceof Pn) return Ct(t, n._key);\n    throw new U(P, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${ut(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function Cr(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new U(P, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n    if (t.length > 10) throw new U(P, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */ function Lr(t, e) {\n    if (e.isInequality()) {\n        const n = _e(t), r = e.field;\n        if (null !== n && !n.isEqual(r)) throw new U(P, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${r.toString()}'`);\n        const s = ge(t);\n        null !== s && Mr(t, r, s);\n    }\n    const n = function(t, e) {\n        for (const n of t) for (const t of n.getFlattenedFilters()) if (e.indexOf(t.op) >= 0) return t.op;\n        return null;\n    }(t.filters, function(t) {\n        switch (t) {\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return [ \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains\" /* Operator.ARRAY_CONTAINS */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"in\" /* Operator.IN */ :\n            return [ \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"not-in\" /* Operator.NOT_IN */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ , \"!=\" /* Operator.NOT_EQUAL */ ];\n\n          default:\n            return [];\n        }\n    }(e.op));\n    if (null !== n) \n    // Special case when it's a duplicate op to give a slightly clearer error message.\n    throw n === e.op ? new U(P, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(P, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n}\n\nfunction Mr(t, e, n) {\n    if (!n.isEqual(e)) throw new U(P, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\nfunction Ur(t, e) {\n    if (!(e instanceof vr || e instanceof Er)) throw new U(P, `Function ${t}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction jr(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass Br extends class {\n    convertValue(t, e = \"none\") {\n        switch (xt(t)) {\n          case 0 /* TypeOrder.NullValue */ :\n            return null;\n\n          case 1 /* TypeOrder.BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* TypeOrder.NumberValue */ :\n            return Rt(t.integerValue || t.doubleValue);\n\n          case 3 /* TypeOrder.TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* TypeOrder.ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* TypeOrder.StringValue */ :\n            return t.stringValue;\n\n          case 6 /* TypeOrder.BlobValue */ :\n            return this.convertBytes(Pt(t.bytesValue));\n\n          case 7 /* TypeOrder.RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* TypeOrder.GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* TypeOrder.ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* TypeOrder.ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw b();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return Et(t.fields, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new Ln(Rt(t.latitude), Rt(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = Nt(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(Dt(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = At(t);\n        return new Vt(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = tt.fromString(t);\n        E(cn(n));\n        const r = new X(n.get(1), n.get(3)), s = new rt(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        g(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new qn(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new Pn(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function Qr(t) {\n    const e = yn((t = ct(t, Pn)).firestore), n = new Br(t.firestore);\n    return dn(e, [ t._key ]).then((e => {\n        E(1 === e.length);\n        const r = e[0];\n        return new fr(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function zr(t) {\n    !function(t) {\n        if (\"L\" /* LimitType.Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ct(t, Vn))._query);\n    const e = yn(t.firestore), n = new Br(t.firestore);\n    return wn(e, t._query).then((e => {\n        const r = e.map((e => new dr(t.firestore, n, e.key, e, t.converter)));\n        return \"L\" /* LimitType.Last */ === t._query.limitType && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new wr(t, r);\n    }));\n}\n\nfunction Wr(t, e, n) {\n    const r = jr((t = ct(t, Pn)).converter, e, n), s = Gn(Wn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return fn(yn(t.firestore), [ s.toMutation(t._key, Fe.none()) ]);\n}\n\nfunction Gr(t, e, n, ...r) {\n    const s = Wn((t = ct(t, Pn)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(s, \"updateDoc\", t._key, e, n, r) : tr(s, \"updateDoc\", t._key, e);\n    return fn(yn(t.firestore), [ i.toMutation(t._key, Fe.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Kr(t) {\n    return fn(yn((t = ct(t, Pn)).firestore), [ new Oe(t._key, Fe.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Yr(t, e) {\n    const n = Fn(t = ct(t, $n)), r = jr(t.converter, e), s = Gn(Wn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return fn(yn(t.firestore), [ s.toMutation(n._key, Fe.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */ function Hr(t) {\n    const e = ct(t.firestore, _n), n = yn(e), r = new Br(e);\n    return new Rn(t, n, r).run();\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */ function Jr(t, e) {\n    return Sn(t.query, e.query) && f(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function Xr() {\n    return new Kn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function Zr() {\n    return new Hn(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function ts(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Jn(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function es(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Xn(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function ns(t) {\n    return new Zn(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class rs {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Wn(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = ss(t, this._firestore), s = jr(r.converter, e, n), i = Gn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, Fe.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = ss(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : tr(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, Fe.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = ss(t, this._firestore);\n        return this._mutations = this._mutations.concat(new Oe(e._key, Fe.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction ss(t, e) {\n    if ((t = l(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function is(t) {\n    const e = yn(t = ct(t, _n));\n    return new rs(t, (t => fn(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class os {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await dn(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new Oe(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = rt.fromPath(e);\n            this.mutations.push(new ke(n, this.precondition(n)));\n        })), await fn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw b();\n            // Represent a deleted doc using SnapshotVersion.min().\n            e = oe.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new U(q, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(oe.min()) ? Fe.exists(!1) : Fe.updateTime(e) : Fe.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(oe.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new U(P, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Fe.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return Fe.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const us = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass cs {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, \n        this.deferred = s, this.yt = n.maxAttempts, this.gt = new hn(this.asyncQueue, \"transaction_retry\" /* TimerId.TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.yt -= 1, this._t();\n    }\n    _t() {\n        this.gt.H((async () => {\n            const t = new os(this.datastore), e = this.vt(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.bt(t);\n                }))));\n            })).catch((t => {\n                this.bt(t);\n            }));\n        }));\n    }\n    vt(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !ht(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    bt(t) {\n        this.yt > 0 && this.Et(t) ? (this.yt -= 1, this.asyncQueue.enqueueAndForget((() => (this._t(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    Et(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return b();\n\n                  case A:\n                  case R:\n                  case V:\n                  case x:\n                  case C:\n                  case L:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case F:\n                    return !1;\n\n                  case P:\n                  case $:\n                  case N:\n                  case D:\n                  case S:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case q:\n                  case O:\n                  case k:\n                  case M:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function as() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class hs {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new j, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new hs(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(A, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class ls {\n    constructor() {\n        // The last promise in the queue.\n        this.It = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Tt = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.At = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.Rt = [], \n        // visible for testing\n        this.Pt = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.Vt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.$t = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Nt = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.gt = new hn(this, \"async_queue_retry\" /* TimerId.AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Dt = () => {\n            const t = as();\n            t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.gt.X();\n        };\n        const t = as();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Dt);\n    }\n    get isShuttingDown() {\n        return this.At;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Ft(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.xt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.At) {\n            this.At = !0, this.$t = t || !1;\n            const e = as();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Dt);\n        }\n    }\n    enqueue(t) {\n        if (this.Ft(), this.At) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new j;\n        return this.xt((() => this.At && this.$t ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Tt.push(t), this.St())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async St() {\n        if (0 !== this.Tt.length) {\n            try {\n                await this.Tt[0](), this.Tt.shift(), this.gt.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                y(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Tt.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.gt.H((() => this.St()));\n        }\n    }\n    xt(t) {\n        const e = this.It.then((() => (this.Vt = !0, t().catch((t => {\n            this.Pt = t, this.Vt = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw g(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.Vt = !1, t))))));\n        return this.It = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.Ft(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Nt.indexOf(t) > -1 && (e = 0);\n        const r = hs.createAndSchedule(this, t, e, n, (t => this.qt(t)));\n        return this.Rt.push(r), r;\n    }\n    Ft() {\n        this.Pt && b();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Ot() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.It, await t;\n        } while (t !== this.It);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    kt(t) {\n        for (const e of this.Rt) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Ct(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Ot().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.Rt.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.Rt) if (e.skipDelay(), \"all\" /* TimerId.All */ !== t && e.timerId === t) break;\n            return this.Ot();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Lt(t) {\n        this.Nt.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    qt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.Rt.indexOf(t);\n        this.Rt.splice(e, 1);\n    }\n}\n\nclass fs {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Wn(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = ss(t, this._firestore), n = new Br(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return b();\n            const r = t[0];\n            if (r.isFoundDocument()) return new fr(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new fr(this._firestore, n, e._key, null, e.converter);\n            throw b();\n        }));\n    }\n    set(t, e, n) {\n        const r = ss(t, this._firestore), s = jr(r.converter, e, n), i = Gn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = ss(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(this._dataReader, \"Transaction.update\", s._key, e, n, r) : tr(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = ss(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function ds(t, e, n) {\n    const r = yn(t = ct(t, _n)), s = Object.assign(Object.assign({}, us), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n    }(s);\n    const i = new j;\n    return new cs(new ls, r, s, (n => e(new fs(t, n))), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    w = t;\n}(`${s}_lite`), n(new i(\"firestore/lite\", ((t, {instanceIdentifier: e, options: n}) => {\n    const r = t.getProvider(\"app\").getImmediate(), s = new _n(new W(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function(t, e) {\n        if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n        return new X(t.options.projectId, e);\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (r, e), r);\n    return n && s._setSettings(n), s;\n}), \"PUBLIC\").setMultipleInstances(!0)), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nr(\"firestore-lite\", \"3.8.3\", \"\"), r(\"firestore-lite\", \"3.8.3\", \"__BUILD_TARGET__\");\n\nexport { Tn as AggregateField, An as AggregateQuerySnapshot, qn as Bytes, $n as CollectionReference, Pn as DocumentReference, fr as DocumentSnapshot, On as FieldPath, Cn as FieldValue, _n as Firestore, U as FirestoreError, Ln as GeoPoint, Vn as Query, Er as QueryCompositeFilterConstraint, gr as QueryConstraint, dr as QueryDocumentSnapshot, xr as QueryEndAtConstraint, vr as QueryFieldFilterConstraint, Pr as QueryLimitConstraint, Ar as QueryOrderByConstraint, wr as QuerySnapshot, Nr as QueryStartAtConstraint, Vt as Timestamp, fs as Transaction, rs as WriteBatch, Yr as addDoc, Jr as aggregateQuerySnapshotEqual, Tr as and, es as arrayRemove, ts as arrayUnion, Nn as collection, Dn as collectionGroup, En as connectFirestoreEmulator, Kr as deleteDoc, Xr as deleteField, Fn as doc, kn as documentId, qr as endAt, Sr as endBefore, Hr as getCount, Qr as getDoc, zr as getDocs, bn as getFirestore, ns as increment, vn as initializeFirestore, Vr as limit, $r as limitToLast, Ir as or, Rr as orderBy, _r as query, Sn as queryEqual, xn as refEqual, ds as runTransaction, Zr as serverTimestamp, Wr as setDoc, p as setLogLevel, mr as snapshotEqual, Fr as startAfter, Dr as startAt, In as terminate, Gr as updateDoc, br as where, is as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n"]},"metadata":{},"sourceType":"module"}