{"ast":null,"code":"import { _registerComponent, registerVersion, _getProvider, getApp, _removeServiceInstance, SDK_VERSION } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { FirebaseError, getDefaultEmulatorHostnameAndPort, createMockUserToken, getModularInstance, deepEqual } from '@firebase/util';\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\n\nclass d {\n  constructor(t) {\n    this.uid = t;\n  }\n\n  isAuthenticated() {\n    return null != this.uid;\n  }\n  /**\n   * Returns a key representing this user, suitable for inclusion in a\n   * dictionary.\n   */\n\n\n  toKey() {\n    return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n  }\n\n  isEqual(t) {\n    return t.uid === this.uid;\n  }\n\n}\n/** A user with a null UID. */\n\n\nd.UNAUTHENTICATED = new d(null), // TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), d.MOCK_USER = new d(\"mock-user\");\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet w = \"9.17.1\";\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst m = new Logger(\"@firebase/firestore\");\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */\n\nfunction p(t) {\n  m.setLogLevel(t);\n}\n\nfunction y(t) {\n  if (m.logLevel <= LogLevel.DEBUG) {\n    for (var _len = arguments.length, e = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      e[_key - 1] = arguments[_key];\n    }\n\n    const n = e.map(v);\n    m.debug(`Firestore (${w}): ${t}`, ...n);\n  }\n}\n\nfunction g(t) {\n  if (m.logLevel <= LogLevel.ERROR) {\n    for (var _len2 = arguments.length, e = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      e[_key2 - 1] = arguments[_key2];\n    }\n\n    const n = e.map(v);\n    m.error(`Firestore (${w}): ${t}`, ...n);\n  }\n}\n/**\n * @internal\n */\n\n\nfunction _(t) {\n  if (m.logLevel <= LogLevel.WARN) {\n    for (var _len3 = arguments.length, e = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      e[_key3 - 1] = arguments[_key3];\n    }\n\n    const n = e.map(v);\n    m.warn(`Firestore (${w}): ${t}`, ...n);\n  }\n}\n/**\n * Converts an additional log parameter to a string representation.\n */\n\n\nfunction v(t) {\n  if (\"string\" == typeof t) return t;\n\n  try {\n    return e = t, JSON.stringify(e);\n  } catch (e) {\n    // Converting to JSON failed, just log the object directly\n    return t;\n  }\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  /** Formats an object as a JSON string, suitable for logging. */\n\n\n  var e;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */\n\n\nfunction b() {\n  let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Unexpected state\";\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  const e = `FIRESTORE (${w}) INTERNAL ASSERTION FAILED: ` + t; // NOTE: We don't use FirestoreError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n\n  throw g(e), new Error(e);\n}\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */\n\n\nfunction E(t, e) {\n  t || b();\n}\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */\n\n\nfunction I(t, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  return t;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst T = \"ok\",\n      A = \"cancelled\",\n      R = \"unknown\",\n      P = \"invalid-argument\",\n      V = \"deadline-exceeded\",\n      $ = \"not-found\",\n      N = \"already-exists\",\n      D = \"permission-denied\",\n      F = \"unauthenticated\",\n      x = \"resource-exhausted\",\n      S = \"failed-precondition\",\n      q = \"aborted\",\n      O = \"out-of-range\",\n      k = \"unimplemented\",\n      C = \"internal\",\n      L = \"unavailable\",\n      M = \"data-loss\";\n/** An error returned by a Firestore operation. */\n\nclass U extends FirebaseError {\n  /** @hideconstructor */\n  constructor(\n  /**\n   * The backend error code associated with this error.\n   */\n  t,\n  /**\n   * A custom error description.\n   */\n  e) {\n    super(t, e), this.code = t, this.message = e, // HACK: We write a toString property directly because Error is not a real\n    // class and so inheritance does not work correctly. We could alternatively\n    // do the same \"back-door inheritance\" trick that FirebaseError does.\n    this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nclass j {\n  constructor() {\n    this.promise = new Promise((t, e) => {\n      this.resolve = t, this.reject = e;\n    });\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nclass B {\n  constructor(t, e) {\n    this.user = e, this.type = \"OAuth\", this.headers = new Map(), this.headers.set(\"Authorization\", `Bearer ${t}`);\n  }\n\n}\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */\n\n\nclass Q {\n  getToken() {\n    return Promise.resolve(null);\n  }\n\n  invalidateToken() {}\n\n  start(t, e) {\n    // Fire with initial user.\n    t.enqueueRetryable(() => e(d.UNAUTHENTICATED));\n  }\n\n  shutdown() {}\n\n}\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */\n\n\nclass z {\n  constructor(t) {\n    this.token = t,\n    /**\n     * Stores the listener registered with setChangeListener()\n     * This isn't actually necessary since the UID never changes, but we use this\n     * to verify the listen contract is adhered to in tests.\n     */\n    this.changeListener = null;\n  }\n\n  getToken() {\n    return Promise.resolve(this.token);\n  }\n\n  invalidateToken() {}\n\n  start(t, e) {\n    this.changeListener = e, // Fire with initial user.\n    t.enqueueRetryable(() => e(this.token.user));\n  }\n\n  shutdown() {\n    this.changeListener = null;\n  }\n\n}\n/** Credential provider for the Lite SDK. */\n\n\nclass W {\n  constructor(t) {\n    this.auth = null, t.onInit(t => {\n      this.auth = t;\n    });\n  }\n\n  getToken() {\n    return this.auth ? this.auth.getToken().then(t => t ? (E(\"string\" == typeof t.accessToken), new B(t.accessToken, new d(this.auth.getUid()))) : null) : Promise.resolve(null);\n  }\n\n  invalidateToken() {}\n\n  start(t, e) {}\n\n  shutdown() {}\n\n}\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */\n\n\nclass G {\n  constructor(t, e, n, r) {\n    this.t = t, this.i = e, this.o = n, this.u = r, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, this.h = new Map();\n  }\n  /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */\n\n\n  l() {\n    return this.u ? this.u() : ( // Make sure this really is a Gapi client.\n    E(!(\"object\" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), this.t.auth.getAuthHeaderValueForFirstParty([]));\n  }\n\n  get headers() {\n    this.h.set(\"X-Goog-AuthUser\", this.i); // Use array notation to prevent minification\n\n    const t = this.l();\n    return t && this.h.set(\"Authorization\", t), this.o && this.h.set(\"X-Goog-Iam-Authorization-Token\", this.o), this.h;\n  }\n\n}\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */\n\n\nclass K {\n  constructor(t, e, n, r) {\n    this.t = t, this.i = e, this.o = n, this.u = r;\n  }\n\n  getToken() {\n    return Promise.resolve(new G(this.t, this.i, this.o, this.u));\n  }\n\n  start(t, e) {\n    // Fire with initial uid.\n    t.enqueueRetryable(() => e(d.FIRST_PARTY));\n  }\n\n  shutdown() {}\n\n  invalidateToken() {}\n\n}\n\nclass Y {\n  constructor(t) {\n    this.value = t, this.type = \"AppCheck\", this.headers = new Map(), t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n  }\n\n}\n/** AppCheck token provider for the Lite SDK. */\n\n\nclass H {\n  constructor(t) {\n    this.m = t, this.appCheck = null, t.onInit(t => {\n      this.appCheck = t;\n    });\n  }\n\n  getToken() {\n    return this.appCheck ? this.appCheck.getToken().then(t => t ? (E(\"string\" == typeof t.token), new Y(t.token)) : null) : Promise.resolve(null);\n  }\n\n  invalidateToken() {}\n\n  start(t, e) {}\n\n  shutdown() {}\n\n}\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nclass J {\n  /**\n   * Constructs a DatabaseInfo using the provided host, databaseId and\n   * persistenceKey.\n   *\n   * @param databaseId - The database to use.\n   * @param appId - The Firebase App Id.\n   * @param persistenceKey - A unique identifier for this Firestore's local\n   * storage (used in conjunction with the databaseId).\n   * @param host - The Firestore backend host to connect to.\n   * @param ssl - Whether to use SSL when connecting.\n   * @param forceLongPolling - Whether to use the forceLongPolling option\n   * when using WebChannel as the network transport.\n   * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n   * option when using WebChannel as the network transport.\n   * @param useFetchStreams Whether to use the Fetch API instead of\n   * XMLHTTPRequest\n   */\n  constructor(t, e, n, r, s, i, o, u) {\n    this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n  }\n\n}\n/** The default database name for a project. */\n\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\n\n\nclass X {\n  constructor(t, e) {\n    this.projectId = t, this.database = e || \"(default)\";\n  }\n\n  static empty() {\n    return new X(\"\", \"\");\n  }\n\n  get isDefaultDatabase() {\n    return \"(default)\" === this.database;\n  }\n\n  isEqual(t) {\n    return t instanceof X && t.projectId === this.projectId && t.database === this.database;\n  }\n\n}\n/**\n * Path represents an ordered sequence of string segments.\n */\n\n\nclass Z {\n  constructor(t, e, n) {\n    void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), this.segments = t, this.offset = e, this.len = n;\n  }\n\n  get length() {\n    return this.len;\n  }\n\n  isEqual(t) {\n    return 0 === Z.comparator(this, t);\n  }\n\n  child(t) {\n    const e = this.segments.slice(this.offset, this.limit());\n    return t instanceof Z ? t.forEach(t => {\n      e.push(t);\n    }) : e.push(t), this.construct(e);\n  }\n  /** The index of one past the last segment of the path. */\n\n\n  limit() {\n    return this.offset + this.length;\n  }\n\n  popFirst(t) {\n    return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n  }\n\n  popLast() {\n    return this.construct(this.segments, this.offset, this.length - 1);\n  }\n\n  firstSegment() {\n    return this.segments[this.offset];\n  }\n\n  lastSegment() {\n    return this.get(this.length - 1);\n  }\n\n  get(t) {\n    return this.segments[this.offset + t];\n  }\n\n  isEmpty() {\n    return 0 === this.length;\n  }\n\n  isPrefixOf(t) {\n    if (t.length < this.length) return !1;\n\n    for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n\n    return !0;\n  }\n\n  isImmediateParentOf(t) {\n    if (this.length + 1 !== t.length) return !1;\n\n    for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n\n    return !0;\n  }\n\n  forEach(t) {\n    for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n  }\n\n  toArray() {\n    return this.segments.slice(this.offset, this.limit());\n  }\n\n  static comparator(t, e) {\n    const n = Math.min(t.length, e.length);\n\n    for (let r = 0; r < n; r++) {\n      const n = t.get(r),\n            s = e.get(r);\n      if (n < s) return -1;\n      if (n > s) return 1;\n    }\n\n    return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n  }\n\n}\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */\n\n\nclass tt extends Z {\n  construct(t, e, n) {\n    return new tt(t, e, n);\n  }\n\n  canonicalString() {\n    // NOTE: The client is ignorant of any path segments containing escape\n    // sequences (e.g. __id123__) and just passes them through raw (they exist\n    // for legacy reasons and should not be used frequently).\n    return this.toArray().join(\"/\");\n  }\n\n  toString() {\n    return this.canonicalString();\n  }\n  /**\n   * Creates a resource path from the given slash-delimited string. If multiple\n   * arguments are provided, all components are combined. Leading and trailing\n   * slashes from all components are ignored.\n   */\n\n\n  static fromString() {\n    // NOTE: The client is ignorant of any path segments containing escape\n    // sequences (e.g. __id123__) and just passes them through raw (they exist\n    // for legacy reasons and should not be used frequently).\n    const e = [];\n\n    for (var _len4 = arguments.length, t = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      t[_key4] = arguments[_key4];\n    }\n\n    for (const n of t) {\n      if (n.indexOf(\"//\") >= 0) throw new U(P, `Invalid segment (${n}). Paths must not contain // in them.`); // Strip leading and traling slashed.\n\n      e.push(...n.split(\"/\").filter(t => t.length > 0));\n    }\n\n    return new tt(e);\n  }\n\n  static emptyPath() {\n    return new tt([]);\n  }\n\n}\n\nconst et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */\n\nclass nt extends Z {\n  construct(t, e, n) {\n    return new nt(t, e, n);\n  }\n  /**\n   * Returns true if the string could be used as a segment in a field path\n   * without escaping.\n   */\n\n\n  static isValidIdentifier(t) {\n    return et.test(t);\n  }\n\n  canonicalString() {\n    return this.toArray().map(t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t)).join(\".\");\n  }\n\n  toString() {\n    return this.canonicalString();\n  }\n  /**\n   * Returns true if this field references the key of a document.\n   */\n\n\n  isKeyField() {\n    return 1 === this.length && \"__name__\" === this.get(0);\n  }\n  /**\n   * The field designating the key of a document.\n   */\n\n\n  static keyField() {\n    return new nt([\"__name__\"]);\n  }\n  /**\n   * Parses a field string from the given server-formatted string.\n   *\n   * - Splitting the empty string is not allowed (for now at least).\n   * - Empty segments within the string (e.g. if there are two consecutive\n   *   separators) are not allowed.\n   *\n   * TODO(b/37244157): we should make this more strict. Right now, it allows\n   * non-identifier path components, even if they aren't escaped.\n   */\n\n\n  static fromServerFormat(t) {\n    const e = [];\n    let n = \"\",\n        r = 0;\n\n    const s = () => {\n      if (0 === n.length) throw new U(P, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n      e.push(n), n = \"\";\n    };\n\n    let i = !1;\n\n    for (; r < t.length;) {\n      const e = t[r];\n\n      if (\"\\\\\" === e) {\n        if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n        const e = t[r + 1];\n        if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(P, \"Path has invalid escape sequence: \" + t);\n        n += e, r += 2;\n      } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n    }\n\n    if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n    return new nt(e);\n  }\n\n  static emptyPath() {\n    return new nt([]);\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @internal\n */\n\n\nclass rt {\n  constructor(t) {\n    this.path = t;\n  }\n\n  static fromPath(t) {\n    return new rt(tt.fromString(t));\n  }\n\n  static fromName(t) {\n    return new rt(tt.fromString(t).popFirst(5));\n  }\n\n  static empty() {\n    return new rt(tt.emptyPath());\n  }\n\n  get collectionGroup() {\n    return this.path.popLast().lastSegment();\n  }\n  /** Returns true if the document is in the specified collectionId. */\n\n\n  hasCollectionId(t) {\n    return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n  }\n  /** Returns the collection group (i.e. the name of the parent collection) for this key. */\n\n\n  getCollectionGroup() {\n    return this.path.get(this.path.length - 2);\n  }\n  /** Returns the fully qualified path to the parent collection. */\n\n\n  getCollectionPath() {\n    return this.path.popLast();\n  }\n\n  isEqual(t) {\n    return null !== t && 0 === tt.comparator(this.path, t.path);\n  }\n\n  toString() {\n    return this.path.toString();\n  }\n\n  static comparator(t, e) {\n    return tt.comparator(t.path, e.path);\n  }\n\n  static isDocumentKey(t) {\n    return t.length % 2 == 0;\n  }\n  /**\n   * Creates and returns a new document key with the given segments.\n   *\n   * @param segments - The segments of the path to the document\n   * @returns A new instance of DocumentKey\n   */\n\n\n  static fromSegments(t) {\n    return new rt(new tt(t.slice()));\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction st(t, e, n) {\n  if (!n) throw new U(P, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\n\n\nfunction it(t) {\n  if (!rt.isDocumentKey(t)) throw new U(P, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */\n\n\nfunction ot(t) {\n  if (rt.isDocumentKey(t)) throw new U(P, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n\n/** Returns a string describing the type / value of the provided input. */\n\n\nfunction ut(t) {\n  if (void 0 === t) return \"undefined\";\n  if (null === t) return \"null\";\n  if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), JSON.stringify(t);\n  if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n\n  if (\"object\" == typeof t) {\n    if (t instanceof Array) return \"an array\";\n    {\n      const e =\n      /** try to get the constructor name for an object. */\n      function (t) {\n        if (t.constructor) return t.constructor.name;\n        return null;\n      }\n      /**\n      * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n      * underlying instance. Throws if  `obj` is not an instance of `T`.\n      *\n      * This cast is used in the Lite and Full SDK to verify instance types for\n      * arguments passed to the public API.\n      * @internal\n      */\n      (t);\n\n      return e ? `a custom ${e} object` : \"an object\";\n    }\n  }\n\n  return \"function\" == typeof t ? \"a function\" : b();\n}\n\nfunction ct(t, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  if (\"_delegate\" in t && ( // Unwrap Compat types\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  t = t._delegate), !(t instanceof e)) {\n    if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n    {\n      const n = ut(t);\n      throw new U(P, `Expected type '${e.name}', but it was: ${n}`);\n    }\n  }\n\n  return t;\n}\n\nfunction at(t, e) {\n  if (e <= 0) throw new U(P, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns whether a variable is either undefined or null.\n */\n\n\nfunction ht(t) {\n  return null == t;\n}\n/** Returns whether the value represents -0. */\n\n\nfunction lt(t) {\n  // Detect if the value is -0.0. Based on polyfill from\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n  return 0 === t && 1 / t == -1 / 0;\n}\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst ft = {\n  BatchGetDocuments: \"batchGet\",\n  Commit: \"commit\",\n  RunQuery: \"runQuery\",\n  RunAggregationQuery: \"runAggregationQuery\"\n};\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\n\nvar dt, wt;\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\n\nfunction mt(t) {\n  if (void 0 === t) return g(\"RPC_ERROR\", \"HTTP error has no status\"), R; // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n  // status codes but the mapping is not bijective. In each case of ambiguity\n  // this function chooses a primary error.\n  // [1]\n  // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n\n  switch (t) {\n    case 200:\n      // OK\n      return T;\n\n    case 400:\n      // Bad Request\n      return S;\n    // Other possibilities based on the forward mapping\n    // return Code.INVALID_ARGUMENT;\n    // return Code.OUT_OF_RANGE;\n\n    case 401:\n      // Unauthorized\n      return F;\n\n    case 403:\n      // Forbidden\n      return D;\n\n    case 404:\n      // Not Found\n      return $;\n\n    case 409:\n      // Conflict\n      return q;\n    // Other possibilities:\n    // return Code.ALREADY_EXISTS;\n\n    case 416:\n      // Range Not Satisfiable\n      return O;\n\n    case 429:\n      // Too Many Requests\n      return x;\n\n    case 499:\n      // Client Closed Request\n      return A;\n\n    case 500:\n      // Internal Server Error\n      return R;\n    // Other possibilities:\n    // return Code.INTERNAL;\n    // return Code.DATA_LOSS;\n\n    case 501:\n      // Unimplemented\n      return k;\n\n    case 503:\n      // Service Unavailable\n      return L;\n\n    case 504:\n      // Gateway Timeout\n      return V;\n\n    default:\n      return t >= 200 && t < 300 ? T : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : R;\n  }\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */\n\n\n(wt = dt || (dt = {}))[wt.OK = 0] = \"OK\", wt[wt.CANCELLED = 1] = \"CANCELLED\", wt[wt.UNKNOWN = 2] = \"UNKNOWN\", wt[wt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", wt[wt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", wt[wt.NOT_FOUND = 5] = \"NOT_FOUND\", wt[wt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", wt[wt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", wt[wt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", wt[wt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", wt[wt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", wt[wt.ABORTED = 10] = \"ABORTED\", wt[wt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", wt[wt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", wt[wt.INTERNAL = 13] = \"INTERNAL\", wt[wt.UNAVAILABLE = 14] = \"UNAVAILABLE\", wt[wt.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass pt extends\n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n  constructor(t) {\n    this.databaseInfo = t, this.databaseId = t.databaseId;\n    const e = t.ssl ? \"https\" : \"http\";\n    this.p = e + \"://\" + t.host, this.g = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n  }\n\n  get v() {\n    // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n    // where to run the query, and expect the `request` to NOT specify the \"path\".\n    return !1;\n  }\n\n  I(t, e, n, r, s) {\n    const i = this.T(t, e);\n    y(\"RestConnection\", \"Sending: \", i, n);\n    const o = {};\n    return this.A(o, r, s), this.R(t, i, o, n).then(t => (y(\"RestConnection\", \"Received: \", t), t), e => {\n      throw _(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), e;\n    });\n  }\n\n  P(t, e, n, r, s, i) {\n    // The REST API automatically aggregates all of the streamed results, so we\n    // can just use the normal invoke() method.\n    return this.I(t, e, n, r, s);\n  }\n  /**\n   * Modifies the headers for a request, adding any authorization token if\n   * present and any additional headers for the request.\n   */\n\n\n  A(t, e, n) {\n    t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w, // Content-Type: text/plain will avoid preflight requests which might\n    // mess with CORS and redirects by proxies. If we add custom headers\n    // we will need to change this code to potentially use the $httpOverwrite\n    // parameter supported by ESF to avoid triggering preflight requests.\n    t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), e && e.headers.forEach((e, n) => t[n] = e), n && n.headers.forEach((e, n) => t[n] = e);\n  }\n\n  T(t, e) {\n    const n = ft[t];\n    return `${this.p}/v1/${e}:${n}`;\n  }\n\n} {\n  /**\n   * @param databaseInfo - The connection info.\n   * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n   */\n  constructor(t, e) {\n    super(t), this.V = e;\n  }\n\n  $(t, e) {\n    throw new Error(\"Not supported by FetchConnection\");\n  }\n\n  async R(t, e, n, r) {\n    var s;\n    const i = JSON.stringify(r);\n    let o;\n\n    try {\n      o = await this.V(e, {\n        method: \"POST\",\n        headers: n,\n        body: i\n      });\n    } catch (t) {\n      const e = t;\n      throw new U(mt(e.status), \"Request failed with error: \" + e.statusText);\n    }\n\n    if (!o.ok) {\n      let t = await o.json();\n      Array.isArray(t) && (t = t[0]);\n      const e = null === (s = null == t ? void 0 : t.error) || void 0 === s ? void 0 : s.message;\n      throw new U(mt(o.status), `Request failed with error: ${null != e ? e : o.statusText}`);\n    }\n\n    return o.json();\n  }\n\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Initializes the HTTP connection for the REST API. */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\n\n\nfunction yt(t) {\n  // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n  const e = // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  \"undefined\" != typeof self && (self.crypto || self.msCrypto),\n        n = new Uint8Array(t);\n  if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n);else // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n  return n;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nclass gt {\n  static N() {\n    // Alphanumeric characters\n    const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",\n          e = Math.floor(256 / t.length) * t.length; // The largest byte value that is a multiple of `char.length`.\n\n    let n = \"\";\n\n    for (; n.length < 20;) {\n      const r = yt(40);\n\n      for (let s = 0; s < r.length; ++s) // Only accept values that are [0, maxMultiple), this ensures they can\n      // be evenly mapped to indices of `chars` via a modulo operation.\n      n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n    }\n\n    return n;\n  }\n\n}\n\nfunction _t(t, e) {\n  return t < e ? -1 : t > e ? 1 : 0;\n}\n/** Helper to compare arrays using isEqual(). */\n\n\nfunction vt(t, e, n) {\n  return t.length === e.length && t.every((t, r) => n(t, e[r]));\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction bt(t) {\n  let e = 0;\n\n  for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n\n  return e;\n}\n\nfunction Et(t, e) {\n  for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\n\n\nclass It {\n  constructor(t) {\n    this.binaryString = t;\n  }\n\n  static fromBase64String(t) {\n    const e = atob(t);\n    return new It(e);\n  }\n\n  static fromUint8Array(t) {\n    // TODO(indexing); Remove the copy of the byte string here as this method\n    // is frequently called during indexing.\n    const e =\n    /**\n    * Helper function to convert an Uint8array to a binary string.\n    */\n    function (t) {\n      let e = \"\";\n\n      for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n\n      return e;\n    }\n    /**\n    * Helper function to convert a binary string to an Uint8Array.\n    */\n    (t);\n\n    return new It(e);\n  }\n\n  [Symbol.iterator]() {\n    let t = 0;\n    return {\n      next: () => t < this.binaryString.length ? {\n        value: this.binaryString.charCodeAt(t++),\n        done: !1\n      } : {\n        value: void 0,\n        done: !0\n      }\n    };\n  }\n\n  toBase64() {\n    return t = this.binaryString, btoa(t);\n    /** Converts a binary string to a Base64 encoded string. */\n\n    var t;\n  }\n\n  toUint8Array() {\n    return function (t) {\n      const e = new Uint8Array(t.length);\n\n      for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n\n      return e;\n    }\n    /**\n    * @license\n    * Copyright 2020 Google LLC\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *   http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n    (this.binaryString);\n  }\n\n  approximateByteSize() {\n    return 2 * this.binaryString.length;\n  }\n\n  compareTo(t) {\n    return _t(this.binaryString, t.binaryString);\n  }\n\n  isEqual(t) {\n    return this.binaryString === t.binaryString;\n  }\n\n}\n\nIt.EMPTY_BYTE_STRING = new It(\"\");\nconst Tt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */\n\nfunction At(t) {\n  // The json interface (for the browser) will return an iso timestamp string,\n  // while the proto js library (for node) will return a\n  // google.protobuf.Timestamp instance.\n  if (E(!!t), \"string\" == typeof t) {\n    // The date string can have higher precision (nanos) than the Date class\n    // (millis), so we do some custom parsing here.\n    // Parse the nanos right out of the string.\n    let e = 0;\n    const n = Tt.exec(t);\n\n    if (E(!!n), n[1]) {\n      // Pad the fraction out to 9 digits (nanos).\n      let t = n[1];\n      t = (t + \"000000000\").substr(0, 9), e = Number(t);\n    } // Parse the date to get the seconds.\n\n\n    const r = new Date(t);\n    return {\n      seconds: Math.floor(r.getTime() / 1e3),\n      nanos: e\n    };\n  }\n\n  return {\n    seconds: Rt(t.seconds),\n    nanos: Rt(t.nanos)\n  };\n}\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */\n\n\nfunction Rt(t) {\n  // TODO(bjornick): Handle int64 greater than 53 bits.\n  return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n/** Converts the possible Proto types for Blobs into a ByteString. */\n\n\nfunction Pt(t) {\n  return \"string\" == typeof t ? It.fromBase64String(t) : It.fromUint8Array(t);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\n\n\nclass Vt {\n  /**\n   * Creates a new timestamp.\n   *\n   * @param seconds - The number of seconds of UTC time since Unix epoch\n   *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n   *     9999-12-31T23:59:59Z inclusive.\n   * @param nanoseconds - The non-negative fractions of a second at nanosecond\n   *     resolution. Negative second values with fractions must still have\n   *     non-negative nanoseconds values that count forward in time. Must be\n   *     from 0 to 999,999,999 inclusive.\n   */\n  constructor(\n  /**\n   * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n   */\n  t,\n  /**\n   * The fractions of a second at nanosecond resolution.*\n   */\n  e) {\n    if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n    if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n    if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t); // This will break in the year 10,000.\n\n    if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n  }\n  /**\n   * Creates a new timestamp with the current date, with millisecond precision.\n   *\n   * @returns a new timestamp representing the current date.\n   */\n\n\n  static now() {\n    return Vt.fromMillis(Date.now());\n  }\n  /**\n   * Creates a new timestamp from the given date.\n   *\n   * @param date - The date to initialize the `Timestamp` from.\n   * @returns A new `Timestamp` representing the same point in time as the given\n   *     date.\n   */\n\n\n  static fromDate(t) {\n    return Vt.fromMillis(t.getTime());\n  }\n  /**\n   * Creates a new timestamp from the given number of milliseconds.\n   *\n   * @param milliseconds - Number of milliseconds since Unix epoch\n   *     1970-01-01T00:00:00Z.\n   * @returns A new `Timestamp` representing the same point in time as the given\n   *     number of milliseconds.\n   */\n\n\n  static fromMillis(t) {\n    const e = Math.floor(t / 1e3),\n          n = Math.floor(1e6 * (t - 1e3 * e));\n    return new Vt(e, n);\n  }\n  /**\n   * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n   * causes a loss of precision since `Date` objects only support millisecond\n   * precision.\n   *\n   * @returns JavaScript `Date` object representing the same point in time as\n   *     this `Timestamp`, with millisecond precision.\n   */\n\n\n  toDate() {\n    return new Date(this.toMillis());\n  }\n  /**\n   * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n   * epoch). This operation causes a loss of precision.\n   *\n   * @returns The point in time corresponding to this timestamp, represented as\n   *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n   */\n\n\n  toMillis() {\n    return 1e3 * this.seconds + this.nanoseconds / 1e6;\n  }\n\n  _compareTo(t) {\n    return this.seconds === t.seconds ? _t(this.nanoseconds, t.nanoseconds) : _t(this.seconds, t.seconds);\n  }\n  /**\n   * Returns true if this `Timestamp` is equal to the provided one.\n   *\n   * @param other - The `Timestamp` to compare against.\n   * @returns true if this `Timestamp` is equal to the provided one.\n   */\n\n\n  isEqual(t) {\n    return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n  }\n  /** Returns a textual representation of this `Timestamp`. */\n\n\n  toString() {\n    return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n  }\n  /** Returns a JSON-serializable representation of this `Timestamp`. */\n\n\n  toJSON() {\n    return {\n      seconds: this.seconds,\n      nanoseconds: this.nanoseconds\n    };\n  }\n  /**\n   * Converts this object to a primitive string, which allows `Timestamp` objects\n   * to be compared using the `>`, `<=`, `>=` and `>` operators.\n   */\n\n\n  valueOf() {\n    // This method returns a string of the form <seconds>.<nanoseconds> where\n    // <seconds> is translated to have a non-negative value and both <seconds>\n    // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n    // Strings with this format then have a lexiographical ordering that matches\n    // the expected ordering. The <seconds> translation is done to avoid having\n    // a leading negative sign (i.e. a leading '-' character) in its string\n    // representation, which would affect its lexiographical ordering.\n    const t = this.seconds - -62135596800; // Note: Up to 12 decimal digits are required to represent all valid\n    // 'seconds' values.\n\n    return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n  }\n\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */\n\n\nfunction $t(t) {\n  var e, n;\n  return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */\n\n\nfunction Nt(t) {\n  const e = t.mapValue.fields.__previous_value__;\n  return $t(e) ? Nt(e) : e;\n}\n/**\n * Returns the local time at which this timestamp was first set.\n */\n\n\nfunction Dt(t) {\n  const e = At(t.mapValue.fields.__local_write_time__.timestampValue);\n  return new Vt(e.seconds, e.nanos);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst Ft = {\n  fields: {\n    __type__: {\n      stringValue: \"__max__\"\n    }\n  }\n};\n/** Extracts the backend's type order for the provided value. */\n\nfunction xt(t) {\n  return \"nullValue\" in t ? 0\n  /* TypeOrder.NullValue */\n  : \"booleanValue\" in t ? 1\n  /* TypeOrder.BooleanValue */\n  : \"integerValue\" in t || \"doubleValue\" in t ? 2\n  /* TypeOrder.NumberValue */\n  : \"timestampValue\" in t ? 3\n  /* TypeOrder.TimestampValue */\n  : \"stringValue\" in t ? 5\n  /* TypeOrder.StringValue */\n  : \"bytesValue\" in t ? 6\n  /* TypeOrder.BlobValue */\n  : \"referenceValue\" in t ? 7\n  /* TypeOrder.RefValue */\n  : \"geoPointValue\" in t ? 8\n  /* TypeOrder.GeoPointValue */\n  : \"arrayValue\" in t ? 9\n  /* TypeOrder.ArrayValue */\n  : \"mapValue\" in t ? $t(t) ? 4\n  /* TypeOrder.ServerTimestampValue */\n  :\n  /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n  function (t) {\n    return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n  }\n  /**\n  * @license\n  * Copyright 2022 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  /**\n  * Represents a bound of a query.\n  *\n  * The bound is specified with the given components representing a position and\n  * whether it's just before or just after the position (relative to whatever the\n  * query order is).\n  *\n  * The position represents a logical index position for a query. It's a prefix\n  * of values for the (potentially implicit) order by clauses of a query.\n  *\n  * Bound provides a function to determine whether a document comes before or\n  * after a bound. This is influenced by whether the position is just before or\n  * just after the provided values.\n  */\n  (t) ? 9007199254740991\n  /* TypeOrder.MaxValue */\n  : 10\n  /* TypeOrder.ObjectValue */\n  : b();\n}\n/** Tests `left` and `right` for equality based on the backend semantics. */\n\n\nfunction St(t, e) {\n  if (t === e) return !0;\n  const n = xt(t);\n  if (n !== xt(e)) return !1;\n\n  switch (n) {\n    case 0\n    /* TypeOrder.NullValue */\n    :\n    case 9007199254740991\n    /* TypeOrder.MaxValue */\n    :\n      return !0;\n\n    case 1\n    /* TypeOrder.BooleanValue */\n    :\n      return t.booleanValue === e.booleanValue;\n\n    case 4\n    /* TypeOrder.ServerTimestampValue */\n    :\n      return Dt(t).isEqual(Dt(e));\n\n    case 3\n    /* TypeOrder.TimestampValue */\n    :\n      return function (t, e) {\n        if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) // Use string equality for ISO 8601 timestamps\n          return t.timestampValue === e.timestampValue;\n        const n = At(t.timestampValue),\n              r = At(e.timestampValue);\n        return n.seconds === r.seconds && n.nanos === r.nanos;\n      }(t, e);\n\n    case 5\n    /* TypeOrder.StringValue */\n    :\n      return t.stringValue === e.stringValue;\n\n    case 6\n    /* TypeOrder.BlobValue */\n    :\n      return function (t, e) {\n        return Pt(t.bytesValue).isEqual(Pt(e.bytesValue));\n      }(t, e);\n\n    case 7\n    /* TypeOrder.RefValue */\n    :\n      return t.referenceValue === e.referenceValue;\n\n    case 8\n    /* TypeOrder.GeoPointValue */\n    :\n      return function (t, e) {\n        return Rt(t.geoPointValue.latitude) === Rt(e.geoPointValue.latitude) && Rt(t.geoPointValue.longitude) === Rt(e.geoPointValue.longitude);\n      }(t, e);\n\n    case 2\n    /* TypeOrder.NumberValue */\n    :\n      return function (t, e) {\n        if (\"integerValue\" in t && \"integerValue\" in e) return Rt(t.integerValue) === Rt(e.integerValue);\n\n        if (\"doubleValue\" in t && \"doubleValue\" in e) {\n          const n = Rt(t.doubleValue),\n                r = Rt(e.doubleValue);\n          return n === r ? lt(n) === lt(r) : isNaN(n) && isNaN(r);\n        }\n\n        return !1;\n      }(t, e);\n\n    case 9\n    /* TypeOrder.ArrayValue */\n    :\n      return vt(t.arrayValue.values || [], e.arrayValue.values || [], St);\n\n    case 10\n    /* TypeOrder.ObjectValue */\n    :\n      return function (t, e) {\n        const n = t.mapValue.fields || {},\n              r = e.mapValue.fields || {};\n        if (bt(n) !== bt(r)) return !1;\n\n        for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !St(n[t], r[t]))) return !1;\n\n        return !0;\n      }\n      /** Returns true if the ArrayValue contains the specified element. */\n      (t, e);\n\n    default:\n      return b();\n  }\n}\n\nfunction qt(t, e) {\n  return void 0 !== (t.values || []).find(t => St(t, e));\n}\n\nfunction Ot(t, e) {\n  if (t === e) return 0;\n  const n = xt(t),\n        r = xt(e);\n  if (n !== r) return _t(n, r);\n\n  switch (n) {\n    case 0\n    /* TypeOrder.NullValue */\n    :\n    case 9007199254740991\n    /* TypeOrder.MaxValue */\n    :\n      return 0;\n\n    case 1\n    /* TypeOrder.BooleanValue */\n    :\n      return _t(t.booleanValue, e.booleanValue);\n\n    case 2\n    /* TypeOrder.NumberValue */\n    :\n      return function (t, e) {\n        const n = Rt(t.integerValue || t.doubleValue),\n              r = Rt(e.integerValue || e.doubleValue);\n        return n < r ? -1 : n > r ? 1 : n === r ? 0 : // one or both are NaN.\n        isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n      }(t, e);\n\n    case 3\n    /* TypeOrder.TimestampValue */\n    :\n      return kt(t.timestampValue, e.timestampValue);\n\n    case 4\n    /* TypeOrder.ServerTimestampValue */\n    :\n      return kt(Dt(t), Dt(e));\n\n    case 5\n    /* TypeOrder.StringValue */\n    :\n      return _t(t.stringValue, e.stringValue);\n\n    case 6\n    /* TypeOrder.BlobValue */\n    :\n      return function (t, e) {\n        const n = Pt(t),\n              r = Pt(e);\n        return n.compareTo(r);\n      }(t.bytesValue, e.bytesValue);\n\n    case 7\n    /* TypeOrder.RefValue */\n    :\n      return function (t, e) {\n        const n = t.split(\"/\"),\n              r = e.split(\"/\");\n\n        for (let t = 0; t < n.length && t < r.length; t++) {\n          const e = _t(n[t], r[t]);\n\n          if (0 !== e) return e;\n        }\n\n        return _t(n.length, r.length);\n      }(t.referenceValue, e.referenceValue);\n\n    case 8\n    /* TypeOrder.GeoPointValue */\n    :\n      return function (t, e) {\n        const n = _t(Rt(t.latitude), Rt(e.latitude));\n\n        if (0 !== n) return n;\n        return _t(Rt(t.longitude), Rt(e.longitude));\n      }(t.geoPointValue, e.geoPointValue);\n\n    case 9\n    /* TypeOrder.ArrayValue */\n    :\n      return function (t, e) {\n        const n = t.values || [],\n              r = e.values || [];\n\n        for (let t = 0; t < n.length && t < r.length; ++t) {\n          const e = Ot(n[t], r[t]);\n          if (e) return e;\n        }\n\n        return _t(n.length, r.length);\n      }(t.arrayValue, e.arrayValue);\n\n    case 10\n    /* TypeOrder.ObjectValue */\n    :\n      return function (t, e) {\n        if (t === Ft && e === Ft) return 0;\n        if (t === Ft) return 1;\n        if (e === Ft) return -1;\n        const n = t.fields || {},\n              r = Object.keys(n),\n              s = e.fields || {},\n              i = Object.keys(s); // Even though MapValues are likely sorted correctly based on their insertion\n        // order (e.g. when received from the backend), local modifications can bring\n        // elements out of order. We need to re-sort the elements to ensure that\n        // canonical IDs are independent of insertion order.\n\n        r.sort(), i.sort();\n\n        for (let t = 0; t < r.length && t < i.length; ++t) {\n          const e = _t(r[t], i[t]);\n\n          if (0 !== e) return e;\n          const o = Ot(n[r[t]], s[i[t]]);\n          if (0 !== o) return o;\n        }\n\n        return _t(r.length, i.length);\n      }\n      /** Returns a reference value for the provided database and key. */\n      (t.mapValue, e.mapValue);\n\n    default:\n      throw b();\n  }\n}\n\nfunction kt(t, e) {\n  if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return _t(t, e);\n\n  const n = At(t),\n        r = At(e),\n        s = _t(n.seconds, r.seconds);\n\n  return 0 !== s ? s : _t(n.nanos, r.nanos);\n}\n\nfunction Ct(t, e) {\n  return {\n    referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n  };\n}\n/** Returns true if `value` is an ArrayValue. */\n\n\nfunction Lt(t) {\n  return !!t && \"arrayValue\" in t;\n}\n/** Returns true if `value` is a NullValue. */\n\n\nfunction Mt(t) {\n  return !!t && \"nullValue\" in t;\n}\n/** Returns true if `value` is NaN. */\n\n\nfunction Ut(t) {\n  return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n/** Returns true if `value` is a MapValue. */\n\n\nfunction jt(t) {\n  return !!t && \"mapValue\" in t;\n}\n/** Creates a deep copy of `source`. */\n\n\nfunction Bt(t) {\n  if (t.geoPointValue) return {\n    geoPointValue: Object.assign({}, t.geoPointValue)\n  };\n  if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n    timestampValue: Object.assign({}, t.timestampValue)\n  };\n\n  if (t.mapValue) {\n    const e = {\n      mapValue: {\n        fields: {}\n      }\n    };\n    return Et(t.mapValue.fields, (t, n) => e.mapValue.fields[t] = Bt(n)), e;\n  }\n\n  if (t.arrayValue) {\n    const e = {\n      arrayValue: {\n        values: []\n      }\n    };\n\n    for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Bt(t.arrayValue.values[n]);\n\n    return e;\n  }\n\n  return Object.assign({}, t);\n}\n\nclass Qt {\n  constructor(t, e) {\n    this.position = t, this.inclusive = e;\n  }\n\n}\n\nfunction zt(t, e) {\n  if (null === t) return null === e;\n  if (null === e) return !1;\n  if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n\n  for (let n = 0; n < t.position.length; n++) {\n    if (!St(t.position[n], e.position[n])) return !1;\n  }\n\n  return !0;\n}\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nclass Wt {}\n\nclass Gt extends Wt {\n  constructor(t, e, n) {\n    super(), this.field = t, this.op = e, this.value = n;\n  }\n  /**\n   * Creates a filter based on the provided arguments.\n   */\n\n\n  static create(t, e, n) {\n    return t.isKeyField() ? \"in\"\n    /* Operator.IN */\n    === e || \"not-in\"\n    /* Operator.NOT_IN */\n    === e ? this.createKeyFieldInFilter(t, e, n) : new Ht(t, e, n) : \"array-contains\"\n    /* Operator.ARRAY_CONTAINS */\n    === e ? new te(t, n) : \"in\"\n    /* Operator.IN */\n    === e ? new ee(t, n) : \"not-in\"\n    /* Operator.NOT_IN */\n    === e ? new ne(t, n) : \"array-contains-any\"\n    /* Operator.ARRAY_CONTAINS_ANY */\n    === e ? new re(t, n) : new Gt(t, e, n);\n  }\n\n  static createKeyFieldInFilter(t, e, n) {\n    return \"in\"\n    /* Operator.IN */\n    === e ? new Jt(t, n) : new Xt(t, n);\n  }\n\n  matches(t) {\n    const e = t.data.field(this.field); // Types do not have to match in NOT_EQUAL filters.\n\n    return \"!=\"\n    /* Operator.NOT_EQUAL */\n    === this.op ? null !== e && this.matchesComparison(Ot(e, this.value)) : null !== e && xt(this.value) === xt(e) && this.matchesComparison(Ot(e, this.value)); // Only compare types with matching backend order (such as double and int).\n  }\n\n  matchesComparison(t) {\n    switch (this.op) {\n      case \"<\"\n      /* Operator.LESS_THAN */\n      :\n        return t < 0;\n\n      case \"<=\"\n      /* Operator.LESS_THAN_OR_EQUAL */\n      :\n        return t <= 0;\n\n      case \"==\"\n      /* Operator.EQUAL */\n      :\n        return 0 === t;\n\n      case \"!=\"\n      /* Operator.NOT_EQUAL */\n      :\n        return 0 !== t;\n\n      case \">\"\n      /* Operator.GREATER_THAN */\n      :\n        return t > 0;\n\n      case \">=\"\n      /* Operator.GREATER_THAN_OR_EQUAL */\n      :\n        return t >= 0;\n\n      default:\n        return b();\n    }\n  }\n\n  isInequality() {\n    return [\"<\"\n    /* Operator.LESS_THAN */\n    , \"<=\"\n    /* Operator.LESS_THAN_OR_EQUAL */\n    , \">\"\n    /* Operator.GREATER_THAN */\n    , \">=\"\n    /* Operator.GREATER_THAN_OR_EQUAL */\n    , \"!=\"\n    /* Operator.NOT_EQUAL */\n    , \"not-in\"\n    /* Operator.NOT_IN */\n    ].indexOf(this.op) >= 0;\n  }\n\n  getFlattenedFilters() {\n    return [this];\n  }\n\n  getFilters() {\n    return [this];\n  }\n\n  getFirstInequalityField() {\n    return this.isInequality() ? this.field : null;\n  }\n\n}\n\nclass Kt extends Wt {\n  constructor(t, e) {\n    super(), this.filters = t, this.op = e, this.D = null;\n  }\n  /**\n   * Creates a filter based on the provided arguments.\n   */\n\n\n  static create(t, e) {\n    return new Kt(t, e);\n  }\n\n  matches(t) {\n    return \"and\"\n    /* CompositeOperator.AND */\n    === this.op ? void 0 === this.filters.find(e => !e.matches(t)) : void 0 !== this.filters.find(e => e.matches(t));\n  }\n\n  getFlattenedFilters() {\n    return null !== this.D || (this.D = this.filters.reduce((t, e) => t.concat(e.getFlattenedFilters()), [])), this.D;\n  } // Returns a mutable copy of `this.filters`\n\n\n  getFilters() {\n    return Object.assign([], this.filters);\n  }\n\n  getFirstInequalityField() {\n    const t = this.F(t => t.isInequality());\n    return null !== t ? t.field : null;\n  } // Performs a depth-first search to find and return the first FieldFilter in the composite filter\n  // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the\n  // predicate.\n\n\n  F(t) {\n    for (const e of this.getFlattenedFilters()) if (t(e)) return e;\n\n    return null;\n  }\n\n}\n\nfunction Yt(t, e) {\n  return t instanceof Gt ? function (t, e) {\n    return e instanceof Gt && t.op === e.op && t.field.isEqual(e.field) && St(t.value, e.value);\n  }(t, e) : t instanceof Kt ? function (t, e) {\n    if (e instanceof Kt && t.op === e.op && t.filters.length === e.filters.length) {\n      return t.filters.reduce((t, n, r) => t && Yt(n, e.filters[r]), !0);\n    }\n\n    return !1;\n  }\n  /** Filter that matches on key fields (i.e. '__name__'). */\n  (t, e) : void b();\n}\n\nclass Ht extends Gt {\n  constructor(t, e, n) {\n    super(t, e, n), this.key = rt.fromName(n.referenceValue);\n  }\n\n  matches(t) {\n    const e = rt.comparator(t.key, this.key);\n    return this.matchesComparison(e);\n  }\n\n}\n/** Filter that matches on key fields within an array. */\n\n\nclass Jt extends Gt {\n  constructor(t, e) {\n    super(t, \"in\"\n    /* Operator.IN */\n    , e), this.keys = Zt(\"in\"\n    /* Operator.IN */\n    , e);\n  }\n\n  matches(t) {\n    return this.keys.some(e => e.isEqual(t.key));\n  }\n\n}\n/** Filter that matches on key fields not present within an array. */\n\n\nclass Xt extends Gt {\n  constructor(t, e) {\n    super(t, \"not-in\"\n    /* Operator.NOT_IN */\n    , e), this.keys = Zt(\"not-in\"\n    /* Operator.NOT_IN */\n    , e);\n  }\n\n  matches(t) {\n    return !this.keys.some(e => e.isEqual(t.key));\n  }\n\n}\n\nfunction Zt(t, e) {\n  var n;\n  return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map(t => rt.fromName(t.referenceValue));\n}\n/** A Filter that implements the array-contains operator. */\n\n\nclass te extends Gt {\n  constructor(t, e) {\n    super(t, \"array-contains\"\n    /* Operator.ARRAY_CONTAINS */\n    , e);\n  }\n\n  matches(t) {\n    const e = t.data.field(this.field);\n    return Lt(e) && qt(e.arrayValue, this.value);\n  }\n\n}\n/** A Filter that implements the IN operator. */\n\n\nclass ee extends Gt {\n  constructor(t, e) {\n    super(t, \"in\"\n    /* Operator.IN */\n    , e);\n  }\n\n  matches(t) {\n    const e = t.data.field(this.field);\n    return null !== e && qt(this.value.arrayValue, e);\n  }\n\n}\n/** A Filter that implements the not-in operator. */\n\n\nclass ne extends Gt {\n  constructor(t, e) {\n    super(t, \"not-in\"\n    /* Operator.NOT_IN */\n    , e);\n  }\n\n  matches(t) {\n    if (qt(this.value.arrayValue, {\n      nullValue: \"NULL_VALUE\"\n    })) return !1;\n    const e = t.data.field(this.field);\n    return null !== e && !qt(this.value.arrayValue, e);\n  }\n\n}\n/** A Filter that implements the array-contains-any operator. */\n\n\nclass re extends Gt {\n  constructor(t, e) {\n    super(t, \"array-contains-any\"\n    /* Operator.ARRAY_CONTAINS_ANY */\n    , e);\n  }\n\n  matches(t) {\n    const e = t.data.field(this.field);\n    return !(!Lt(e) || !e.arrayValue.values) && e.arrayValue.values.some(t => qt(this.value.arrayValue, t));\n  }\n\n}\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */\n\n\nclass se {\n  constructor(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n    this.field = t, this.dir = e;\n  }\n\n}\n\nfunction ie(t, e) {\n  return t.dir === e.dir && t.field.isEqual(e.field);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */\n\n\nclass oe {\n  constructor(t) {\n    this.timestamp = t;\n  }\n\n  static fromTimestamp(t) {\n    return new oe(t);\n  }\n\n  static min() {\n    return new oe(new Vt(0, 0));\n  }\n\n  static max() {\n    return new oe(new Vt(253402300799, 999999999));\n  }\n\n  compareTo(t) {\n    return this.timestamp._compareTo(t.timestamp);\n  }\n\n  isEqual(t) {\n    return this.timestamp.isEqual(t.timestamp);\n  }\n  /** Returns a number representation of the version for use in spec tests. */\n\n\n  toMicroseconds() {\n    // Convert to microseconds.\n    return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n  }\n\n  toString() {\n    return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n  }\n\n  toTimestamp() {\n    return this.timestamp;\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\n\n\nclass ue {\n  constructor(t, e) {\n    this.comparator = t, this.root = e || ae.EMPTY;\n  } // Returns a copy of the map, with the specified key/value added or replaced.\n\n\n  insert(t, e) {\n    return new ue(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, ae.BLACK, null, null));\n  } // Returns a copy of the map, with the specified key removed.\n\n\n  remove(t) {\n    return new ue(this.comparator, this.root.remove(t, this.comparator).copy(null, null, ae.BLACK, null, null));\n  } // Returns the value of the node with the given key, or null.\n\n\n  get(t) {\n    let e = this.root;\n\n    for (; !e.isEmpty();) {\n      const n = this.comparator(t, e.key);\n      if (0 === n) return e.value;\n      n < 0 ? e = e.left : n > 0 && (e = e.right);\n    }\n\n    return null;\n  } // Returns the index of the element in this sorted map, or -1 if it doesn't\n  // exist.\n\n\n  indexOf(t) {\n    // Number of nodes that were pruned when descending right\n    let e = 0,\n        n = this.root;\n\n    for (; !n.isEmpty();) {\n      const r = this.comparator(t, n.key);\n      if (0 === r) return e + n.left.size;\n      r < 0 ? n = n.left : ( // Count all nodes left of the node plus the node itself\n      e += n.left.size + 1, n = n.right);\n    } // Node not found\n\n\n    return -1;\n  }\n\n  isEmpty() {\n    return this.root.isEmpty();\n  } // Returns the total number of nodes in the map.\n\n\n  get size() {\n    return this.root.size;\n  } // Returns the minimum key in the map.\n\n\n  minKey() {\n    return this.root.minKey();\n  } // Returns the maximum key in the map.\n\n\n  maxKey() {\n    return this.root.maxKey();\n  } // Traverses the map in key order and calls the specified action function\n  // for each key/value pair. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n\n\n  inorderTraversal(t) {\n    return this.root.inorderTraversal(t);\n  }\n\n  forEach(t) {\n    this.inorderTraversal((e, n) => (t(e, n), !1));\n  }\n\n  toString() {\n    const t = [];\n    return this.inorderTraversal((e, n) => (t.push(`${e}:${n}`), !1)), `{${t.join(\", \")}}`;\n  } // Traverses the map in reverse key order and calls the specified action\n  // function for each key/value pair. If action returns true, traversal is\n  // aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n\n\n  reverseTraversal(t) {\n    return this.root.reverseTraversal(t);\n  } // Returns an iterator over the SortedMap.\n\n\n  getIterator() {\n    return new ce(this.root, null, this.comparator, !1);\n  }\n\n  getIteratorFrom(t) {\n    return new ce(this.root, t, this.comparator, !1);\n  }\n\n  getReverseIterator() {\n    return new ce(this.root, null, this.comparator, !0);\n  }\n\n  getReverseIteratorFrom(t) {\n    return new ce(this.root, t, this.comparator, !0);\n  }\n\n} // end SortedMap\n// An iterator over an LLRBNode.\n\n\nclass ce {\n  constructor(t, e, n, r) {\n    this.isReverse = r, this.nodeStack = [];\n    let s = 1;\n\n    for (; !t.isEmpty();) if (s = e ? n(t.key, e) : 1, // flip the comparison if we're going in reverse\n    e && r && (s *= -1), s < 0) // This node is less than our start key. ignore it\n      t = this.isReverse ? t.left : t.right;else {\n      if (0 === s) {\n        // This node is exactly equal to our start key. Push it on the stack,\n        // but stop iterating;\n        this.nodeStack.push(t);\n        break;\n      } // This node is greater than our start key, add it to the stack and move\n      // to the next one\n\n\n      this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n    }\n  }\n\n  getNext() {\n    let t = this.nodeStack.pop();\n    const e = {\n      key: t.key,\n      value: t.value\n    };\n    if (this.isReverse) for (t = t.left; !t.isEmpty();) this.nodeStack.push(t), t = t.right;else for (t = t.right; !t.isEmpty();) this.nodeStack.push(t), t = t.left;\n    return e;\n  }\n\n  hasNext() {\n    return this.nodeStack.length > 0;\n  }\n\n  peek() {\n    if (0 === this.nodeStack.length) return null;\n    const t = this.nodeStack[this.nodeStack.length - 1];\n    return {\n      key: t.key,\n      value: t.value\n    };\n  }\n\n} // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\n\n\nclass ae {\n  constructor(t, e, n, r, s) {\n    this.key = t, this.value = e, this.color = null != n ? n : ae.RED, this.left = null != r ? r : ae.EMPTY, this.right = null != s ? s : ae.EMPTY, this.size = this.left.size + 1 + this.right.size;\n  } // Returns a copy of the current node, optionally replacing pieces of it.\n\n\n  copy(t, e, n, r, s) {\n    return new ae(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n  }\n\n  isEmpty() {\n    return !1;\n  } // Traverses the tree in key order and calls the specified action function\n  // for each node. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n\n\n  inorderTraversal(t) {\n    return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n  } // Traverses the tree in reverse key order and calls the specified action\n  // function for each node. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n\n\n  reverseTraversal(t) {\n    return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n  } // Returns the minimum node in the tree.\n\n\n  min() {\n    return this.left.isEmpty() ? this : this.left.min();\n  } // Returns the maximum key in the tree.\n\n\n  minKey() {\n    return this.min().key;\n  } // Returns the maximum key in the tree.\n\n\n  maxKey() {\n    return this.right.isEmpty() ? this.key : this.right.maxKey();\n  } // Returns new tree, with the key/value added.\n\n\n  insert(t, e, n) {\n    let r = this;\n    const s = n(t, r.key);\n    return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), r.fixUp();\n  }\n\n  removeMin() {\n    if (this.left.isEmpty()) return ae.EMPTY;\n    let t = this;\n    return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), t.fixUp();\n  } // Returns new tree, with the specified item removed.\n\n\n  remove(t, e) {\n    let n,\n        r = this;\n    if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), r = r.copy(null, null, null, r.left.remove(t, e), null);else {\n      if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), 0 === e(t, r.key)) {\n        if (r.right.isEmpty()) return ae.EMPTY;\n        n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n      }\n\n      r = r.copy(null, null, null, null, r.right.remove(t, e));\n    }\n    return r.fixUp();\n  }\n\n  isRed() {\n    return this.color;\n  } // Returns new tree after performing any needed rotations.\n\n\n  fixUp() {\n    let t = this;\n    return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n  }\n\n  moveRedLeft() {\n    let t = this.colorFlip();\n    return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), t = t.rotateLeft(), t = t.colorFlip()), t;\n  }\n\n  moveRedRight() {\n    let t = this.colorFlip();\n    return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n  }\n\n  rotateLeft() {\n    const t = this.copy(null, null, ae.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, t, null);\n  }\n\n  rotateRight() {\n    const t = this.copy(null, null, ae.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, t);\n  }\n\n  colorFlip() {\n    const t = this.left.copy(null, null, !this.left.color, null, null),\n          e = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, t, e);\n  } // For testing.\n\n\n  checkMaxDepth() {\n    const t = this.check();\n    return Math.pow(2, t) <= this.size + 1;\n  } // In a balanced RB tree, the black-depth (number of black nodes) from root to\n  // leaves is equal on both sides.  This function verifies that or asserts.\n\n\n  check() {\n    if (this.isRed() && this.left.isRed()) throw b();\n    if (this.right.isRed()) throw b();\n    const t = this.left.check();\n    if (t !== this.right.check()) throw b();\n    return t + (this.isRed() ? 0 : 1);\n  }\n\n} // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nae.EMPTY = null, ae.RED = !0, ae.BLACK = !1; // end LLRBEmptyNode\n\nae.EMPTY = new // Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n  constructor() {\n    this.size = 0;\n  }\n\n  get key() {\n    throw b();\n  }\n\n  get value() {\n    throw b();\n  }\n\n  get color() {\n    throw b();\n  }\n\n  get left() {\n    throw b();\n  }\n\n  get right() {\n    throw b();\n  } // Returns a copy of the current node.\n\n\n  copy(t, e, n, r, s) {\n    return this;\n  } // Returns a copy of the tree, with the specified key/value added.\n\n\n  insert(t, e, n) {\n    return new ae(t, e);\n  } // Returns a copy of the tree, with the specified key removed.\n\n\n  remove(t, e) {\n    return this;\n  }\n\n  isEmpty() {\n    return !0;\n  }\n\n  inorderTraversal(t) {\n    return !1;\n  }\n\n  reverseTraversal(t) {\n    return !1;\n  }\n\n  minKey() {\n    return null;\n  }\n\n  maxKey() {\n    return null;\n  }\n\n  isRed() {\n    return !1;\n  } // For testing.\n\n\n  checkMaxDepth() {\n    return !0;\n  }\n\n  check() {\n    return 0;\n  }\n\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\n\nclass he {\n  constructor(t) {\n    this.comparator = t, this.data = new ue(this.comparator);\n  }\n\n  has(t) {\n    return null !== this.data.get(t);\n  }\n\n  first() {\n    return this.data.minKey();\n  }\n\n  last() {\n    return this.data.maxKey();\n  }\n\n  get size() {\n    return this.data.size;\n  }\n\n  indexOf(t) {\n    return this.data.indexOf(t);\n  }\n  /** Iterates elements in order defined by \"comparator\" */\n\n\n  forEach(t) {\n    this.data.inorderTraversal((e, n) => (t(e), !1));\n  }\n  /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */\n\n\n  forEachInRange(t, e) {\n    const n = this.data.getIteratorFrom(t[0]);\n\n    for (; n.hasNext();) {\n      const r = n.getNext();\n      if (this.comparator(r.key, t[1]) >= 0) return;\n      e(r.key);\n    }\n  }\n  /**\n   * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n   */\n\n\n  forEachWhile(t, e) {\n    let n;\n\n    for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext();) {\n      if (!t(n.getNext().key)) return;\n    }\n  }\n  /** Finds the least element greater than or equal to `elem`. */\n\n\n  firstAfterOrEqual(t) {\n    const e = this.data.getIteratorFrom(t);\n    return e.hasNext() ? e.getNext().key : null;\n  }\n\n  getIterator() {\n    return new le(this.data.getIterator());\n  }\n\n  getIteratorFrom(t) {\n    return new le(this.data.getIteratorFrom(t));\n  }\n  /** Inserts or updates an element */\n\n\n  add(t) {\n    return this.copy(this.data.remove(t).insert(t, !0));\n  }\n  /** Deletes an element */\n\n\n  delete(t) {\n    return this.has(t) ? this.copy(this.data.remove(t)) : this;\n  }\n\n  isEmpty() {\n    return this.data.isEmpty();\n  }\n\n  unionWith(t) {\n    let e = this; // Make sure `result` always refers to the larger one of the two sets.\n\n    return e.size < t.size && (e = t, t = this), t.forEach(t => {\n      e = e.add(t);\n    }), e;\n  }\n\n  isEqual(t) {\n    if (!(t instanceof he)) return !1;\n    if (this.size !== t.size) return !1;\n    const e = this.data.getIterator(),\n          n = t.data.getIterator();\n\n    for (; e.hasNext();) {\n      const t = e.getNext().key,\n            r = n.getNext().key;\n      if (0 !== this.comparator(t, r)) return !1;\n    }\n\n    return !0;\n  }\n\n  toArray() {\n    const t = [];\n    return this.forEach(e => {\n      t.push(e);\n    }), t;\n  }\n\n  toString() {\n    const t = [];\n    return this.forEach(e => t.push(e)), \"SortedSet(\" + t.toString() + \")\";\n  }\n\n  copy(t) {\n    const e = new he(this.comparator);\n    return e.data = t, e;\n  }\n\n}\n\nclass le {\n  constructor(t) {\n    this.iter = t;\n  }\n\n  getNext() {\n    return this.iter.getNext().key;\n  }\n\n  hasNext() {\n    return this.iter.hasNext();\n  }\n\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */\n\n\nclass fe {\n  constructor(t) {\n    this.fields = t, // TODO(dimond): validation of FieldMask\n    // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n    t.sort(nt.comparator);\n  }\n\n  static empty() {\n    return new fe([]);\n  }\n  /**\n   * Returns a new FieldMask object that is the result of adding all the given\n   * fields paths to this field mask.\n   */\n\n\n  unionWith(t) {\n    let e = new he(nt.comparator);\n\n    for (const t of this.fields) e = e.add(t);\n\n    for (const n of t) e = e.add(n);\n\n    return new fe(e.toArray());\n  }\n  /**\n   * Verifies that `fieldPath` is included by at least one field in this field\n   * mask.\n   *\n   * This is an O(n) operation, where `n` is the size of the field mask.\n   */\n\n\n  covers(t) {\n    for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n\n    return !1;\n  }\n\n  isEqual(t) {\n    return vt(this.fields, t.fields, (t, e) => t.isEqual(e));\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */\n\n\nclass de {\n  constructor(t) {\n    this.value = t;\n  }\n\n  static empty() {\n    return new de({\n      mapValue: {}\n    });\n  }\n  /**\n   * Returns the value at the given path or null.\n   *\n   * @param path - the path to search\n   * @returns The value at the path or null if the path is not set.\n   */\n\n\n  field(t) {\n    if (t.isEmpty()) return this.value;\n    {\n      let e = this.value;\n\n      for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], !jt(e)) return null;\n\n      return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n    }\n  }\n  /**\n   * Sets the field to the provided value.\n   *\n   * @param path - The field path to set.\n   * @param value - The value to set.\n   */\n\n\n  set(t, e) {\n    this.getFieldsMap(t.popLast())[t.lastSegment()] = Bt(e);\n  }\n  /**\n   * Sets the provided fields to the provided values.\n   *\n   * @param data - A map of fields to values (or null for deletes).\n   */\n\n\n  setAll(t) {\n    let e = nt.emptyPath(),\n        n = {},\n        r = [];\n    t.forEach((t, s) => {\n      if (!e.isImmediateParentOf(s)) {\n        // Insert the accumulated changes at this parent location\n        const t = this.getFieldsMap(e);\n        this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n      }\n\n      t ? n[s.lastSegment()] = Bt(t) : r.push(s.lastSegment());\n    });\n    const s = this.getFieldsMap(e);\n    this.applyChanges(s, n, r);\n  }\n  /**\n   * Removes the field at the specified path. If there is no field at the\n   * specified path, nothing is changed.\n   *\n   * @param path - The field path to remove.\n   */\n\n\n  delete(t) {\n    const e = this.field(t.popLast());\n    jt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n  }\n\n  isEqual(t) {\n    return St(this.value, t.value);\n  }\n  /**\n   * Returns the map that contains the leaf element of `path`. If the parent\n   * entry does not yet exist, or if it is not a map, a new map will be created.\n   */\n\n\n  getFieldsMap(t) {\n    let e = this.value;\n    e.mapValue.fields || (e.mapValue = {\n      fields: {}\n    });\n\n    for (let n = 0; n < t.length; ++n) {\n      let r = e.mapValue.fields[t.get(n)];\n      jt(r) && r.mapValue.fields || (r = {\n        mapValue: {\n          fields: {}\n        }\n      }, e.mapValue.fields[t.get(n)] = r), e = r;\n    }\n\n    return e.mapValue.fields;\n  }\n  /**\n   * Modifies `fieldsMap` by adding, replacing or deleting the specified\n   * entries.\n   */\n\n\n  applyChanges(t, e, n) {\n    Et(e, (e, n) => t[e] = n);\n\n    for (const e of n) delete t[e];\n  }\n\n  clone() {\n    return new de(Bt(this.value));\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */\n\n\nclass we {\n  constructor(t, e, n, r, s, i, o) {\n    this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.createTime = s, this.data = i, this.documentState = o;\n  }\n  /**\n   * Creates a document with no known version or data, but which can serve as\n   * base document for mutations.\n   */\n\n\n  static newInvalidDocument(t) {\n    return new we(t, 0\n    /* DocumentType.INVALID */\n    ,\n    /* version */\n    oe.min(),\n    /* readTime */\n    oe.min(),\n    /* createTime */\n    oe.min(), de.empty(), 0\n    /* DocumentState.SYNCED */\n    );\n  }\n  /**\n   * Creates a new document that is known to exist with the given data at the\n   * given version.\n   */\n\n\n  static newFoundDocument(t, e, n, r) {\n    return new we(t, 1\n    /* DocumentType.FOUND_DOCUMENT */\n    ,\n    /* version */\n    e,\n    /* readTime */\n    oe.min(),\n    /* createTime */\n    n, r, 0\n    /* DocumentState.SYNCED */\n    );\n  }\n  /** Creates a new document that is known to not exist at the given version. */\n\n\n  static newNoDocument(t, e) {\n    return new we(t, 2\n    /* DocumentType.NO_DOCUMENT */\n    ,\n    /* version */\n    e,\n    /* readTime */\n    oe.min(),\n    /* createTime */\n    oe.min(), de.empty(), 0\n    /* DocumentState.SYNCED */\n    );\n  }\n  /**\n   * Creates a new document that is known to exist at the given version but\n   * whose data is not known (e.g. a document that was updated without a known\n   * base document).\n   */\n\n\n  static newUnknownDocument(t, e) {\n    return new we(t, 3\n    /* DocumentType.UNKNOWN_DOCUMENT */\n    ,\n    /* version */\n    e,\n    /* readTime */\n    oe.min(),\n    /* createTime */\n    oe.min(), de.empty(), 2\n    /* DocumentState.HAS_COMMITTED_MUTATIONS */\n    );\n  }\n  /**\n   * Changes the document type to indicate that it exists and that its version\n   * and data are known.\n   */\n\n\n  convertToFoundDocument(t, e) {\n    // If a document is switching state from being an invalid or deleted\n    // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n    // update from Watch or due to applying a local set mutation on top\n    // of a deleted document, our best guess about its createTime would be the\n    // version at which the document transitioned to a FOUND_DOCUMENT.\n    return !this.createTime.isEqual(oe.min()) || 2\n    /* DocumentType.NO_DOCUMENT */\n    !== this.documentType && 0\n    /* DocumentType.INVALID */\n    !== this.documentType || (this.createTime = t), this.version = t, this.documentType = 1\n    /* DocumentType.FOUND_DOCUMENT */\n    , this.data = e, this.documentState = 0\n    /* DocumentState.SYNCED */\n    , this;\n  }\n  /**\n   * Changes the document type to indicate that it doesn't exist at the given\n   * version.\n   */\n\n\n  convertToNoDocument(t) {\n    return this.version = t, this.documentType = 2\n    /* DocumentType.NO_DOCUMENT */\n    , this.data = de.empty(), this.documentState = 0\n    /* DocumentState.SYNCED */\n    , this;\n  }\n  /**\n   * Changes the document type to indicate that it exists at a given version but\n   * that its data is not known (e.g. a document that was updated without a known\n   * base document).\n   */\n\n\n  convertToUnknownDocument(t) {\n    return this.version = t, this.documentType = 3\n    /* DocumentType.UNKNOWN_DOCUMENT */\n    , this.data = de.empty(), this.documentState = 2\n    /* DocumentState.HAS_COMMITTED_MUTATIONS */\n    , this;\n  }\n\n  setHasCommittedMutations() {\n    return this.documentState = 2\n    /* DocumentState.HAS_COMMITTED_MUTATIONS */\n    , this;\n  }\n\n  setHasLocalMutations() {\n    return this.documentState = 1\n    /* DocumentState.HAS_LOCAL_MUTATIONS */\n    , this.version = oe.min(), this;\n  }\n\n  setReadTime(t) {\n    return this.readTime = t, this;\n  }\n\n  get hasLocalMutations() {\n    return 1\n    /* DocumentState.HAS_LOCAL_MUTATIONS */\n    === this.documentState;\n  }\n\n  get hasCommittedMutations() {\n    return 2\n    /* DocumentState.HAS_COMMITTED_MUTATIONS */\n    === this.documentState;\n  }\n\n  get hasPendingWrites() {\n    return this.hasLocalMutations || this.hasCommittedMutations;\n  }\n\n  isValidDocument() {\n    return 0\n    /* DocumentType.INVALID */\n    !== this.documentType;\n  }\n\n  isFoundDocument() {\n    return 1\n    /* DocumentType.FOUND_DOCUMENT */\n    === this.documentType;\n  }\n\n  isNoDocument() {\n    return 2\n    /* DocumentType.NO_DOCUMENT */\n    === this.documentType;\n  }\n\n  isUnknownDocument() {\n    return 3\n    /* DocumentType.UNKNOWN_DOCUMENT */\n    === this.documentType;\n  }\n\n  isEqual(t) {\n    return t instanceof we && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n  }\n\n  mutableCopy() {\n    return new we(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n  }\n\n  toString() {\n    return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {createTime: ${this.createTime}}), {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n  }\n\n}\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\n\n\nclass me {\n  constructor(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    let i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n    let o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n    this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, this.startAt = i, this.endAt = o, this.S = null;\n  }\n\n}\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */\n\n\nfunction pe(t) {\n  let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  let i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  let o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  return new me(t, e, n, r, s, i, o);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\n\n\nclass ye {\n  /**\n   * Initializes a Query with a path and optional additional query constraints.\n   * Path must currently be empty if this is a collection group query.\n   */\n  constructor(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    let i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \"F\";\n    let o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n    let u = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n    this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.q = null, // The corresponding `Target` of this `Query` instance.\n    this.O = null, this.startAt, this.endAt;\n  }\n\n}\n/** Creates a new Query for a query that matches all documents at `path` */\n\n\nfunction ge(t) {\n  return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction _e(t) {\n  for (const e of t.filters) {\n    const t = e.getFirstInequalityField();\n    if (null !== t) return t;\n  }\n\n  return null;\n}\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\n\n\nfunction ve(t) {\n  return null !== t.collectionGroup;\n}\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */\n\n\nfunction be(t) {\n  const e = I(t);\n\n  if (null === e.q) {\n    e.q = [];\n\n    const t = _e(e),\n          n = ge(e);\n\n    if (null !== t && null === n) // In order to implicitly add key ordering, we must also add the\n      // inequality filter field for it to be a valid query.\n      // Note that the default inequality field and key ordering is ascending.\n      t.isKeyField() || e.q.push(new se(t)), e.q.push(new se(nt.keyField(), \"asc\"\n      /* Direction.ASCENDING */\n      ));else {\n      let t = !1;\n\n      for (const n of e.explicitOrderBy) e.q.push(n), n.field.isKeyField() && (t = !0);\n\n      if (!t) {\n        // The order of the implicit key ordering always matches the last\n        // explicit order by\n        const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\"\n        /* Direction.ASCENDING */\n        ;\n        e.q.push(new se(nt.keyField(), t));\n      }\n    }\n  }\n\n  return e.q;\n}\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */\n\n\nfunction Ee(t) {\n  const e = I(t);\n  if (!e.O) if (\"F\"\n  /* LimitType.First */\n  === e.limitType) e.O = pe(e.path, e.collectionGroup, be(e), e.filters, e.limit, e.startAt, e.endAt);else {\n    // Flip the orderBy directions since we want the last results\n    const t = [];\n\n    for (const n of be(e)) {\n      const e = \"desc\"\n      /* Direction.DESCENDING */\n      === n.dir ? \"asc\"\n      /* Direction.ASCENDING */\n      : \"desc\"\n      /* Direction.DESCENDING */\n      ;\n      t.push(new se(n.field, e));\n    } // We need to swap the cursors to match the now-flipped query ordering.\n\n\n    const n = e.endAt ? new Qt(e.endAt.position, e.endAt.inclusive) : null,\n          r = e.startAt ? new Qt(e.startAt.position, e.startAt.inclusive) : null; // Now return as a LimitType.First query.\n\n    e.O = pe(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n  }\n  return e.O;\n}\n\nfunction Ie(t, e) {\n  e.getFirstInequalityField(), _e(t);\n  const n = t.filters.concat([e]);\n  return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n}\n\nfunction Te(t, e) {\n  return function (t, e) {\n    if (t.limit !== e.limit) return !1;\n    if (t.orderBy.length !== e.orderBy.length) return !1;\n\n    for (let n = 0; n < t.orderBy.length; n++) if (!ie(t.orderBy[n], e.orderBy[n])) return !1;\n\n    if (t.filters.length !== e.filters.length) return !1;\n\n    for (let n = 0; n < t.filters.length; n++) if (!Yt(t.filters[n], e.filters[n])) return !1;\n\n    return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!zt(t.startAt, e.startAt) && zt(t.endAt, e.endAt);\n  }(Ee(t), Ee(e)) && t.limitType === e.limitType;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\n\n\nfunction Ae(t, e) {\n  return function (t) {\n    return \"number\" == typeof t && Number.isInteger(t) && !lt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n  }(e) ?\n  /**\n  * Returns an IntegerValue for `value`.\n  */\n  function (t) {\n    return {\n      integerValue: \"\" + t\n    };\n  }(e) : function (t, e) {\n    if (t.k) {\n      if (isNaN(e)) return {\n        doubleValue: \"NaN\"\n      };\n      if (e === 1 / 0) return {\n        doubleValue: \"Infinity\"\n      };\n      if (e === -1 / 0) return {\n        doubleValue: \"-Infinity\"\n      };\n    }\n\n    return {\n      doubleValue: lt(e) ? \"-0\" : e\n    };\n  }(t, e);\n}\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Used to represent a field transform on a mutation. */\n\n\nclass Re {\n  constructor() {\n    // Make sure that the structural type of `TransformOperation` is unique.\n    // See https://github.com/microsoft/TypeScript/issues/5451\n    this._ = void 0;\n  }\n\n}\n/** Transforms a value into a server-generated timestamp. */\n\n\nclass Pe extends Re {}\n/** Transforms an array value via a union operation. */\n\n\nclass Ve extends Re {\n  constructor(t) {\n    super(), this.elements = t;\n  }\n\n}\n/** Transforms an array value via a remove operation. */\n\n\nclass $e extends Re {\n  constructor(t) {\n    super(), this.elements = t;\n  }\n\n}\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */\n\n\nclass Ne extends Re {\n  constructor(t, e) {\n    super(), this.C = t, this.L = e;\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** A field path and the TransformOperation to perform upon it. */\n\n\nclass De {\n  constructor(t, e) {\n    this.field = t, this.transform = e;\n  }\n\n}\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */\n\n\nclass Fe {\n  constructor(t, e) {\n    this.updateTime = t, this.exists = e;\n  }\n  /** Creates a new empty Precondition. */\n\n\n  static none() {\n    return new Fe();\n  }\n  /** Creates a new Precondition with an exists flag. */\n\n\n  static exists(t) {\n    return new Fe(void 0, t);\n  }\n  /** Creates a new Precondition based on a version a document exists at. */\n\n\n  static updateTime(t) {\n    return new Fe(t);\n  }\n  /** Returns whether this Precondition is empty. */\n\n\n  get isNone() {\n    return void 0 === this.updateTime && void 0 === this.exists;\n  }\n\n  isEqual(t) {\n    return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n  }\n\n}\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */\n\n\nclass xe {}\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */\n\n\nclass Se extends xe {\n  constructor(t, e, n) {\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, this.type = 0\n    /* MutationType.Set */\n    ;\n  }\n\n  getFieldMask() {\n    return null;\n  }\n\n}\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */\n\n\nclass qe extends xe {\n  constructor(t, e, n, r) {\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n    super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, this.fieldTransforms = s, this.type = 1\n    /* MutationType.Patch */\n    ;\n  }\n\n  getFieldMask() {\n    return this.fieldMask;\n  }\n\n}\n/** A mutation that deletes the document at the given key. */\n\n\nclass Oe extends xe {\n  constructor(t, e) {\n    super(), this.key = t, this.precondition = e, this.type = 2\n    /* MutationType.Delete */\n    , this.fieldTransforms = [];\n  }\n\n  getFieldMask() {\n    return null;\n  }\n\n}\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */\n\n\nclass ke extends xe {\n  constructor(t, e) {\n    super(), this.key = t, this.precondition = e, this.type = 3\n    /* MutationType.Verify */\n    , this.fieldTransforms = [];\n  }\n\n  getFieldMask() {\n    return null;\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst Ce = (() => {\n  const t = {\n    asc: \"ASCENDING\",\n    desc: \"DESCENDING\"\n  };\n  return t;\n})(),\n      Le = (() => {\n  const t = {\n    \"<\": \"LESS_THAN\",\n    \"<=\": \"LESS_THAN_OR_EQUAL\",\n    \">\": \"GREATER_THAN\",\n    \">=\": \"GREATER_THAN_OR_EQUAL\",\n    \"==\": \"EQUAL\",\n    \"!=\": \"NOT_EQUAL\",\n    \"array-contains\": \"ARRAY_CONTAINS\",\n    in: \"IN\",\n    \"not-in\": \"NOT_IN\",\n    \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n  };\n  return t;\n})(),\n      Me = (() => {\n  const t = {\n    and: \"AND\",\n    or: \"OR\"\n  };\n  return t;\n})();\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\n\n\nclass Ue {\n  constructor(t, e) {\n    this.databaseId = t, this.k = e;\n  }\n\n}\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\n\n\nfunction je(t, e) {\n  if (t.k) {\n    return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n  }\n\n  return {\n    seconds: \"\" + e.seconds,\n    nanos: e.nanoseconds\n  };\n}\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\n\n\nfunction Be(t, e) {\n  return t.k ? e.toBase64() : e.toUint8Array();\n}\n\nfunction Qe(t, e) {\n  return je(t, e.toTimestamp());\n}\n\nfunction ze(t) {\n  return E(!!t), oe.fromTimestamp(function (t) {\n    const e = At(t);\n    return new Vt(e.seconds, e.nanos);\n  }(t));\n}\n\nfunction We(t, e) {\n  return function (t) {\n    return new tt([\"projects\", t.projectId, \"databases\", t.database]);\n  }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Ge(t, e) {\n  return We(t.databaseId, e.path);\n}\n\nfunction Ke(t, e) {\n  const n = function (t) {\n    const e = tt.fromString(t);\n    return E(cn(e)), e;\n  }(e);\n\n  if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n  if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n  return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n  var r;\n  /** Creates a Document proto from key and fields (but no create/update time) */\n}\n\nfunction Ye(t, e) {\n  return We(t.databaseId, e);\n}\n\nfunction He(t) {\n  return new tt([\"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database]).canonicalString();\n}\n\nfunction Je(t, e, n) {\n  return {\n    name: Ge(t, e),\n    fields: n.value.mapValue.fields\n  };\n}\n\nfunction Xe(t, e) {\n  return \"found\" in e ? function (t, e) {\n    E(!!e.found), e.found.name, e.found.updateTime;\n    const n = Ke(t, e.found.name),\n          r = ze(e.found.updateTime),\n          s = e.found.createTime ? ze(e.found.createTime) : oe.min(),\n          i = new de({\n      mapValue: {\n        fields: e.found.fields\n      }\n    });\n    return we.newFoundDocument(n, r, s, i);\n  }(t, e) : \"missing\" in e ? function (t, e) {\n    E(!!e.missing), E(!!e.readTime);\n    const n = Ke(t, e.missing),\n          r = ze(e.readTime);\n    return we.newNoDocument(n, r);\n  }(t, e) : b();\n}\n\nfunction Ze(t, e) {\n  let n;\n  if (e instanceof Se) n = {\n    update: Je(t, e.key, e.value)\n  };else if (e instanceof Oe) n = {\n    delete: Ge(t, e.key)\n  };else if (e instanceof qe) n = {\n    update: Je(t, e.key, e.data),\n    updateMask: un(e.fieldMask)\n  };else {\n    if (!(e instanceof ke)) return b();\n    n = {\n      verify: Ge(t, e.key)\n    };\n  }\n  return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map(t => function (t, e) {\n    const n = e.transform;\n    if (n instanceof Pe) return {\n      fieldPath: e.field.canonicalString(),\n      setToServerValue: \"REQUEST_TIME\"\n    };\n    if (n instanceof Ve) return {\n      fieldPath: e.field.canonicalString(),\n      appendMissingElements: {\n        values: n.elements\n      }\n    };\n    if (n instanceof $e) return {\n      fieldPath: e.field.canonicalString(),\n      removeAllFromArray: {\n        values: n.elements\n      }\n    };\n    if (n instanceof Ne) return {\n      fieldPath: e.field.canonicalString(),\n      increment: n.L\n    };\n    throw b();\n  }(0, t))), e.precondition.isNone || (n.currentDocument = function (t, e) {\n    return void 0 !== e.updateTime ? {\n      updateTime: Qe(t, e.updateTime)\n    } : void 0 !== e.exists ? {\n      exists: e.exists\n    } : b();\n  }(t, e.precondition)), n;\n}\n\nfunction tn(t, e) {\n  // Dissect the path into parent, collectionId, and optional key filter.\n  const n = {\n    structuredQuery: {}\n  },\n        r = e.path;\n  null !== e.collectionGroup ? (n.parent = Ye(t, r), n.structuredQuery.from = [{\n    collectionId: e.collectionGroup,\n    allDescendants: !0\n  }]) : (n.parent = Ye(t, r.popLast()), n.structuredQuery.from = [{\n    collectionId: r.lastSegment()\n  }]);\n\n  const s = function (t) {\n    if (0 === t.length) return;\n    return on(Kt.create(t, \"and\"\n    /* CompositeOperator.AND */\n    ));\n  }(e.filters);\n\n  s && (n.structuredQuery.where = s);\n\n  const i = function (t) {\n    if (0 === t.length) return;\n    return t.map(t => // visible for testing\n    function (t) {\n      return {\n        field: sn(t.field),\n        direction: en(t.dir)\n      };\n    } // visible for testing\n    (t));\n  }(e.orderBy);\n\n  i && (n.structuredQuery.orderBy = i);\n\n  const o = function (t, e) {\n    return t.k || ht(e) ? e : {\n      value: e\n    };\n  }(t, e.limit);\n\n  var u;\n  return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n    before: (u = e.startAt).inclusive,\n    values: u.position\n  }), e.endAt && (n.structuredQuery.endAt = function (t) {\n    return {\n      before: !t.inclusive,\n      values: t.position\n    };\n  } // visible for testing\n  (e.endAt)), n;\n}\n\nfunction en(t) {\n  return Ce[t];\n} // visible for testing\n\n\nfunction nn(t) {\n  return Le[t];\n}\n\nfunction rn(t) {\n  return Me[t];\n}\n\nfunction sn(t) {\n  return {\n    fieldPath: t.canonicalString()\n  };\n}\n\nfunction on(t) {\n  return t instanceof Gt ? function (t) {\n    if (\"==\"\n    /* Operator.EQUAL */\n    === t.op) {\n      if (Ut(t.value)) return {\n        unaryFilter: {\n          field: sn(t.field),\n          op: \"IS_NAN\"\n        }\n      };\n      if (Mt(t.value)) return {\n        unaryFilter: {\n          field: sn(t.field),\n          op: \"IS_NULL\"\n        }\n      };\n    } else if (\"!=\"\n    /* Operator.NOT_EQUAL */\n    === t.op) {\n      if (Ut(t.value)) return {\n        unaryFilter: {\n          field: sn(t.field),\n          op: \"IS_NOT_NAN\"\n        }\n      };\n      if (Mt(t.value)) return {\n        unaryFilter: {\n          field: sn(t.field),\n          op: \"IS_NOT_NULL\"\n        }\n      };\n    }\n\n    return {\n      fieldFilter: {\n        field: sn(t.field),\n        op: nn(t.op),\n        value: t.value\n      }\n    };\n  }(t) : t instanceof Kt ? function (t) {\n    const e = t.getFilters().map(t => on(t));\n    if (1 === e.length) return e[0];\n    return {\n      compositeFilter: {\n        op: rn(t.op),\n        filters: e\n      }\n    };\n  }(t) : b();\n}\n\nfunction un(t) {\n  const e = [];\n  return t.fields.forEach(t => e.push(t.canonicalString())), {\n    fieldPaths: e\n  };\n}\n\nfunction cn(t) {\n  // Resource names have at least 4 components (project ID, database ID)\n  return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction an(t) {\n  return new Ue(t,\n  /* useProto3Json= */\n  !0);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\n\n\nclass hn {\n  constructor(\n  /**\n   * The AsyncQueue to run backoff operations on.\n   */\n  t,\n  /**\n   * The ID to use when scheduling backoff operations on the AsyncQueue.\n   */\n  e) {\n    let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1e3;\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1.5;\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 6e4;\n    this.M = t, this.timerId = e, this.U = n, this.j = r, this.B = s, this.W = 0, this.G = null,\n    /** The last backoff attempt, as epoch milliseconds. */\n    this.K = Date.now(), this.reset();\n  }\n  /**\n   * Resets the backoff delay.\n   *\n   * The very next backoffAndWait() will have no delay. If it is called again\n   * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n   * subsequent ones will increase according to the backoffFactor.\n   */\n\n\n  reset() {\n    this.W = 0;\n  }\n  /**\n   * Resets the backoff delay to the maximum delay (e.g. for use after a\n   * RESOURCE_EXHAUSTED error).\n   */\n\n\n  Y() {\n    this.W = this.B;\n  }\n  /**\n   * Returns a promise that resolves after currentDelayMs, and increases the\n   * delay for any subsequent attempts. If there was a pending backoff operation\n   * already, it will be canceled.\n   */\n\n\n  H(t) {\n    // Cancel any pending backoff operation.\n    this.cancel(); // First schedule using the current base (which may be 0 and should be\n    // honored as such).\n\n    const e = Math.floor(this.W + this.J()),\n          n = Math.max(0, Date.now() - this.K),\n          r = Math.max(0, e - n); // Guard against lastAttemptTime being in the future due to a clock change.\n\n    r > 0 && y(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.W} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), this.G = this.M.enqueueAfterDelay(this.timerId, r, () => (this.K = Date.now(), t())), // Apply backoff factor to determine next delay and ensure it is within\n    // bounds.\n    this.W *= this.j, this.W < this.U && (this.W = this.U), this.W > this.B && (this.W = this.B);\n  }\n\n  X() {\n    null !== this.G && (this.G.skipDelay(), this.G = null);\n  }\n\n  cancel() {\n    null !== this.G && (this.G.cancel(), this.G = null);\n  }\n  /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */\n\n\n  J() {\n    return (Math.random() - .5) * this.W;\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\n\n\nclass ln extends class {} {\n  constructor(t, e, n, r) {\n    super(), this.authCredentials = t, this.appCheckCredentials = e, this.connection = n, this.C = r, this.Z = !1;\n  }\n\n  tt() {\n    if (this.Z) throw new U(S, \"The client has already been terminated.\");\n  }\n  /** Invokes the provided RPC with auth and AppCheck tokens. */\n\n\n  I(t, e, n) {\n    return this.tt(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(_ref => {\n      let [r, s] = _ref;\n      return this.connection.I(t, e, n, r, s);\n    }).catch(t => {\n      throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n    });\n  }\n  /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */\n\n\n  P(t, e, n, r) {\n    return this.tt(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(_ref2 => {\n      let [s, i] = _ref2;\n      return this.connection.P(t, e, n, s, i, r);\n    }).catch(t => {\n      throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n    });\n  }\n\n  terminate() {\n    this.Z = !0;\n  }\n\n} // TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\n\n\nasync function fn(t, e) {\n  const n = I(t),\n        r = He(n.C) + \"/documents\",\n        s = {\n    writes: e.map(t => Ze(n.C, t))\n  };\n  await n.I(\"Commit\", r, s);\n}\n\nasync function dn(t, e) {\n  const n = I(t),\n        r = He(n.C) + \"/documents\",\n        s = {\n    documents: e.map(t => Ge(n.C, t))\n  },\n        i = await n.P(\"BatchGetDocuments\", r, s, e.length),\n        o = new Map();\n  i.forEach(t => {\n    const e = Xe(n.C, t);\n    o.set(e.key.toString(), e);\n  });\n  const u = [];\n  return e.forEach(t => {\n    const e = o.get(t.toString());\n    E(!!e), u.push(e);\n  }), u;\n}\n\nasync function wn(t, e) {\n  const n = I(t),\n        r = tn(n.C, Ee(e));\n  return (await n.P(\"RunQuery\", r.parent, {\n    structuredQuery: r.structuredQuery\n  })).filter(t => !!t.document).map(t => function (t, e, n) {\n    const r = Ke(t, e.name),\n          s = ze(e.updateTime),\n          i = e.createTime ? ze(e.createTime) : oe.min(),\n          o = new de({\n      mapValue: {\n        fields: e.fields\n      }\n    }),\n          u = we.newFoundDocument(r, s, i, o);\n    return n && u.setHasCommittedMutations(), n ? u.setHasCommittedMutations() : u;\n  }(n.C, t.document, void 0));\n}\n\nasync function mn(t, e) {\n  const n = I(t),\n        r = function (t, e) {\n    const n = tn(t, e);\n    return {\n      structuredAggregationQuery: {\n        aggregations: [{\n          count: {},\n          alias: \"count_alias\"\n        }],\n        structuredQuery: n.structuredQuery\n      },\n      parent: n.parent\n    };\n  }(n.C, Ee(e)),\n        s = r.parent;\n\n  n.connection.v || delete r.parent;\n  return (await n.P(\"RunAggregationQuery\", s, r,\n  /*expectedResponseCount=*/\n  1)).filter(t => !!t.result).map(t => t.result.aggregateFields);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst pn = new Map();\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\n\nfunction yn(t) {\n  if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n\n  if (!pn.has(t)) {\n    y(\"ComponentProvider\", \"Initializing Datastore\");\n\n    const i = function (t) {\n      return new pt(t, fetch.bind(null));\n    }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), new J(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))),\n          o = an(t._databaseId),\n          u = function (t, e, n, r) {\n      return new ln(t, e, n, r);\n    }(t._authCredentials, t._appCheckCredentials, i, o);\n\n    pn.set(t, u);\n  }\n\n  var e, n, r, s;\n  /**\n  * @license\n  * Copyright 2018 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  return pn.get(t);\n}\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\n\n\nclass gn {\n  constructor(t) {\n    var e;\n\n    if (void 0 === t.host) {\n      if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n      this.host = \"firestore.googleapis.com\", this.ssl = true;\n    } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n\n    if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040;else {\n      if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n      this.cacheSizeBytes = t.cacheSizeBytes;\n    }\n    this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, this.useFetchStreams = !!t.useFetchStreams, function (t, e, n, r) {\n      if (!0 === e && !0 === r) throw new U(P, `${t} and ${n} cannot be used together.`);\n    }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n  }\n\n  isEqual(t) {\n    return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n  }\n\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */\n\n\nclass _n {\n  /** @hideconstructor */\n  constructor(t, e, n, r) {\n    this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, this._app = r,\n    /**\n     * Whether it's a Firestore or Firestore Lite instance.\n     */\n    this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new gn({}), this._settingsFrozen = !1;\n  }\n  /**\n   * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n   * instance.\n   */\n\n\n  get app() {\n    if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n    return this._app;\n  }\n\n  get _initialized() {\n    return this._settingsFrozen;\n  }\n\n  get _terminated() {\n    return void 0 !== this._terminateTask;\n  }\n\n  _setSettings(t) {\n    if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n    this._settings = new gn(t), void 0 !== t.credentials && (this._authCredentials = function (t) {\n      if (!t) return new Q();\n\n      switch (t.type) {\n        case \"gapi\":\n          const e = t.client;\n          return new K(e, t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n        case \"provider\":\n          return t.client;\n\n        default:\n          throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n      }\n    }(t.credentials));\n  }\n\n  _getSettings() {\n    return this._settings;\n  }\n\n  _freezeSettings() {\n    return this._settingsFrozen = !0, this._settings;\n  }\n\n  _delete() {\n    return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n  }\n  /** Returns a JSON-serializable representation of this `Firestore` instance. */\n\n\n  toJSON() {\n    return {\n      app: this._app,\n      databaseId: this._databaseId,\n      settings: this._settings\n    };\n  }\n  /**\n   * Terminates all components used by this client. Subclasses can override\n   * this method to clean up their own dependencies, but must also call this\n   * method.\n   *\n   * Only ever called once.\n   */\n\n\n  _terminate() {\n    return function (t) {\n      const e = pn.get(t);\n      e && (y(\"ComponentProvider\", \"Removing Datastore\"), pn.delete(t), e.terminate());\n    }(this), Promise.resolve();\n  }\n\n}\n\nfunction vn(t, e, n) {\n  n || (n = \"(default)\");\n\n  const r = _getProvider(t, \"firestore/lite\");\n\n  if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n  return r.initialize({\n    options: e,\n    instanceIdentifier: n\n  });\n}\n\nfunction bn(e, n) {\n  const r = \"object\" == typeof e ? e : getApp(),\n        s = \"string\" == typeof e ? e : n || \"(default)\",\n        i = _getProvider(r, \"firestore/lite\").getImmediate({\n    identifier: s\n  });\n\n  if (!i._initialized) {\n    const t = getDefaultEmulatorHostnameAndPort(\"firestore\");\n    t && En(i, ...t);\n  }\n\n  return i;\n}\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */\n\n\nfunction En(t, e, n) {\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var s;\n\n  const i = (t = ct(t, _n))._getSettings();\n\n  if (\"firestore.googleapis.com\" !== i.host && i.host !== e && _(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), t._setSettings(Object.assign(Object.assign({}, i), {\n    host: `${e}:${n}`,\n    ssl: !1\n  })), r.mockUserToken) {\n    let e, n;\n    if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = d.MOCK_USER;else {\n      // Let createMockUserToken validate first (catches common mistakes like\n      // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n      e = createMockUserToken(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n      const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n      if (!i) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n      n = new d(i);\n    }\n    t._authCredentials = new z(new B(e, n));\n  }\n}\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */\n\n\nfunction In(t) {\n  return t = ct(t, _n), _removeServiceInstance(t.app, \"firestore/lite\"), t._delete();\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\nclass Tn {\n  constructor() {\n    /** A type string to uniquely identify instances of this class. */\n    this.type = \"AggregateField\";\n  }\n\n}\n/**\n * The results of executing an aggregation query.\n */\n\n\nclass An {\n  /** @hideconstructor */\n  constructor(t, e) {\n    this._data = e,\n    /** A type string to uniquely identify instances of this class. */\n    this.type = \"AggregateQuerySnapshot\", this.query = t;\n  }\n  /**\n   * Returns the results of the aggregations performed over the underlying\n   * query.\n   *\n   * The keys of the returned object will be the same as those of the\n   * `AggregateSpec` object specified to the aggregation method, and the values\n   * will be the corresponding aggregation result.\n   *\n   * @returns The results of the aggregations performed over the underlying\n   * query.\n   */\n\n\n  data() {\n    return this._data;\n  }\n\n}\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * CountQueryRunner encapsulates the logic needed to run the count aggregation\n * queries.\n */\n\n\nclass Rn {\n  constructor(t, e, n) {\n    this.query = t, this.datastore = e, this.userDataWriter = n;\n  }\n\n  run() {\n    return mn(this.datastore, this.query._query).then(t => {\n      E(void 0 !== t[0]);\n      const e = Object.entries(t[0]).filter(_ref3 => {\n        let [t, e] = _ref3;\n        return \"count_alias\" === t;\n      }).map(_ref4 => {\n        let [t, e] = _ref4;\n        return this.userDataWriter.convertValue(e);\n      })[0];\n      return E(\"number\" == typeof e), Promise.resolve(new An(this.query, {\n        count: e\n      }));\n    });\n  }\n\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\n\n\nclass Pn {\n  /** @hideconstructor */\n  constructor(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    this.converter = e, this._key = n,\n    /** The type of this Firestore reference. */\n    this.type = \"document\", this.firestore = t;\n  }\n\n  get _path() {\n    return this._key.path;\n  }\n  /**\n   * The document's identifier within its collection.\n   */\n\n\n  get id() {\n    return this._key.path.lastSegment();\n  }\n  /**\n   * A string representing the path of the referenced document (relative\n   * to the root of the database).\n   */\n\n\n  get path() {\n    return this._key.path.canonicalString();\n  }\n  /**\n   * The collection this `DocumentReference` belongs to.\n   */\n\n\n  get parent() {\n    return new $n(this.firestore, this.converter, this._key.path.popLast());\n  }\n\n  withConverter(t) {\n    return new Pn(this.firestore, t, this._key);\n  }\n\n}\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */\n\n\nclass Vn {\n  // This is the lite version of the Query class in the main SDK.\n\n  /** @hideconstructor protected */\n  constructor(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    this.converter = e, this._query = n,\n    /** The type of this Firestore reference. */\n    this.type = \"query\", this.firestore = t;\n  }\n\n  withConverter(t) {\n    return new Vn(this.firestore, t, this._query);\n  }\n\n}\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */\n\n\nclass $n extends Vn {\n  /** @hideconstructor */\n  constructor(t, e, n) {\n    super(t, e, new ye(n)), this._path = n,\n    /** The type of this Firestore reference. */\n    this.type = \"collection\";\n  }\n  /** The collection's identifier. */\n\n\n  get id() {\n    return this._query.path.lastSegment();\n  }\n  /**\n   * A string representing the path of the referenced collection (relative\n   * to the root of the database).\n   */\n\n\n  get path() {\n    return this._query.path.canonicalString();\n  }\n  /**\n   * A reference to the containing `DocumentReference` if this is a\n   * subcollection. If this isn't a subcollection, the reference is null.\n   */\n\n\n  get parent() {\n    const t = this._path.popLast();\n\n    return t.isEmpty() ? null : new Pn(this.firestore,\n    /* converter= */\n    null, new rt(t));\n  }\n\n  withConverter(t) {\n    return new $n(this.firestore, t, this._path);\n  }\n\n}\n\nfunction Nn(t, e) {\n  for (var _len5 = arguments.length, n = new Array(_len5 > 2 ? _len5 - 2 : 0), _key5 = 2; _key5 < _len5; _key5++) {\n    n[_key5 - 2] = arguments[_key5];\n  }\n\n  if (t = getModularInstance(t), st(\"collection\", \"path\", e), t instanceof _n) {\n    const r = tt.fromString(e, ...n);\n    return ot(r), new $n(t,\n    /* converter= */\n    null, r);\n  }\n\n  {\n    if (!(t instanceof Pn || t instanceof $n)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n\n    const r = t._path.child(tt.fromString(e, ...n));\n\n    return ot(r), new $n(t.firestore,\n    /* converter= */\n    null, r);\n  }\n} // TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */\n\n\nfunction Dn(t, e) {\n  if (t = ct(t, _n), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n  return new Vn(t,\n  /* converter= */\n  null, function (t) {\n    return new ye(tt.emptyPath(), t);\n  }(e));\n}\n\nfunction Fn(t, e) {\n  for (var _len6 = arguments.length, n = new Array(_len6 > 2 ? _len6 - 2 : 0), _key6 = 2; _key6 < _len6; _key6++) {\n    n[_key6 - 2] = arguments[_key6];\n  }\n\n  if (t = getModularInstance(t), // We allow omission of 'pathString' but explicitly prohibit passing in both\n  // 'undefined' and 'null'.\n  1 === arguments.length && (e = gt.N()), st(\"doc\", \"path\", e), t instanceof _n) {\n    const r = tt.fromString(e, ...n);\n    return it(r), new Pn(t,\n    /* converter= */\n    null, new rt(r));\n  }\n\n  {\n    if (!(t instanceof Pn || t instanceof $n)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n\n    const r = t._path.child(tt.fromString(e, ...n));\n\n    return it(r), new Pn(t.firestore, t instanceof $n ? t.converter : null, new rt(r));\n  }\n}\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\n\n\nfunction xn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), (t instanceof Pn || t instanceof $n) && (e instanceof Pn || e instanceof $n) && t.firestore === e.firestore && t.path === e.path && t.converter === e.converter;\n}\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\n\n\nfunction Sn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), t instanceof Vn && e instanceof Vn && t.firestore === e.firestore && Te(t._query, e._query) && t.converter === e.converter;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An immutable object representing an array of bytes.\n */\n\n\nclass qn {\n  /** @hideconstructor */\n  constructor(t) {\n    this._byteString = t;\n  }\n  /**\n   * Creates a new `Bytes` object from the given Base64 string, converting it to\n   * bytes.\n   *\n   * @param base64 - The Base64 string used to create the `Bytes` object.\n   */\n\n\n  static fromBase64String(t) {\n    try {\n      return new qn(It.fromBase64String(t));\n    } catch (t) {\n      throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n    }\n  }\n  /**\n   * Creates a new `Bytes` object from the given Uint8Array.\n   *\n   * @param array - The Uint8Array used to create the `Bytes` object.\n   */\n\n\n  static fromUint8Array(t) {\n    return new qn(It.fromUint8Array(t));\n  }\n  /**\n   * Returns the underlying bytes as a Base64-encoded string.\n   *\n   * @returns The Base64-encoded string created from the `Bytes` object.\n   */\n\n\n  toBase64() {\n    return this._byteString.toBase64();\n  }\n  /**\n   * Returns the underlying bytes in a new `Uint8Array`.\n   *\n   * @returns The Uint8Array created from the `Bytes` object.\n   */\n\n\n  toUint8Array() {\n    return this._byteString.toUint8Array();\n  }\n  /**\n   * Returns a string representation of the `Bytes` object.\n   *\n   * @returns A string representation of the `Bytes` object.\n   */\n\n\n  toString() {\n    return \"Bytes(base64: \" + this.toBase64() + \")\";\n  }\n  /**\n   * Returns true if this `Bytes` object is equal to the provided one.\n   *\n   * @param other - The `Bytes` object to compare against.\n   * @returns true if this `Bytes` object is equal to the provided one.\n   */\n\n\n  isEqual(t) {\n    return this._byteString.isEqual(t._byteString);\n  }\n\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */\n\n\nclass On {\n  /**\n   * Creates a `FieldPath` from the provided field names. If more than one field\n   * name is provided, the path will point to a nested field in a document.\n   *\n   * @param fieldNames - A list of field names.\n   */\n  constructor() {\n    for (var _len7 = arguments.length, t = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      t[_key7] = arguments[_key7];\n    }\n\n    for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n\n    this._internalPath = new nt(t);\n  }\n  /**\n   * Returns true if this `FieldPath` is equal to the provided one.\n   *\n   * @param other - The `FieldPath` to compare against.\n   * @returns true if this `FieldPath` is equal to the provided one.\n   */\n\n\n  isEqual(t) {\n    return this._internalPath.isEqual(t._internalPath);\n  }\n\n}\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */\n\n\nfunction kn() {\n  return new On(\"__name__\");\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */\n\n\nclass Cn {\n  /**\n   * @param _methodName - The public API endpoint that returns this class.\n   * @hideconstructor\n   */\n  constructor(t) {\n    this._methodName = t;\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */\n\n\nclass Ln {\n  /**\n   * Creates a new immutable `GeoPoint` object with the provided latitude and\n   * longitude values.\n   * @param latitude - The latitude as number between -90 and 90.\n   * @param longitude - The longitude as number between -180 and 180.\n   */\n  constructor(t, e) {\n    if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n    if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n    this._lat = t, this._long = e;\n  }\n  /**\n   * The latitude of this `GeoPoint` instance.\n   */\n\n\n  get latitude() {\n    return this._lat;\n  }\n  /**\n   * The longitude of this `GeoPoint` instance.\n   */\n\n\n  get longitude() {\n    return this._long;\n  }\n  /**\n   * Returns true if this `GeoPoint` is equal to the provided one.\n   *\n   * @param other - The `GeoPoint` to compare against.\n   * @returns true if this `GeoPoint` is equal to the provided one.\n   */\n\n\n  isEqual(t) {\n    return this._lat === t._lat && this._long === t._long;\n  }\n  /** Returns a JSON-serializable representation of this GeoPoint. */\n\n\n  toJSON() {\n    return {\n      latitude: this._lat,\n      longitude: this._long\n    };\n  }\n  /**\n   * Actually private to JS consumers of our API, so this function is prefixed\n   * with an underscore.\n   */\n\n\n  _compareTo(t) {\n    return _t(this._lat, t._lat) || _t(this._long, t._long);\n  }\n\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst Mn = /^__.*__$/;\n/** The result of parsing document data (e.g. for a setData call). */\n\nclass Un {\n  constructor(t, e, n) {\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n\n  toMutation(t, e) {\n    return null !== this.fieldMask ? new qe(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Se(t, this.data, e, this.fieldTransforms);\n  }\n\n}\n/** The result of parsing \"update\" data (i.e. for an updateData call). */\n\n\nclass jn {\n  constructor(t, // The fieldMask does not include document transforms.\n  e, n) {\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n\n  toMutation(t, e) {\n    return new qe(t, this.data, this.fieldMask, e, this.fieldTransforms);\n  }\n\n}\n\nfunction Bn(t) {\n  switch (t) {\n    case 0\n    /* UserDataSource.Set */\n    : // fall through\n\n    case 2\n    /* UserDataSource.MergeSet */\n    : // fall through\n\n    case 1\n    /* UserDataSource.Update */\n    :\n      return !0;\n\n    case 3\n    /* UserDataSource.Argument */\n    :\n    case 4\n    /* UserDataSource.ArrayArgument */\n    :\n      return !1;\n\n    default:\n      throw b();\n  }\n}\n/** A \"context\" object passed around while parsing user data. */\n\n\nclass Qn {\n  /**\n   * Initializes a ParseContext with the given source and path.\n   *\n   * @param settings - The settings for the parser.\n   * @param databaseId - The database ID of the Firestore instance.\n   * @param serializer - The serializer to use to generate the Value proto.\n   * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n   * rather than throw.\n   * @param fieldTransforms - A mutable list of field transforms encountered\n   * while parsing the data.\n   * @param fieldMask - A mutable list of field paths encountered while parsing\n   * the data.\n   *\n   * TODO(b/34871131): We don't support array paths right now, so path can be\n   * null to indicate the context represents any location within an array (in\n   * which case certain features will not work and errors will be somewhat\n   * compromised).\n   */\n  constructor(t, e, n, r, s, i) {\n    this.settings = t, this.databaseId = e, this.C = n, this.ignoreUndefinedProperties = r, // Minor hack: If fieldTransforms is undefined, we assume this is an\n    // external call and we need to validate the entire path.\n    void 0 === s && this.et(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n  }\n\n  get path() {\n    return this.settings.path;\n  }\n\n  get nt() {\n    return this.settings.nt;\n  }\n  /** Returns a new context with the specified settings overwritten. */\n\n\n  rt(t) {\n    return new Qn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.C, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n  }\n\n  st(t) {\n    var e;\n    const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n          r = this.rt({\n      path: n,\n      it: !1\n    });\n    return r.ot(t), r;\n  }\n\n  ut(t) {\n    var e;\n    const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n          r = this.rt({\n      path: n,\n      it: !1\n    });\n    return r.et(), r;\n  }\n\n  ct(t) {\n    // TODO(b/34871131): We don't support array paths right now; so make path\n    // undefined.\n    return this.rt({\n      path: void 0,\n      it: !0\n    });\n  }\n\n  at(t) {\n    return hr(t, this.settings.methodName, this.settings.ht || !1, this.path, this.settings.lt);\n  }\n  /** Returns 'true' if 'fieldPath' was traversed when creating this context. */\n\n\n  contains(t) {\n    return void 0 !== this.fieldMask.find(e => t.isPrefixOf(e)) || void 0 !== this.fieldTransforms.find(e => t.isPrefixOf(e.field));\n  }\n\n  et() {\n    // TODO(b/34871131): Remove null check once we have proper paths for fields\n    // within arrays.\n    if (this.path) for (let t = 0; t < this.path.length; t++) this.ot(this.path.get(t));\n  }\n\n  ot(t) {\n    if (0 === t.length) throw this.at(\"Document fields must not be empty\");\n    if (Bn(this.nt) && Mn.test(t)) throw this.at('Document fields cannot begin and end with \"__\"');\n  }\n\n}\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */\n\n\nclass zn {\n  constructor(t, e, n) {\n    this.databaseId = t, this.ignoreUndefinedProperties = e, this.C = n || an(t);\n  }\n  /** Creates a new top-level parse context. */\n\n\n  ft(t, e, n) {\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n    return new Qn({\n      nt: t,\n      methodName: e,\n      lt: n,\n      path: nt.emptyPath(),\n      it: !1,\n      ht: r\n    }, this.databaseId, this.C, this.ignoreUndefinedProperties);\n  }\n\n}\n\nfunction Wn(t) {\n  const e = t._freezeSettings(),\n        n = an(t._databaseId);\n\n  return new zn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n/** Parse document data from a set() call. */\n\n\nfunction Gn(t, e, n, r, s) {\n  let i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  const o = t.ft(i.merge || i.mergeFields ? 2\n  /* UserDataSource.MergeSet */\n  : 0\n  /* UserDataSource.Set */\n  , e, n, s);\n  or(\"Data must be an object, but it was:\", o, r);\n  const u = sr(r, o);\n  let c, a;\n  if (i.merge) c = new fe(o.fieldMask), a = o.fieldTransforms;else if (i.mergeFields) {\n    const t = [];\n\n    for (const r of i.mergeFields) {\n      const s = ur(e, r, n);\n      if (!o.contains(s)) throw new U(P, `Field '${s}' is specified in your field mask but missing from your input data.`);\n      lr(t, s) || t.push(s);\n    }\n\n    c = new fe(t), a = o.fieldTransforms.filter(t => c.covers(t.field));\n  } else c = null, a = o.fieldTransforms;\n  return new Un(new de(u), c, a);\n}\n\nclass Kn extends Cn {\n  _toFieldTransform(t) {\n    if (2\n    /* UserDataSource.MergeSet */\n    !== t.nt) throw 1\n    /* UserDataSource.Update */\n    === t.nt ? t.at(`${this._methodName}() can only appear at the top level of your update data`) : t.at(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`); // No transform to add for a delete, but we need to add it to our\n    // fieldMask so it gets deleted.\n\n    return t.fieldMask.push(t.path), null;\n  }\n\n  isEqual(t) {\n    return t instanceof Kn;\n  }\n\n}\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */\n\n\nfunction Yn(t, e, n) {\n  return new Qn({\n    nt: 3\n    /* UserDataSource.Argument */\n    ,\n    lt: e.settings.lt,\n    methodName: t._methodName,\n    it: n\n  }, e.databaseId, e.C, e.ignoreUndefinedProperties);\n}\n\nclass Hn extends Cn {\n  _toFieldTransform(t) {\n    return new De(t.path, new Pe());\n  }\n\n  isEqual(t) {\n    return t instanceof Hn;\n  }\n\n}\n\nclass Jn extends Cn {\n  constructor(t, e) {\n    super(t), this.dt = e;\n  }\n\n  _toFieldTransform(t) {\n    const e = Yn(this, t,\n    /*array=*/\n    !0),\n          n = this.dt.map(t => rr(t, e)),\n          r = new Ve(n);\n    return new De(t.path, r);\n  }\n\n  isEqual(t) {\n    // TODO(mrschmidt): Implement isEquals\n    return this === t;\n  }\n\n}\n\nclass Xn extends Cn {\n  constructor(t, e) {\n    super(t), this.dt = e;\n  }\n\n  _toFieldTransform(t) {\n    const e = Yn(this, t,\n    /*array=*/\n    !0),\n          n = this.dt.map(t => rr(t, e)),\n          r = new $e(n);\n    return new De(t.path, r);\n  }\n\n  isEqual(t) {\n    // TODO(mrschmidt): Implement isEquals\n    return this === t;\n  }\n\n}\n\nclass Zn extends Cn {\n  constructor(t, e) {\n    super(t), this.wt = e;\n  }\n\n  _toFieldTransform(t) {\n    const e = new Ne(t.C, Ae(t.C, this.wt));\n    return new De(t.path, e);\n  }\n\n  isEqual(t) {\n    // TODO(mrschmidt): Implement isEquals\n    return this === t;\n  }\n\n}\n/** Parse update data from an update() call. */\n\n\nfunction tr(t, e, n, r) {\n  const s = t.ft(1\n  /* UserDataSource.Update */\n  , e, n);\n  or(\"Data must be an object, but it was:\", s, r);\n  const i = [],\n        o = de.empty();\n  Et(r, (t, r) => {\n    const u = ar(e, t, n); // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n\n    r = getModularInstance(r);\n    const c = s.ut(u);\n    if (r instanceof Kn) // Add it to the field mask, but don't add anything to updateData.\n      i.push(u);else {\n      const t = rr(r, c);\n      null != t && (i.push(u), o.set(u, t));\n    }\n  });\n  const u = new fe(i);\n  return new jn(o, u, s.fieldTransforms);\n}\n/** Parse update data from a list of field/value arguments. */\n\n\nfunction er(t, e, n, r, s, i) {\n  const o = t.ft(1\n  /* UserDataSource.Update */\n  , e, n),\n        u = [ur(e, r, n)],\n        c = [s];\n  if (i.length % 2 != 0) throw new U(P, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n\n  for (let t = 0; t < i.length; t += 2) u.push(ur(e, i[t])), c.push(i[t + 1]);\n\n  const a = [],\n        h = de.empty(); // We iterate in reverse order to pick the last value for a field if the\n  // user specified the field multiple times.\n\n  for (let t = u.length - 1; t >= 0; --t) if (!lr(a, u[t])) {\n    const e = u[t];\n    let n = c[t]; // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n\n    n = getModularInstance(n);\n    const r = o.ut(e);\n    if (n instanceof Kn) // Add it to the field mask, but don't add anything to updateData.\n      a.push(e);else {\n      const t = rr(n, r);\n      null != t && (a.push(e), h.set(e, t));\n    }\n  }\n\n  const f = new fe(a);\n  return new jn(h, f, o.fieldTransforms);\n}\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */\n\n\nfunction nr(t, e, n) {\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n  return rr(n, t.ft(r ? 4\n  /* UserDataSource.ArrayArgument */\n  : 3\n  /* UserDataSource.Argument */\n  , e));\n}\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */\n\n\nfunction rr(t, e) {\n  if (ir( // Unwrap the API type from the Compat SDK. This will return the API type\n  // from firestore-exp.\n  t = getModularInstance(t))) return or(\"Unsupported field value:\", e, t), sr(t, e);\n  if (t instanceof Cn) // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n\n    /**\n    * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n    * context.fieldTransforms.\n    */\n    return function (t, e) {\n      // Sentinels are only supported with writes, and not within arrays.\n      if (!Bn(e.nt)) throw e.at(`${t._methodName}() can only be used with update() and set()`);\n      if (!e.path) throw e.at(`${t._methodName}() is not currently supported inside arrays`);\n\n      const n = t._toFieldTransform(e);\n\n      n && e.fieldTransforms.push(n);\n    }\n    /**\n    * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n    *\n    * @returns The parsed value\n    */\n    (t, e), null;\n  if (void 0 === t && e.ignoreUndefinedProperties) // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n\n  if ( // If context.path is null we are inside an array and we don't support\n  // field mask paths more granular than the top-level array.\n  e.path && e.fieldMask.push(e.path), t instanceof Array) {\n    // TODO(b/34871131): Include the path containing the array in the error\n    // message.\n    // In the case of IN queries, the parsed data is an array (representing\n    // the set of values to be included for the IN query) that may directly\n    // contain additional arrays (each representing an individual field\n    // value), so we disable this validation.\n    if (e.settings.it && 4\n    /* UserDataSource.ArrayArgument */\n    !== e.nt) throw e.at(\"Nested arrays are not supported\");\n    return function (t, e) {\n      const n = [];\n      let r = 0;\n\n      for (const s of t) {\n        let t = rr(s, e.ct(r));\n        null == t && ( // Just include nulls in the array for fields being replaced with a\n        // sentinel.\n        t = {\n          nullValue: \"NULL_VALUE\"\n        }), n.push(t), r++;\n      }\n\n      return {\n        arrayValue: {\n          values: n\n        }\n      };\n    }(t, e);\n  }\n\n  return function (t, e) {\n    if (null === (t = getModularInstance(t))) return {\n      nullValue: \"NULL_VALUE\"\n    };\n    if (\"number\" == typeof t) return Ae(e.C, t);\n    if (\"boolean\" == typeof t) return {\n      booleanValue: t\n    };\n    if (\"string\" == typeof t) return {\n      stringValue: t\n    };\n\n    if (t instanceof Date) {\n      const n = Vt.fromDate(t);\n      return {\n        timestampValue: je(e.C, n)\n      };\n    }\n\n    if (t instanceof Vt) {\n      // Firestore backend truncates precision down to microseconds. To ensure\n      // offline mode works the same with regards to truncation, perform the\n      // truncation immediately without waiting for the backend to do that.\n      const n = new Vt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n      return {\n        timestampValue: je(e.C, n)\n      };\n    }\n\n    if (t instanceof Ln) return {\n      geoPointValue: {\n        latitude: t.latitude,\n        longitude: t.longitude\n      }\n    };\n    if (t instanceof qn) return {\n      bytesValue: Be(e.C, t._byteString)\n    };\n\n    if (t instanceof Pn) {\n      const n = e.databaseId,\n            r = t.firestore._databaseId;\n      if (!r.isEqual(n)) throw e.at(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n      return {\n        referenceValue: We(t.firestore._databaseId || e.databaseId, t._key.path)\n      };\n    }\n\n    throw e.at(`Unsupported field value: ${ut(t)}`);\n  }\n  /**\n  * Checks whether an object looks like a JSON object that should be converted\n  * into a struct. Normal class/prototype instances are considered to look like\n  * JSON objects since they should be converted to a struct value. Arrays, Dates,\n  * GeoPoints, etc. are not considered to look like JSON objects since they map\n  * to specific FieldValue types other than ObjectValue.\n  */\n  (t, e);\n}\n\nfunction sr(t, e) {\n  const n = {};\n  return !function (t) {\n    for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n\n    return !0;\n  }\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  /** Converts a Base64 encoded string to a binary string. */\n  (t) ? Et(t, (t, r) => {\n    const s = rr(r, e.st(t));\n    null != s && (n[t] = s);\n  }) : // If we encounter an empty object, we explicitly add it to the update\n  // mask to ensure that the server creates a map entry.\n  e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n    mapValue: {\n      fields: n\n    }\n  };\n}\n\nfunction ir(t) {\n  return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof Vt || t instanceof Ln || t instanceof qn || t instanceof Pn || t instanceof Cn);\n}\n\nfunction or(t, e, n) {\n  if (!ir(n) || !function (t) {\n    return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n  }(n)) {\n    const r = ut(n);\n    throw \"an object\" === r ? e.at(t + \" a custom object\") : e.at(t + \" \" + r);\n  }\n}\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */\n\n\nfunction ur(t, e, n) {\n  if (( // If required, replace the FieldPath Compat class with with the firestore-exp\n  // FieldPath.\n  e = getModularInstance(e)) instanceof On) return e._internalPath;\n  if (\"string\" == typeof e) return ar(t, e);\n  throw hr(\"Field path arguments must be of type string or \", t,\n  /* hasConverter= */\n  !1,\n  /* path= */\n  void 0, n);\n}\n/**\n * Matches any characters in a field path string that are reserved.\n */\n\n\nconst cr = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */\n\nfunction ar(t, e, n) {\n  if (e.search(cr) >= 0) throw hr(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t,\n  /* hasConverter= */\n  !1,\n  /* path= */\n  void 0, n);\n\n  try {\n    return new On(...e.split(\".\"))._internalPath;\n  } catch (r) {\n    throw hr(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t,\n    /* hasConverter= */\n    !1,\n    /* path= */\n    void 0, n);\n  }\n}\n\nfunction hr(t, e, n, r, s) {\n  const i = r && !r.isEmpty(),\n        o = void 0 !== s;\n  let u = `Function ${e}() called with invalid data`;\n  n && (u += \" (via `toFirestore()`)\"), u += \". \";\n  let c = \"\";\n  return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), c += \")\"), new U(P, u + t + c);\n}\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */\n\n\nfunction lr(t, e) {\n  return t.some(t => t.isEqual(e));\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */\n\n\nclass fr {\n  // Note: This class is stripped down version of the DocumentSnapshot in\n  // the legacy SDK. The changes are:\n  // - No support for SnapshotMetadata.\n  // - No support for SnapshotOptions.\n\n  /** @hideconstructor protected */\n  constructor(t, e, n, r, s) {\n    this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, this._converter = s;\n  }\n  /** Property of the `DocumentSnapshot` that provides the document's ID. */\n\n\n  get id() {\n    return this._key.path.lastSegment();\n  }\n  /**\n   * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n   */\n\n\n  get ref() {\n    return new Pn(this._firestore, this._converter, this._key);\n  }\n  /**\n   * Signals whether or not the document at the snapshot's location exists.\n   *\n   * @returns true if the document exists.\n   */\n\n\n  exists() {\n    return null !== this._document;\n  }\n  /**\n   * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n   * the document doesn't exist.\n   *\n   * @returns An `Object` containing all fields in the document or `undefined`\n   * if the document doesn't exist.\n   */\n\n\n  data() {\n    if (this._document) {\n      if (this._converter) {\n        // We only want to use the converter and create a new DocumentSnapshot\n        // if a converter has been provided.\n        const t = new dr(this._firestore, this._userDataWriter, this._key, this._document,\n        /* converter= */\n        null);\n        return this._converter.fromFirestore(t);\n      }\n\n      return this._userDataWriter.convertValue(this._document.data.value);\n    }\n  }\n  /**\n   * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n   * document or field doesn't exist.\n   *\n   * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n   * field.\n   * @returns The data at the specified field location or undefined if no such\n   * field exists in the document.\n   */\n  // We are using `any` here to avoid an explicit cast by our users.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  get(t) {\n    if (this._document) {\n      const e = this._document.data.field(pr(\"DocumentSnapshot.get\", t));\n\n      if (null !== e) return this._userDataWriter.convertValue(e);\n    }\n  }\n\n}\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */\n\n\nclass dr extends fr {\n  /**\n   * Retrieves all fields in the document as an `Object`.\n   *\n   * @override\n   * @returns An `Object` containing all fields in the document.\n   */\n  data() {\n    return super.data();\n  }\n\n}\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */\n\n\nclass wr {\n  /** @hideconstructor */\n  constructor(t, e) {\n    this._docs = e, this.query = t;\n  }\n  /** An array of all the documents in the `QuerySnapshot`. */\n\n\n  get docs() {\n    return [...this._docs];\n  }\n  /** The number of documents in the `QuerySnapshot`. */\n\n\n  get size() {\n    return this.docs.length;\n  }\n  /** True if there are no documents in the `QuerySnapshot`. */\n\n\n  get empty() {\n    return 0 === this.docs.length;\n  }\n  /**\n   * Enumerates all of the documents in the `QuerySnapshot`.\n   *\n   * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n   * each document in the snapshot.\n   * @param thisArg - The `this` binding for the callback.\n   */\n\n\n  forEach(t, e) {\n    this._docs.forEach(t, e);\n  }\n\n}\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */\n\n\nfunction mr(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), t instanceof fr && e instanceof fr ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof wr && e instanceof wr && Sn(t.query, e.query) && vt(t.docs, e.docs, mr);\n}\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */\n\n\nfunction pr(t, e) {\n  return \"string\" == typeof e ? ar(t, e) : e instanceof On ? e._internalPath : e._delegate._internalPath;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\n\n\nclass yr {}\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link startAt}, {@link startAfter}, {@link\n * endBefore}, {@link endAt}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\n\n\nclass gr extends yr {}\n\nfunction _r(t, e) {\n  let r = [];\n\n  for (var _len8 = arguments.length, n = new Array(_len8 > 2 ? _len8 - 2 : 0), _key8 = 2; _key8 < _len8; _key8++) {\n    n[_key8 - 2] = arguments[_key8];\n  }\n\n  e instanceof yr && r.push(e), r = r.concat(n), function (t) {\n    const e = t.filter(t => t instanceof Er).length,\n          n = t.filter(t => t instanceof vr).length;\n    if (e > 1 || e > 0 && n > 0) throw new U(P, \"InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.\");\n  }\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  /**\n  * Converts Firestore's internal types to the JavaScript types that we expose\n  * to the user.\n  *\n  * @internal\n  */\n  (r);\n\n  for (const e of r) t = e._apply(t);\n\n  return t;\n}\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link query} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */\n\n\nclass vr extends gr {\n  /**\n   * @internal\n   */\n  constructor(t, e, n) {\n    super(), this._field = t, this._op = e, this._value = n,\n    /** The type of this query constraint */\n    this.type = \"where\";\n  }\n\n  static _create(t, e, n) {\n    return new vr(t, e, n);\n  }\n\n  _apply(t) {\n    const e = this._parse(t);\n\n    return Lr(t._query, e), new Vn(t.firestore, t.converter, Ie(t._query, e));\n  }\n\n  _parse(t) {\n    const e = Wn(t.firestore),\n          n = function (t, e, n, r, s, i, o) {\n      let u;\n\n      if (s.isKeyField()) {\n        if (\"array-contains\"\n        /* Operator.ARRAY_CONTAINS */\n        === i || \"array-contains-any\"\n        /* Operator.ARRAY_CONTAINS_ANY */\n        === i) throw new U(P, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n\n        if (\"in\"\n        /* Operator.IN */\n        === i || \"not-in\"\n        /* Operator.NOT_IN */\n        === i) {\n          Cr(o, i);\n          const e = [];\n\n          for (const n of o) e.push(kr(r, t, n));\n\n          u = {\n            arrayValue: {\n              values: e\n            }\n          };\n        } else u = kr(r, t, o);\n      } else \"in\"\n      /* Operator.IN */\n      !== i && \"not-in\"\n      /* Operator.NOT_IN */\n      !== i && \"array-contains-any\"\n      /* Operator.ARRAY_CONTAINS_ANY */\n      !== i || Cr(o, i), u = nr(n, e, o,\n      /* allowArrays= */\n      \"in\"\n      /* Operator.IN */\n      === i || \"not-in\"\n      /* Operator.NOT_IN */\n      === i);\n\n      return Gt.create(s, i, u);\n    }(t._query, \"where\", e, t.firestore._databaseId, this._field, this._op, this._value);\n\n    return n;\n  }\n\n}\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */\n\n\nfunction br(t, e, n) {\n  const r = e,\n        s = pr(\"where\", t);\n  return vr._create(s, r, n);\n}\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link query} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n * @internal TODO remove this internal tag with OR Query support in the server\n */\n\n\nclass Er extends yr {\n  /**\n   * @internal\n   */\n  constructor(\n  /** The type of this query constraint */\n  t, e) {\n    super(), this.type = t, this._queryConstraints = e;\n  }\n\n  static _create(t, e) {\n    return new Er(t, e);\n  }\n\n  _parse(t) {\n    const e = this._queryConstraints.map(e => e._parse(t)).filter(t => t.getFilters().length > 0);\n\n    return 1 === e.length ? e[0] : Kt.create(e, this._getOperator());\n  }\n\n  _apply(t) {\n    const e = this._parse(t);\n\n    return 0 === e.getFilters().length ? t : (function (t, e) {\n      let n = t;\n      const r = e.getFlattenedFilters();\n\n      for (const t of r) Lr(n, t), n = Ie(n, t);\n    } // Checks if any of the provided filter operators are included in the given list of filters and\n    // returns the first one that is, or null if none are.\n    (t._query, e), new Vn(t.firestore, t.converter, Ie(t._query, e)));\n  }\n\n  _getQueryConstraints() {\n    return this._queryConstraints;\n  }\n\n  _getOperator() {\n    return \"and\" === this.type ? \"and\"\n    /* CompositeOperator.AND */\n    : \"or\"\n    /* CompositeOperator.OR */\n    ;\n  }\n\n}\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a disjunction of\n * the given filter constraints. A disjunction filter includes a document if it\n * satisfies any of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a disjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */\n\n\nfunction Ir() {\n  for (var _len9 = arguments.length, t = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n    t[_key9] = arguments[_key9];\n  }\n\n  // Only support QueryFilterConstraints\n  return t.forEach(t => Ur(\"or\", t)), Er._create(\"or\"\n  /* CompositeOperator.OR */\n  , t);\n}\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a conjunction of\n * the given filter constraints. A conjunction filter includes a document if it\n * satisfies all of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a conjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */\n\n\nfunction Tr() {\n  for (var _len10 = arguments.length, t = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n    t[_key10] = arguments[_key10];\n  }\n\n  // Only support QueryFilterConstraints\n  return t.forEach(t => Ur(\"and\", t)), Er._create(\"and\"\n  /* CompositeOperator.AND */\n  , t);\n}\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link query} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */\n\n\nclass Ar extends gr {\n  /**\n   * @internal\n   */\n  constructor(t, e) {\n    super(), this._field = t, this._direction = e,\n    /** The type of this query constraint */\n    this.type = \"orderBy\";\n  }\n\n  static _create(t, e) {\n    return new Ar(t, e);\n  }\n\n  _apply(t) {\n    const e = function (t, e, n) {\n      if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n      if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n      const r = new se(e, n);\n      return function (t, e) {\n        if (null === ge(t)) {\n          // This is the first order by. It must match any inequality.\n          const n = _e(t);\n\n          null !== n && Mr(t, n, e.field);\n        }\n      }(t, r), r;\n    }\n    /**\n    * Create a `Bound` from a query and a document.\n    *\n    * Note that the `Bound` will always include the key of the document\n    * and so only the provided document will compare equal to the returned\n    * position.\n    *\n    * Will throw if the document does not contain all fields of the order by\n    * of the query or if any of the fields in the order by are an uncommitted\n    * server timestamp.\n    */\n    (t._query, this._field, this._direction);\n\n    return new Vn(t.firestore, t.converter, function (t, e) {\n      // TODO(dimond): validate that orderBy does not list the same key twice.\n      const n = t.explicitOrderBy.concat([e]);\n      return new ye(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n    }(t._query, e));\n  }\n\n}\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */\n\n\nfunction Rr(t) {\n  let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n  const n = e,\n        r = pr(\"orderBy\", t);\n  return Ar._create(r, n);\n}\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */\n\n\nclass Pr extends gr {\n  /**\n   * @internal\n   */\n  constructor(\n  /** The type of this query constraint */\n  t, e, n) {\n    super(), this.type = t, this._limit = e, this._limitType = n;\n  }\n\n  static _create(t, e, n) {\n    return new Pr(t, e, n);\n  }\n\n  _apply(t) {\n    return new Vn(t.firestore, t.converter, function (t, e, n) {\n      return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n    }(t._query, this._limit, this._limitType));\n  }\n\n}\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */\n\n\nfunction Vr(t) {\n  return at(\"limit\", t), Pr._create(\"limit\", t, \"F\"\n  /* LimitType.First */\n  );\n}\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */\n\n\nfunction $r(t) {\n  return at(\"limitToLast\", t), Pr._create(\"limitToLast\", t, \"L\"\n  /* LimitType.Last */\n  );\n}\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link query} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */\n\n\nclass Nr extends gr {\n  /**\n   * @internal\n   */\n  constructor(\n  /** The type of this query constraint */\n  t, e, n) {\n    super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n  }\n\n  static _create(t, e, n) {\n    return new Nr(t, e, n);\n  }\n\n  _apply(t) {\n    const e = Or(t, this.type, this._docOrFields, this._inclusive);\n    return new Vn(t.firestore, t.converter, function (t, e) {\n      return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n    }(t._query, e));\n  }\n\n}\n\nfunction Dr() {\n  for (var _len11 = arguments.length, t = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n    t[_key11] = arguments[_key11];\n  }\n\n  return Nr._create(\"startAt\", t,\n  /*inclusive=*/\n  !0);\n}\n\nfunction Fr() {\n  for (var _len12 = arguments.length, t = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n    t[_key12] = arguments[_key12];\n  }\n\n  return Nr._create(\"startAfter\", t,\n  /*inclusive=*/\n  !1);\n}\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */\n\n\nclass xr extends gr {\n  /**\n   * @internal\n   */\n  constructor(\n  /** The type of this query constraint */\n  t, e, n) {\n    super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n  }\n\n  static _create(t, e, n) {\n    return new xr(t, e, n);\n  }\n\n  _apply(t) {\n    const e = Or(t, this.type, this._docOrFields, this._inclusive);\n    return new Vn(t.firestore, t.converter, function (t, e) {\n      return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n    }(t._query, e));\n  }\n\n}\n\nfunction Sr() {\n  for (var _len13 = arguments.length, t = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n    t[_key13] = arguments[_key13];\n  }\n\n  return xr._create(\"endBefore\", t,\n  /*inclusive=*/\n  !1);\n}\n\nfunction qr() {\n  for (var _len14 = arguments.length, t = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {\n    t[_key14] = arguments[_key14];\n  }\n\n  return xr._create(\"endAt\", t,\n  /*inclusive=*/\n  !0);\n}\n/** Helper function to create a bound from a document or fields */\n\n\nfunction Or(t, e, n, r) {\n  if (n[0] = getModularInstance(n[0]), n[0] instanceof fr) return function (t, e, n, r, s) {\n    if (!r) throw new U($, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n    const i = []; // Because people expect to continue/end a query at the exact document\n    // provided, we need to use the implicit sort order rather than the explicit\n    // sort order, because it's guaranteed to contain the document key. That way\n    // the position becomes unambiguous and the query continues/ends exactly at\n    // the provided document. Without the key (by using the explicit sort\n    // orders), multiple documents could match the position, yielding duplicate\n    // results.\n\n    for (const n of be(t)) if (n.field.isKeyField()) i.push(Ct(e, r.key));else {\n      const t = r.data.field(n.field);\n      if ($t(t)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n\n      if (null === t) {\n        const t = n.field.canonicalString();\n        throw new U(P, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n      }\n\n      i.push(t);\n    }\n\n    return new Qt(i, s);\n  }\n  /**\n  * Converts a list of field values to a `Bound` for the given query.\n  */\n  (t._query, t.firestore._databaseId, e, n[0]._document, r);\n  {\n    const s = Wn(t.firestore);\n    return function (t, e, n, r, s, i) {\n      // Use explicit order by's because it has to match the query the user made\n      const o = t.explicitOrderBy;\n      if (s.length > o.length) throw new U(P, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n      const u = [];\n\n      for (let i = 0; i < s.length; i++) {\n        const c = s[i];\n\n        if (o[i].field.isKeyField()) {\n          if (\"string\" != typeof c) throw new U(P, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n          if (!ve(t) && -1 !== c.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n          const n = t.path.child(tt.fromString(c));\n          if (!rt.isDocumentKey(n)) throw new U(P, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n          const s = new rt(n);\n          u.push(Ct(e, s));\n        } else {\n          const t = nr(n, r, c);\n          u.push(t);\n        }\n      }\n\n      return new Qt(u, i);\n    }\n    /**\n    * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n    * appropriate errors if the value is anything other than a `DocumentReference`\n    * or `string`, or if the string is malformed.\n    */\n    (t._query, t.firestore._databaseId, s, e, n, r);\n  }\n}\n\nfunction kr(t, e, n) {\n  if (\"string\" == typeof (n = getModularInstance(n))) {\n    if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n    if (!ve(e) && -1 !== n.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n    const r = e.path.child(tt.fromString(n));\n    if (!rt.isDocumentKey(r)) throw new U(P, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n    return Ct(t, new rt(r));\n  }\n\n  if (n instanceof Pn) return Ct(t, n._key);\n  throw new U(P, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${ut(n)}.`);\n}\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */\n\n\nfunction Cr(t, e) {\n  if (!Array.isArray(t) || 0 === t.length) throw new U(P, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n  if (t.length > 10) throw new U(P, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */\n\n\nfunction Lr(t, e) {\n  if (e.isInequality()) {\n    const n = _e(t),\n          r = e.field;\n\n    if (null !== n && !n.isEqual(r)) throw new U(P, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${r.toString()}'`);\n    const s = ge(t);\n    null !== s && Mr(t, r, s);\n  }\n\n  const n = function (t, e) {\n    for (const n of t) for (const t of n.getFlattenedFilters()) if (e.indexOf(t.op) >= 0) return t.op;\n\n    return null;\n  }(t.filters, function (t) {\n    switch (t) {\n      case \"!=\"\n      /* Operator.NOT_EQUAL */\n      :\n        return [\"!=\"\n        /* Operator.NOT_EQUAL */\n        , \"not-in\"\n        /* Operator.NOT_IN */\n        ];\n\n      case \"array-contains\"\n      /* Operator.ARRAY_CONTAINS */\n      :\n        return [\"array-contains\"\n        /* Operator.ARRAY_CONTAINS */\n        , \"array-contains-any\"\n        /* Operator.ARRAY_CONTAINS_ANY */\n        , \"not-in\"\n        /* Operator.NOT_IN */\n        ];\n\n      case \"in\"\n      /* Operator.IN */\n      :\n        return [\"array-contains-any\"\n        /* Operator.ARRAY_CONTAINS_ANY */\n        , \"in\"\n        /* Operator.IN */\n        , \"not-in\"\n        /* Operator.NOT_IN */\n        ];\n\n      case \"array-contains-any\"\n      /* Operator.ARRAY_CONTAINS_ANY */\n      :\n        return [\"array-contains\"\n        /* Operator.ARRAY_CONTAINS */\n        , \"array-contains-any\"\n        /* Operator.ARRAY_CONTAINS_ANY */\n        , \"in\"\n        /* Operator.IN */\n        , \"not-in\"\n        /* Operator.NOT_IN */\n        ];\n\n      case \"not-in\"\n      /* Operator.NOT_IN */\n      :\n        return [\"array-contains\"\n        /* Operator.ARRAY_CONTAINS */\n        , \"array-contains-any\"\n        /* Operator.ARRAY_CONTAINS_ANY */\n        , \"in\"\n        /* Operator.IN */\n        , \"not-in\"\n        /* Operator.NOT_IN */\n        , \"!=\"\n        /* Operator.NOT_EQUAL */\n        ];\n\n      default:\n        return [];\n    }\n  }(e.op));\n\n  if (null !== n) // Special case when it's a duplicate op to give a slightly clearer error message.\n    throw n === e.op ? new U(P, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(P, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n}\n\nfunction Mr(t, e, n) {\n  if (!n.isEqual(e)) throw new U(P, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\nfunction Ur(t, e) {\n  if (!(e instanceof vr || e instanceof Er)) throw new U(P, `Function ${t}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\n\n\nfunction jr(t, e, n) {\n  let r; // Cast to `any` in order to satisfy the union type constraint on\n  // toFirestore().\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, r;\n}\n\nclass Br extends class {\n  convertValue(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"none\";\n\n    switch (xt(t)) {\n      case 0\n      /* TypeOrder.NullValue */\n      :\n        return null;\n\n      case 1\n      /* TypeOrder.BooleanValue */\n      :\n        return t.booleanValue;\n\n      case 2\n      /* TypeOrder.NumberValue */\n      :\n        return Rt(t.integerValue || t.doubleValue);\n\n      case 3\n      /* TypeOrder.TimestampValue */\n      :\n        return this.convertTimestamp(t.timestampValue);\n\n      case 4\n      /* TypeOrder.ServerTimestampValue */\n      :\n        return this.convertServerTimestamp(t, e);\n\n      case 5\n      /* TypeOrder.StringValue */\n      :\n        return t.stringValue;\n\n      case 6\n      /* TypeOrder.BlobValue */\n      :\n        return this.convertBytes(Pt(t.bytesValue));\n\n      case 7\n      /* TypeOrder.RefValue */\n      :\n        return this.convertReference(t.referenceValue);\n\n      case 8\n      /* TypeOrder.GeoPointValue */\n      :\n        return this.convertGeoPoint(t.geoPointValue);\n\n      case 9\n      /* TypeOrder.ArrayValue */\n      :\n        return this.convertArray(t.arrayValue, e);\n\n      case 10\n      /* TypeOrder.ObjectValue */\n      :\n        return this.convertObject(t.mapValue, e);\n\n      default:\n        throw b();\n    }\n  }\n\n  convertObject(t, e) {\n    const n = {};\n    return Et(t.fields, (t, r) => {\n      n[t] = this.convertValue(r, e);\n    }), n;\n  }\n\n  convertGeoPoint(t) {\n    return new Ln(Rt(t.latitude), Rt(t.longitude));\n  }\n\n  convertArray(t, e) {\n    return (t.values || []).map(t => this.convertValue(t, e));\n  }\n\n  convertServerTimestamp(t, e) {\n    switch (e) {\n      case \"previous\":\n        const n = Nt(t);\n        return null == n ? null : this.convertValue(n, e);\n\n      case \"estimate\":\n        return this.convertTimestamp(Dt(t));\n\n      default:\n        return null;\n    }\n  }\n\n  convertTimestamp(t) {\n    const e = At(t);\n    return new Vt(e.seconds, e.nanos);\n  }\n\n  convertDocumentKey(t, e) {\n    const n = tt.fromString(t);\n    E(cn(n));\n    const r = new X(n.get(1), n.get(3)),\n          s = new rt(n.popFirst(5));\n    return r.isEqual(e) || // TODO(b/64130202): Somehow support foreign references.\n    g(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), s;\n  }\n\n} {\n  constructor(t) {\n    super(), this.firestore = t;\n  }\n\n  convertBytes(t) {\n    return new qn(t);\n  }\n\n  convertReference(t) {\n    const e = this.convertDocumentKey(t, this.firestore._databaseId);\n    return new Pn(this.firestore,\n    /* converter= */\n    null, e);\n  }\n\n}\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */\n\n\nfunction Qr(t) {\n  const e = yn((t = ct(t, Pn)).firestore),\n        n = new Br(t.firestore);\n  return dn(e, [t._key]).then(e => {\n    E(1 === e.length);\n    const r = e[0];\n    return new fr(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n  });\n}\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */\n\n\nfunction zr(t) {\n  !function (t) {\n    if (\"L\"\n    /* LimitType.Last */\n    === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n  }((t = ct(t, Vn))._query);\n  const e = yn(t.firestore),\n        n = new Br(t.firestore);\n  return wn(e, t._query).then(e => {\n    const r = e.map(e => new dr(t.firestore, n, e.key, e, t.converter));\n    return \"L\"\n    /* LimitType.Last */\n    === t._query.limitType && // Limit to last queries reverse the orderBy constraint that was\n    // specified by the user. As such, we need to reverse the order of the\n    // results to return the documents in the expected order.\n    r.reverse(), new wr(t, r);\n  });\n}\n\nfunction Wr(t, e, n) {\n  const r = jr((t = ct(t, Pn)).converter, e, n),\n        s = Gn(Wn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n  return fn(yn(t.firestore), [s.toMutation(t._key, Fe.none())]);\n}\n\nfunction Gr(t, e, n) {\n  const s = Wn((t = ct(t, Pn)).firestore); // For Compat types, we have to \"extract\" the underlying types before\n  // performing validation.\n\n  let i;\n\n  for (var _len15 = arguments.length, r = new Array(_len15 > 3 ? _len15 - 3 : 0), _key15 = 3; _key15 < _len15; _key15++) {\n    r[_key15 - 3] = arguments[_key15];\n  }\n\n  i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof On ? er(s, \"updateDoc\", t._key, e, n, r) : tr(s, \"updateDoc\", t._key, e);\n  return fn(yn(t.firestore), [i.toMutation(t._key, Fe.exists(!0))]);\n}\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */\n\n\nfunction Kr(t) {\n  return fn(yn((t = ct(t, Pn)).firestore), [new Oe(t._key, Fe.none())]);\n}\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */\n\n\nfunction Yr(t, e) {\n  const n = Fn(t = ct(t, $n)),\n        r = jr(t.converter, e),\n        s = Gn(Wn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n  return fn(yn(t.firestore), [s.toMutation(n._key, Fe.exists(!1))]).then(() => n);\n}\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */\n\n\nfunction Hr(t) {\n  const e = ct(t.firestore, _n),\n        n = yn(e),\n        r = new Br(e);\n  return new Rn(t, n, r).run();\n}\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */\n\n\nfunction Jr(t, e) {\n  return Sn(t.query, e.query) && deepEqual(t.data(), e.data());\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */\n\n\nfunction Xr() {\n  return new Kn(\"deleteField\");\n}\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */\n\n\nfunction Zr() {\n  return new Hn(\"serverTimestamp\");\n}\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */\n\n\nfunction ts() {\n  for (var _len16 = arguments.length, t = new Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {\n    t[_key16] = arguments[_key16];\n  }\n\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new Jn(\"arrayUnion\", t);\n}\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\n\n\nfunction es() {\n  for (var _len17 = arguments.length, t = new Array(_len17), _key17 = 0; _key17 < _len17; _key17++) {\n    t[_key17] = arguments[_key17];\n  }\n\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new Xn(\"arrayRemove\", t);\n}\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\n\n\nfunction ns(t) {\n  return new Zn(\"increment\", t);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */\n\n\nclass rs {\n  /** @hideconstructor */\n  constructor(t, e) {\n    this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, this._dataReader = Wn(t);\n  }\n\n  set(t, e, n) {\n    this._verifyNotCommitted();\n\n    const r = ss(t, this._firestore),\n          s = jr(r.converter, e, n),\n          i = Gn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n    return this._mutations.push(i.toMutation(r._key, Fe.none())), this;\n  }\n\n  update(t, e, n) {\n    this._verifyNotCommitted();\n\n    const s = ss(t, this._firestore); // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n\n    let i;\n\n    for (var _len18 = arguments.length, r = new Array(_len18 > 3 ? _len18 - 3 : 0), _key18 = 3; _key18 < _len18; _key18++) {\n      r[_key18 - 3] = arguments[_key18];\n    }\n\n    return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof On ? er(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : tr(this._dataReader, \"WriteBatch.update\", s._key, e), this._mutations.push(i.toMutation(s._key, Fe.exists(!0))), this;\n  }\n  /**\n   * Deletes the document referred to by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be deleted.\n   * @returns This `WriteBatch` instance. Used for chaining method calls.\n   */\n\n\n  delete(t) {\n    this._verifyNotCommitted();\n\n    const e = ss(t, this._firestore);\n    return this._mutations = this._mutations.concat(new Oe(e._key, Fe.none())), this;\n  }\n  /**\n   * Commits all of the writes in this write batch as a single atomic unit.\n   *\n   * The result of these writes will only be reflected in document reads that\n   * occur after the returned promise resolves. If the client is offline, the\n   * write fails. If you would like to see local modifications or buffer writes\n   * until the client is online, use the full Firestore SDK.\n   *\n   * @returns A `Promise` resolved once all of the writes in the batch have been\n   * successfully written to the backend as an atomic unit (note that it won't\n   * resolve while you're offline).\n   */\n\n\n  commit() {\n    return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n  }\n\n  _verifyNotCommitted() {\n    if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n  }\n\n}\n\nfunction ss(t, e) {\n  if ((t = getModularInstance(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n  return t;\n}\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */\n\n\nfunction is(t) {\n  const e = yn(t = ct(t, _n));\n  return new rs(t, t => fn(e, t));\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */\n\n\nclass os {\n  constructor(t) {\n    this.datastore = t, // The version of each document that was read during this transaction.\n    this.readVersions = new Map(), this.mutations = [], this.committed = !1,\n    /**\n     * A deferred usage error that occurred previously in this transaction that\n     * will cause the transaction to fail once it actually commits.\n     */\n    this.lastWriteError = null,\n    /**\n     * Set of documents that have been written in the transaction.\n     *\n     * When there's more than one write to the same key in a transaction, any\n     * writes after the first are handled differently.\n     */\n    this.writtenDocs = new Set();\n  }\n\n  async lookup(t) {\n    if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n    const e = await dn(this.datastore, t);\n    return e.forEach(t => this.recordVersion(t)), e;\n  }\n\n  set(t, e) {\n    this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n  }\n\n  update(t, e) {\n    try {\n      this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n    } catch (t) {\n      this.lastWriteError = t;\n    }\n\n    this.writtenDocs.add(t.toString());\n  }\n\n  delete(t) {\n    this.write(new Oe(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n  }\n\n  async commit() {\n    if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n    const t = this.readVersions; // For each mutation, note that the doc was written.\n\n    this.mutations.forEach(e => {\n      t.delete(e.key.toString());\n    }), // For each document that was read but not written to, we want to perform\n    // a `verify` operation.\n    t.forEach((t, e) => {\n      const n = rt.fromPath(e);\n      this.mutations.push(new ke(n, this.precondition(n)));\n    }), await fn(this.datastore, this.mutations), this.committed = !0;\n  }\n\n  recordVersion(t) {\n    let e;\n    if (t.isFoundDocument()) e = t.version;else {\n      if (!t.isNoDocument()) throw b(); // Represent a deleted doc using SnapshotVersion.min().\n\n      e = oe.min();\n    }\n    const n = this.readVersions.get(t.key.toString());\n\n    if (n) {\n      if (!e.isEqual(n)) // This transaction will fail no matter what.\n        throw new U(q, \"Document version changed between two reads.\");\n    } else this.readVersions.set(t.key.toString(), e);\n  }\n  /**\n   * Returns the version of this document when it was read in this transaction,\n   * as a precondition, or no precondition if it was not read.\n   */\n\n\n  precondition(t) {\n    const e = this.readVersions.get(t.toString());\n    return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(oe.min()) ? Fe.exists(!1) : Fe.updateTime(e) : Fe.none();\n  }\n  /**\n   * Returns the precondition for a document if the operation is an update.\n   */\n\n\n  preconditionForUpdate(t) {\n    const e = this.readVersions.get(t.toString()); // The first time a document is written, we want to take into account the\n    // read time and existence\n\n    if (!this.writtenDocs.has(t.toString()) && e) {\n      if (e.isEqual(oe.min())) // The document doesn't exist, so fail the transaction.\n        // This has to be validated locally because you can't send a\n        // precondition that a document does not exist without changing the\n        // semantics of the backend write to be an insert. This is the reverse\n        // of what we want, since we want to assert that the document doesn't\n        // exist but then send the update and have it fail. Since we can't\n        // express that to the backend, we have to validate locally.\n        // Note: this can change once we can send separate verify writes in the\n        // transaction.\n        throw new U(P, \"Can't update a document that doesn't exist.\"); // Document exists, base precondition on document update time.\n\n      return Fe.updateTime(e);\n    } // Document was not read, so we just use the preconditions for a blind\n    // update.\n\n\n    return Fe.exists(!0);\n  }\n\n  write(t) {\n    this.ensureCommitNotCalled(), this.mutations.push(t);\n  }\n\n  ensureCommitNotCalled() {}\n\n}\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst us = {\n  maxAttempts: 5\n};\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\n\nclass cs {\n  constructor(t, e, n, r, s) {\n    this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, this.deferred = s, this.yt = n.maxAttempts, this.gt = new hn(this.asyncQueue, \"transaction_retry\"\n    /* TimerId.TransactionRetry */\n    );\n  }\n  /** Runs the transaction and sets the result on deferred. */\n\n\n  run() {\n    this.yt -= 1, this._t();\n  }\n\n  _t() {\n    this.gt.H(async () => {\n      const t = new os(this.datastore),\n            e = this.vt(t);\n      e && e.then(e => {\n        this.asyncQueue.enqueueAndForget(() => t.commit().then(() => {\n          this.deferred.resolve(e);\n        }).catch(t => {\n          this.bt(t);\n        }));\n      }).catch(t => {\n        this.bt(t);\n      });\n    });\n  }\n\n  vt(t) {\n    try {\n      const e = this.updateFunction(t);\n      return !ht(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), null);\n    } catch (t) {\n      // Do not retry errors thrown by user provided updateFunction.\n      return this.deferred.reject(t), null;\n    }\n  }\n\n  bt(t) {\n    this.yt > 0 && this.Et(t) ? (this.yt -= 1, this.asyncQueue.enqueueAndForget(() => (this._t(), Promise.resolve()))) : this.deferred.reject(t);\n  }\n\n  Et(t) {\n    if (\"FirebaseError\" === t.name) {\n      // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n      // non-matching document versions with ABORTED. These errors should be retried.\n      const e = t.code;\n      return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n      /**\n      * Determines whether an error code represents a permanent error when received\n      * in response to a non-write operation.\n      *\n      * See isPermanentWriteError for classifying write errors.\n      */\n      function (t) {\n        switch (t) {\n          default:\n            return b();\n\n          case A:\n          case R:\n          case V:\n          case x:\n          case C:\n          case L: // Unauthenticated means something went wrong with our token and we need\n          // to retry with new credentials which will happen automatically.\n\n          case F:\n            return !1;\n\n          case P:\n          case $:\n          case N:\n          case D:\n          case S: // Aborted might be retried in some scenarios, but that is dependant on\n          // the context and should handled individually by the calling code.\n          // See https://cloud.google.com/apis/design/errors.\n\n          case q:\n          case O:\n          case k:\n          case M:\n            return !0;\n        }\n      }(e);\n    }\n\n    return !1;\n  }\n\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The Platform's 'document' implementation or null if not available. */\n\n\nfunction as() {\n  // `document` is not always available, e.g. in ReactNative and WebWorkers.\n  // eslint-disable-next-line no-restricted-globals\n  return \"undefined\" != typeof document ? document : null;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */\n\n\nclass hs {\n  constructor(t, e, n, r, s) {\n    this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, this.deferred = new j(), this.then = this.deferred.promise.then.bind(this.deferred.promise), // It's normal for the deferred promise to be canceled (due to cancellation)\n    // and so we attach a dummy catch callback to avoid\n    // 'UnhandledPromiseRejectionWarning' log spam.\n    this.deferred.promise.catch(t => {});\n  }\n  /**\n   * Creates and returns a DelayedOperation that has been scheduled to be\n   * executed on the provided asyncQueue after the provided delayMs.\n   *\n   * @param asyncQueue - The queue to schedule the operation on.\n   * @param id - A Timer ID identifying the type of operation this is.\n   * @param delayMs - The delay (ms) before the operation should be scheduled.\n   * @param op - The operation to run.\n   * @param removalCallback - A callback to be called synchronously once the\n   *   operation is executed or canceled, notifying the AsyncQueue to remove it\n   *   from its delayedOperations list.\n   *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n   *   the DelayedOperation class public.\n   */\n\n\n  static createAndSchedule(t, e, n, r, s) {\n    const i = Date.now() + n,\n          o = new hs(t, e, i, r, s);\n    return o.start(n), o;\n  }\n  /**\n   * Starts the timer. This is called immediately after construction by\n   * createAndSchedule().\n   */\n\n\n  start(t) {\n    this.timerHandle = setTimeout(() => this.handleDelayElapsed(), t);\n  }\n  /**\n   * Queues the operation to run immediately (if it hasn't already been run or\n   * canceled).\n   */\n\n\n  skipDelay() {\n    return this.handleDelayElapsed();\n  }\n  /**\n   * Cancels the operation if it hasn't already been executed or canceled. The\n   * promise will be rejected.\n   *\n   * As long as the operation has not yet been run, calling cancel() provides a\n   * guarantee that the operation will not be run.\n   */\n\n\n  cancel(t) {\n    null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(A, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n  }\n\n  handleDelayElapsed() {\n    this.asyncQueue.enqueueAndForget(() => null !== this.timerHandle ? (this.clearTimeout(), this.op().then(t => this.deferred.resolve(t))) : Promise.resolve());\n  }\n\n  clearTimeout() {\n    null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), this.timerHandle = null);\n  }\n\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nclass ls {\n  constructor() {\n    // The last promise in the queue.\n    this.It = Promise.resolve(), // A list of retryable operations. Retryable operations are run in order and\n    // retried with backoff.\n    this.Tt = [], // Is this AsyncQueue being shut down? Once it is set to true, it will not\n    // be changed again.\n    this.At = !1, // Operations scheduled to be queued in the future. Operations are\n    // automatically removed after they are run or canceled.\n    this.Rt = [], // visible for testing\n    this.Pt = null, // Flag set while there's an outstanding AsyncQueue operation, used for\n    // assertion sanity-checks.\n    this.Vt = !1, // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n    this.$t = !1, // List of TimerIds to fast-forward delays for.\n    this.Nt = [], // Backoff timer used to schedule retries for retryable operations\n    this.gt = new hn(this, \"async_queue_retry\"\n    /* TimerId.AsyncQueueRetry */\n    ), // Visibility handler that triggers an immediate retry of all retryable\n    // operations. Meant to speed up recovery when we regain file system access\n    // after page comes into foreground.\n    this.Dt = () => {\n      const t = as();\n      t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.gt.X();\n    };\n    const t = as();\n    t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Dt);\n  }\n\n  get isShuttingDown() {\n    return this.At;\n  }\n  /**\n   * Adds a new operation to the queue without waiting for it to complete (i.e.\n   * we ignore the Promise result).\n   */\n\n\n  enqueueAndForget(t) {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.enqueue(t);\n  }\n\n  enqueueAndForgetEvenWhileRestricted(t) {\n    this.Ft(), // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.xt(t);\n  }\n\n  enterRestrictedMode(t) {\n    if (!this.At) {\n      this.At = !0, this.$t = t || !1;\n      const e = as();\n      e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Dt);\n    }\n  }\n\n  enqueue(t) {\n    if (this.Ft(), this.At) // Return a Promise which never resolves.\n      return new Promise(() => {}); // Create a deferred Promise that we can return to the callee. This\n    // allows us to return a \"hanging Promise\" only to the callee and still\n    // advance the queue even when the operation is not run.\n\n    const e = new j();\n    return this.xt(() => this.At && this.$t ? Promise.resolve() : (t().then(e.resolve, e.reject), e.promise)).then(() => e.promise);\n  }\n\n  enqueueRetryable(t) {\n    this.enqueueAndForget(() => (this.Tt.push(t), this.St()));\n  }\n  /**\n   * Runs the next operation from the retryable queue. If the operation fails,\n   * reschedules with backoff.\n   */\n\n\n  async St() {\n    if (0 !== this.Tt.length) {\n      try {\n        await this.Tt[0](), this.Tt.shift(), this.gt.reset();\n      } catch (t) {\n        if (!\n        /**\n        * @license\n        * Copyright 2017 Google LLC\n        *\n        * Licensed under the Apache License, Version 2.0 (the \"License\");\n        * you may not use this file except in compliance with the License.\n        * You may obtain a copy of the License at\n        *\n        *   http://www.apache.org/licenses/LICENSE-2.0\n        *\n        * Unless required by applicable law or agreed to in writing, software\n        * distributed under the License is distributed on an \"AS IS\" BASIS,\n        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n        * See the License for the specific language governing permissions and\n        * limitations under the License.\n        */\n\n        /** Verifies whether `e` is an IndexedDbTransactionError. */\n        function (t) {\n          // Use name equality, as instanceof checks on errors don't work with errors\n          // that wrap other errors.\n          return \"IndexedDbTransactionError\" === t.name;\n        }\n        /**\n        * @license\n        * Copyright 2020 Google LLC\n        *\n        * Licensed under the Apache License, Version 2.0 (the \"License\");\n        * you may not use this file except in compliance with the License.\n        * You may obtain a copy of the License at\n        *\n        *   http://www.apache.org/licenses/LICENSE-2.0\n        *\n        * Unless required by applicable law or agreed to in writing, software\n        * distributed under the License is distributed on an \"AS IS\" BASIS,\n        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n        * See the License for the specific language governing permissions and\n        * limitations under the License.\n        */\n        (t)) throw t; // Failure will be handled by AsyncQueue\n\n        y(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n      }\n\n      this.Tt.length > 0 && // If there are additional operations, we re-schedule `retryNextOp()`.\n      // This is necessary to run retryable operations that failed during\n      // their initial attempt since we don't know whether they are already\n      // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n      // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n      // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n      // call scheduled here.\n      // Since `backoffAndRun()` cancels an existing backoff and schedules a\n      // new backoff on every call, there is only ever a single additional\n      // operation in the queue.\n      this.gt.H(() => this.St());\n    }\n  }\n\n  xt(t) {\n    const e = this.It.then(() => (this.Vt = !0, t().catch(t => {\n      this.Pt = t, this.Vt = !1;\n\n      const e =\n      /**\n      * Chrome includes Error.message in Error.stack. Other browsers do not.\n      * This returns expected output of message + stack when available.\n      * @param error - Error or FirestoreError\n      */\n      function (t) {\n        let e = t.message || \"\";\n        t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n        return e;\n      }\n      /**\n      * @license\n      * Copyright 2020 Google LLC\n      *\n      * Licensed under the Apache License, Version 2.0 (the \"License\");\n      * you may not use this file except in compliance with the License.\n      * You may obtain a copy of the License at\n      *\n      *   http://www.apache.org/licenses/LICENSE-2.0\n      *\n      * Unless required by applicable law or agreed to in writing, software\n      * distributed under the License is distributed on an \"AS IS\" BASIS,\n      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      * See the License for the specific language governing permissions and\n      * limitations under the License.\n      */\n      // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n      // legacy SDK.\n\n      /**\n      * A reference to a transaction.\n      *\n      * The `Transaction` object passed to a transaction's `updateFunction` provides\n      * the methods to read and write data within the transaction context. See\n      * {@link runTransaction}.\n      */\n      (t); // Re-throw the error so that this.tail becomes a rejected Promise and\n      // all further attempts to chain (via .then) will just short-circuit\n      // and return the rejected Promise.\n\n\n      throw g(\"INTERNAL UNHANDLED ERROR: \", e), t;\n    }).then(t => (this.Vt = !1, t))));\n    return this.It = e, e;\n  }\n\n  enqueueAfterDelay(t, e, n) {\n    this.Ft(), // Fast-forward delays for timerIds that have been overriden.\n    this.Nt.indexOf(t) > -1 && (e = 0);\n    const r = hs.createAndSchedule(this, t, e, n, t => this.qt(t));\n    return this.Rt.push(r), r;\n  }\n\n  Ft() {\n    this.Pt && b();\n  }\n\n  verifyOperationInProgress() {}\n  /**\n   * Waits until all currently queued tasks are finished executing. Delayed\n   * operations are not run.\n   */\n\n\n  async Ot() {\n    // Operations in the queue prior to draining may have enqueued additional\n    // operations. Keep draining the queue until the tail is no longer advanced,\n    // which indicates that no more new operations were enqueued and that all\n    // operations were executed.\n    let t;\n\n    do {\n      t = this.It, await t;\n    } while (t !== this.It);\n  }\n  /**\n   * For Tests: Determine if a delayed operation with a particular TimerId\n   * exists.\n   */\n\n\n  kt(t) {\n    for (const e of this.Rt) if (e.timerId === t) return !0;\n\n    return !1;\n  }\n  /**\n   * For Tests: Runs some or all delayed operations early.\n   *\n   * @param lastTimerId - Delayed operations up to and including this TimerId\n   * will be drained. Pass TimerId.All to run all delayed operations.\n   * @returns a Promise that resolves once all operations have been run.\n   */\n\n\n  Ct(t) {\n    // Note that draining may generate more delayed ops, so we do that first.\n    return this.Ot().then(() => {\n      // Run ops in the same order they'd run if they ran naturally.\n      this.Rt.sort((t, e) => t.targetTimeMs - e.targetTimeMs);\n\n      for (const e of this.Rt) if (e.skipDelay(), \"all\"\n      /* TimerId.All */\n      !== t && e.timerId === t) break;\n\n      return this.Ot();\n    });\n  }\n  /**\n   * For Tests: Skip all subsequent delays for a timer id.\n   */\n\n\n  Lt(t) {\n    this.Nt.push(t);\n  }\n  /** Called once a DelayedOperation is run or canceled. */\n\n\n  qt(t) {\n    // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n    const e = this.Rt.indexOf(t);\n    this.Rt.splice(e, 1);\n  }\n\n}\n\nclass fs {\n  /** @hideconstructor */\n  constructor(t, e) {\n    this._firestore = t, this._transaction = e, this._dataReader = Wn(t);\n  }\n  /**\n   * Reads the document referenced by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be read.\n   * @returns A `DocumentSnapshot` with the read data.\n   */\n\n\n  get(t) {\n    const e = ss(t, this._firestore),\n          n = new Br(this._firestore);\n    return this._transaction.lookup([e._key]).then(t => {\n      if (!t || 1 !== t.length) return b();\n      const r = t[0];\n      if (r.isFoundDocument()) return new fr(this._firestore, n, r.key, r, e.converter);\n      if (r.isNoDocument()) return new fr(this._firestore, n, e._key, null, e.converter);\n      throw b();\n    });\n  }\n\n  set(t, e, n) {\n    const r = ss(t, this._firestore),\n          s = jr(r.converter, e, n),\n          i = Gn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n    return this._transaction.set(r._key, i), this;\n  }\n\n  update(t, e, n) {\n    const s = ss(t, this._firestore); // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n\n    let i;\n\n    for (var _len19 = arguments.length, r = new Array(_len19 > 3 ? _len19 - 3 : 0), _key19 = 3; _key19 < _len19; _key19++) {\n      r[_key19 - 3] = arguments[_key19];\n    }\n\n    return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof On ? er(this._dataReader, \"Transaction.update\", s._key, e, n, r) : tr(this._dataReader, \"Transaction.update\", s._key, e), this._transaction.update(s._key, i), this;\n  }\n  /**\n   * Deletes the document referred to by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be deleted.\n   * @returns This `Transaction` instance. Used for chaining method calls.\n   */\n\n\n  delete(t) {\n    const e = ss(t, this._firestore);\n    return this._transaction.delete(e._key), this;\n  }\n\n}\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */\n\n\nfunction ds(t, e, n) {\n  const r = yn(t = ct(t, _n)),\n        s = Object.assign(Object.assign({}, us), n);\n  !function (t) {\n    if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n  }(s);\n  const i = new j();\n  return new cs(new ls(), r, s, n => e(new fs(t, n)), i).run(), i.promise;\n}\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */\n\n\n!function (t) {\n  w = t;\n}(`${SDK_VERSION}_lite`), _registerComponent(new Component(\"firestore/lite\", (t, _ref5) => {\n  let {\n    instanceIdentifier: e,\n    options: n\n  } = _ref5;\n  const r = t.getProvider(\"app\").getImmediate(),\n        s = new _n(new W(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function (t, e) {\n    if (!Object.prototype.hasOwnProperty.apply(t.options, [\"projectId\"])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n    return new X(t.options.projectId, e);\n  }\n  /**\n  * @license\n  * Copyright 2017 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n  (r, e), r);\n  return n && s._setSettings(n), s;\n}, \"PUBLIC\").setMultipleInstances(!0)), // RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nregisterVersion(\"firestore-lite\", \"3.8.3\", \"\"), registerVersion(\"firestore-lite\", \"3.8.3\", \"esm2017\");\nexport { Tn as AggregateField, An as AggregateQuerySnapshot, qn as Bytes, $n as CollectionReference, Pn as DocumentReference, fr as DocumentSnapshot, On as FieldPath, Cn as FieldValue, _n as Firestore, U as FirestoreError, Ln as GeoPoint, Vn as Query, Er as QueryCompositeFilterConstraint, gr as QueryConstraint, dr as QueryDocumentSnapshot, xr as QueryEndAtConstraint, vr as QueryFieldFilterConstraint, Pr as QueryLimitConstraint, Ar as QueryOrderByConstraint, wr as QuerySnapshot, Nr as QueryStartAtConstraint, Vt as Timestamp, fs as Transaction, rs as WriteBatch, Yr as addDoc, Jr as aggregateQuerySnapshotEqual, Tr as and, es as arrayRemove, ts as arrayUnion, Nn as collection, Dn as collectionGroup, En as connectFirestoreEmulator, Kr as deleteDoc, Xr as deleteField, Fn as doc, kn as documentId, qr as endAt, Sr as endBefore, Hr as getCount, Qr as getDoc, zr as getDocs, bn as getFirestore, ns as increment, vn as initializeFirestore, Vr as limit, $r as limitToLast, Ir as or, Rr as orderBy, _r as query, Sn as queryEqual, xn as refEqual, ds as runTransaction, Zr as serverTimestamp, Wr as setDoc, p as setLogLevel, mr as snapshotEqual, Fr as startAfter, Dr as startAt, In as terminate, Gr as updateDoc, br as where, is as writeBatch };","map":{"version":3,"mappings":"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","names":["d","constructor","t","uid","isAuthenticated","toKey","isEqual","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","w","m","o","p","setLogLevel","y","logLevel","u","DEBUG","e","n","map","v","debug","g","ERROR","error","_","WARN","warn","JSON","stringify","b","Error","E","I","T","A","R","P","V","$","N","D","F","x","S","q","O","k","C","L","M","U","c","code","message","toString","name","j","promise","Promise","resolve","reject","B","user","type","headers","Map","set","Q","getToken","invalidateToken","start","enqueueRetryable","shutdown","z","token","changeListener","W","auth","onInit","then","accessToken","getUid","G","r","i","h","l","getAuthHeaderValueForFirstParty","K","Y","value","length","H","appCheck","J","s","databaseId","appId","persistenceKey","host","ssl","forceLongPolling","autoDetectLongPolling","useFetchStreams","X","projectId","database","empty","isDefaultDatabase","Z","segments","offset","len","comparator","child","slice","limit","forEach","push","construct","popFirst","popLast","firstSegment","lastSegment","get","isEmpty","isPrefixOf","isImmediateParentOf","toArray","Math","min","tt","canonicalString","join","fromString","indexOf","split","filter","emptyPath","et","nt","isValidIdentifier","test","replace","isKeyField","keyField","fromServerFormat","rt","path","fromPath","fromName","collectionGroup","hasCollectionId","getCollectionGroup","getCollectionPath","isDocumentKey","fromSegments","st","it","ot","ut","substring","Array","ct","_delegate","at","ht","lt","ft","BatchGetDocuments","Commit","RunQuery","RunAggregationQuery","dt","wt","mt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","pt","databaseInfo","method","body","status","statusText","ok","json","isArray","yt","self","crypto","msCrypto","Uint8Array","getRandomValues","floor","random","gt","charAt","_t","vt","every","bt","Object","prototype","hasOwnProperty","call","Et","It","binaryString","fromBase64String","atob","fromUint8Array","String","fromCharCode","Symbol","iterator","next","charCodeAt","done","toBase64","btoa","toUint8Array","approximateByteSize","compareTo","EMPTY_BYTE_STRING","Tt","RegExp","At","exec","substr","Number","Date","seconds","getTime","nanos","Rt","Pt","Vt","nanoseconds","now","fromMillis","fromDate","toDate","toMillis","_compareTo","toJSON","valueOf","padStart","$t","mapValue","fields","__type__","stringValue","Nt","__previous_value__","Dt","__local_write_time__","timestampValue","Ft","xt","St","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","isNaN","arrayValue","values","qt","find","Ot","kt","keys","sort","Ct","Lt","Mt","Ut","jt","Bt","assign","Qt","position","inclusive","zt","Wt","Gt","field","op","create","createKeyFieldInFilter","Ht","te","ee","ne","re","Jt","Xt","matches","data","matchesComparison","isInequality","getFlattenedFilters","getFilters","getFirstInequalityField","Kt","filters","reduce","concat","Yt","key","Zt","some","nullValue","se","dir","ie","oe","timestamp","fromTimestamp","max","toMicroseconds","toTimestamp","ue","root","ae","EMPTY","insert","copy","BLACK","remove","left","right","size","minKey","maxKey","inorderTraversal","reverseTraversal","getIterator","ce","getIteratorFrom","getReverseIterator","getReverseIteratorFrom","isReverse","nodeStack","getNext","pop","hasNext","peek","color","RED","fixUp","removeMin","isRed","moveRedLeft","rotateRight","moveRedRight","rotateLeft","colorFlip","checkMaxDepth","check","pow","he","has","first","last","forEachInRange","forEachWhile","firstAfterOrEqual","le","add","delete","unionWith","iter","fe","covers","de","getFieldsMap","setAll","applyChanges","clone","we","documentType","version","readTime","createTime","documentState","newInvalidDocument","newFoundDocument","newNoDocument","newUnknownDocument","convertToFoundDocument","convertToNoDocument","convertToUnknownDocument","setHasCommittedMutations","setHasLocalMutations","setReadTime","hasLocalMutations","hasCommittedMutations","hasPendingWrites","isValidDocument","isFoundDocument","isNoDocument","isUnknownDocument","mutableCopy","me","orderBy","startAt","endAt","pe","ye","explicitOrderBy","limitType","ge","_e","ve","be","Ee","Ie","Te","Ae","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","Re","Pe","Ve","elements","$e","Ne","De","transform","Fe","updateTime","exists","none","isNone","xe","Se","precondition","fieldTransforms","getFieldMask","qe","fieldMask","Oe","ke","Ce","asc","desc","Le","in","Me","and","or","Ue","je","toISOString","Be","Qe","ze","We","Ge","Ke","cn","Ye","He","Je","Xe","found","missing","Ze","update","updateMask","un","verify","updateTransforms","fieldPath","setToServerValue","appendMissingElements","removeAllFromArray","increment","currentDocument","tn","structuredQuery","parent","from","collectionId","allDescendants","on","where","sn","direction","en","before","nn","rn","unaryFilter","fieldFilter","compositeFilter","fieldPaths","an","hn","timerId","reset","cancel","enqueueAfterDelay","skipDelay","ln","authCredentials","appCheckCredentials","connection","all","catch","terminate","fn","writes","dn","documents","wn","document","mn","structuredAggregationQuery","aggregations","count","alias","result","aggregateFields","pn","yn","_terminated","fetch","bind","_databaseId","app","options","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","_authCredentials","_appCheckCredentials","gn","credentials","ignoreUndefinedProperties","cacheSizeBytes","_n","_app","_settings","_settingsFrozen","_initialized","_terminateTask","_setSettings","client","sessionIndex","iamToken","authTokenFactory","_getSettings","_delete","_terminate","settings","vn","_getProvider","isInitialized","initialize","instanceIdentifier","bn","getImmediate","identifier","a","En","mockUserToken","sub","user_id","In","Tn","An","_data","query","Rn","datastore","userDataWriter","run","_query","entries","convertValue","Pn","converter","_key","firestore","_path","id","$n","withConverter","Vn","Nn","Dn","Fn","arguments","xn","Sn","qn","_byteString","On","_internalPath","kn","Cn","_methodName","Ln","isFinite","_lat","_long","Mn","Un","toMutation","jn","Bn","Qn","hr","methodName","contains","zn","Wn","Gn","merge","mergeFields","sr","ur","lr","Kn","_toFieldTransform","Yn","Hn","Jn","rr","Xn","Zn","tr","ar","er","f","nr","ir","getPrototypeOf","cr","search","fr","_firestore","_userDataWriter","_document","_converter","ref","dr","fromFirestore","pr","wr","_docs","docs","mr","yr","gr","_r","Er","vr","_apply","_field","_op","_value","_create","_parse","Lr","Cr","kr","br","_queryConstraints","_getOperator","_getQueryConstraints","Ir","Ur","Tr","Ar","_direction","Mr","Rr","Pr","_limit","_limitType","Vr","$r","Nr","_docOrFields","_inclusive","Or","Dr","Fr","xr","Sr","qr","jr","toFirestore","Br","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","convertDocumentKey","Qr","zr","reverse","Wr","Gr","Kr","Yr","Hr","Jr","Xr","Zr","ts","es","ns","rs","_commitHandler","_mutations","_committed","_dataReader","_verifyNotCommitted","ss","commit","is","os","readVersions","mutations","committed","lastWriteError","writtenDocs","Set","lookup","ensureCommitNotCalled","recordVersion","write","preconditionForUpdate","us","maxAttempts","cs","asyncQueue","updateFunction","deferred","enqueueAndForget","as","hs","targetTimeMs","removalCallback","createAndSchedule","timerHandle","setTimeout","handleDelayElapsed","clearTimeout","ls","visibilityState","addEventListener","isShuttingDown","enqueue","enqueueAndForgetEvenWhileRestricted","enterRestrictedMode","removeEventListener","shift","stack","includes","verifyOperationInProgress","splice","fs","_transaction","ds","getProvider","apply","setMultipleInstances"],"sources":["E:\\Websites\\PocketMoneyWeb\\PocketMoney\\node_modules\\@firebase\\firestore\\dist\\lite\\index.browser.esm2017.js"],"sourcesContent":["import { _getProvider, getApp as t, _removeServiceInstance as e, _registerComponent as n, registerVersion as r, SDK_VERSION as s } from \"@firebase/app\";\n\nimport { Component as i } from \"@firebase/component\";\n\nimport { Logger as o, LogLevel as u } from \"@firebase/logger\";\n\nimport { FirebaseError as c, getDefaultEmulatorHostnameAndPort as a, createMockUserToken as h, getModularInstance as l, deepEqual as f } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass d {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ d.UNAUTHENTICATED = new d(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), \nd.MOCK_USER = new d(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet w = \"9.17.1\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst m = new o(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function p(t) {\n    m.setLogLevel(t);\n}\n\nfunction y(t, ...e) {\n    if (m.logLevel <= u.DEBUG) {\n        const n = e.map(v);\n        m.debug(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\nfunction g(t, ...e) {\n    if (m.logLevel <= u.ERROR) {\n        const n = e.map(v);\n        m.error(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function _(t, ...e) {\n    if (m.logLevel <= u.WARN) {\n        const n = e.map(v);\n        m.warn(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function v(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function b(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${w}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw g(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function E(t, e) {\n    t || b();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function I(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const T = \"ok\", A = \"cancelled\", R = \"unknown\", P = \"invalid-argument\", V = \"deadline-exceeded\", $ = \"not-found\", N = \"already-exists\", D = \"permission-denied\", F = \"unauthenticated\", x = \"resource-exhausted\", S = \"failed-precondition\", q = \"aborted\", O = \"out-of-range\", k = \"unimplemented\", C = \"internal\", L = \"unavailable\", M = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class U extends c {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class B {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class Q {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(d.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class z {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class W {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (E(\"string\" == typeof t.accessToken), \n        new B(t.accessToken, new d(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class G {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, \n        this.h = new Map;\n    }\n    /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */    l() {\n        return this.u ? this.u() : (\n        // Make sure this really is a Gapi client.\n        E(!(\"object\" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), \n        this.t.auth.getAuthHeaderValueForFirstParty([]));\n    }\n    get headers() {\n        this.h.set(\"X-Goog-AuthUser\", this.i);\n        // Use array notation to prevent minification\n        const t = this.l();\n        return t && this.h.set(\"Authorization\", t), this.o && this.h.set(\"X-Goog-Iam-Authorization-Token\", this.o), \n        this.h;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class K {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r;\n    }\n    getToken() {\n        return Promise.resolve(new G(this.t, this.i, this.o, this.u));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(d.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass Y {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class H {\n    constructor(t) {\n        this.m = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (E(\"string\" == typeof t.token), \n        new Y(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass J {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass X {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new X(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof X && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass Z {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === Z.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof Z ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class tt extends Z {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new U(P, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\nconst et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class nt extends Z {\n    construct(t, e, n) {\n        return new nt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return et.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new nt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new U(P, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(P, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n        return new nt(e);\n    }\n    static emptyPath() {\n        return new nt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class rt {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new rt(tt.fromString(t));\n    }\n    static fromName(t) {\n        return new rt(tt.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new rt(tt.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === tt.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return tt.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new rt(new tt(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function st(t, e, n) {\n    if (!n) throw new U(P, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction it(t) {\n    if (!rt.isDocumentKey(t)) throw new U(P, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function ot(t) {\n    if (rt.isDocumentKey(t)) throw new U(P, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction ut(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : b();\n}\n\nfunction ct(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = ut(t);\n            throw new U(P, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction at(t, e) {\n    if (e <= 0) throw new U(P, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ht(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function lt(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ft = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\",\n    RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar dt, wt;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction mt(t) {\n    if (void 0 === t) return g(\"RPC_ERROR\", \"HTTP error has no status\"), R;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return T;\n\n      case 400:\n        // Bad Request\n        return S;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return F;\n\n      case 403:\n        // Forbidden\n        return D;\n\n      case 404:\n        // Not Found\n        return $;\n\n      case 409:\n        // Conflict\n        return q;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return O;\n\n      case 429:\n        // Too Many Requests\n        return x;\n\n      case 499:\n        // Client Closed Request\n        return A;\n\n      case 500:\n        // Internal Server Error\n        return R;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return k;\n\n      case 503:\n        // Service Unavailable\n        return L;\n\n      case 504:\n        // Gateway Timeout\n        return V;\n\n      default:\n        return t >= 200 && t < 300 ? T : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : R;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (wt = dt || (dt = {}))[wt.OK = 0] = \"OK\", wt[wt.CANCELLED = 1] = \"CANCELLED\", \nwt[wt.UNKNOWN = 2] = \"UNKNOWN\", wt[wt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nwt[wt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", wt[wt.NOT_FOUND = 5] = \"NOT_FOUND\", \nwt[wt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", wt[wt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nwt[wt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", wt[wt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nwt[wt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", wt[wt.ABORTED = 10] = \"ABORTED\", \nwt[wt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", wt[wt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nwt[wt.INTERNAL = 13] = \"INTERNAL\", wt[wt.UNAVAILABLE = 14] = \"UNAVAILABLE\", wt[wt.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass pt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.p = e + \"://\" + t.host, this.g = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    get v() {\n        // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n        // where to run the query, and expect the `request` to NOT specify the \"path\".\n        return !1;\n    }\n    I(t, e, n, r, s) {\n        const i = this.T(t, e);\n        y(\"RestConnection\", \"Sending: \", i, n);\n        const o = {};\n        return this.A(o, r, s), this.R(t, i, o, n).then((t => (y(\"RestConnection\", \"Received: \", t), \n        t)), (e => {\n            throw _(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), \n            e;\n        }));\n    }\n    P(t, e, n, r, s, i) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.I(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    A(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    T(t, e) {\n        const n = ft[t];\n        return `${this.p}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.V = e;\n    }\n    $(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async R(t, e, n, r) {\n        var s;\n        const i = JSON.stringify(r);\n        let o;\n        try {\n            o = await this.V(e, {\n                method: \"POST\",\n                headers: n,\n                body: i\n            });\n        } catch (t) {\n            const e = t;\n            throw new U(mt(e.status), \"Request failed with error: \" + e.statusText);\n        }\n        if (!o.ok) {\n            let t = await o.json();\n            Array.isArray(t) && (t = t[0]);\n            const e = null === (s = null == t ? void 0 : t.error) || void 0 === s ? void 0 : s.message;\n            throw new U(mt(o.status), `Request failed with error: ${null != e ? e : o.statusText}`);\n        }\n        return o.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction yt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class gt {\n    static N() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = yt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction _t(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function vt(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function bt(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Et(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass It {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = atob(t);\n        return new It(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new It(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        /** Converts a binary string to a Base64 encoded string. */\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return _t(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nIt.EMPTY_BYTE_STRING = new It(\"\");\n\nconst Tt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function At(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (E(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = Tt.exec(t);\n        if (E(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: Rt(t.seconds),\n        nanos: Rt(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function Rt(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function Pt(t) {\n    return \"string\" == typeof t ? It.fromBase64String(t) : It.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass Vt {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return Vt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return Vt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new Vt(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? _t(this.nanoseconds, t.nanoseconds) : _t(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function $t(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function Nt(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return $t(e) ? Nt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function Dt(t) {\n    const e = At(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new Vt(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ft = {\n    fields: {\n        __type__: {\n            stringValue: \"__max__\"\n        }\n    }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction xt(t) {\n    return \"nullValue\" in t ? 0 /* TypeOrder.NullValue */ : \"booleanValue\" in t ? 1 /* TypeOrder.BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* TypeOrder.NumberValue */ : \"timestampValue\" in t ? 3 /* TypeOrder.TimestampValue */ : \"stringValue\" in t ? 5 /* TypeOrder.StringValue */ : \"bytesValue\" in t ? 6 /* TypeOrder.BlobValue */ : \"referenceValue\" in t ? 7 /* TypeOrder.RefValue */ : \"geoPointValue\" in t ? 8 /* TypeOrder.GeoPointValue */ : \"arrayValue\" in t ? 9 /* TypeOrder.ArrayValue */ : \"mapValue\" in t ? $t(t) ? 4 /* TypeOrder.ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ (t) ? 9007199254740991 /* TypeOrder.MaxValue */ : 10 /* TypeOrder.ObjectValue */ : b();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function St(t, e) {\n    if (t === e) return !0;\n    const n = xt(t);\n    if (n !== xt(e)) return !1;\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return !0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return Dt(t).isEqual(Dt(e));\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = At(t.timestampValue), r = At(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* TypeOrder.StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            return Pt(t.bytesValue).isEqual(Pt(e.bytesValue));\n        }(t, e);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            return Rt(t.geoPointValue.latitude) === Rt(e.geoPointValue.latitude) && Rt(t.geoPointValue.longitude) === Rt(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return Rt(t.integerValue) === Rt(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = Rt(t.doubleValue), r = Rt(e.doubleValue);\n                return n === r ? lt(n) === lt(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return vt(t.arrayValue.values || [], e.arrayValue.values || [], St);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (bt(n) !== bt(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !St(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return b();\n    }\n}\n\nfunction qt(t, e) {\n    return void 0 !== (t.values || []).find((t => St(t, e)));\n}\n\nfunction Ot(t, e) {\n    if (t === e) return 0;\n    const n = xt(t), r = xt(e);\n    if (n !== r) return _t(n, r);\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return 0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return _t(t.booleanValue, e.booleanValue);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            const n = Rt(t.integerValue || t.doubleValue), r = Rt(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return kt(t.timestampValue, e.timestampValue);\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return kt(Dt(t), Dt(e));\n\n      case 5 /* TypeOrder.StringValue */ :\n        return _t(t.stringValue, e.stringValue);\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            const n = Pt(t), r = Pt(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = _t(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return _t(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            const n = _t(Rt(t.latitude), Rt(e.latitude));\n            if (0 !== n) return n;\n            return _t(Rt(t.longitude), Rt(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = Ot(n[t], r[t]);\n                if (e) return e;\n            }\n            return _t(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            if (t === Ft && e === Ft) return 0;\n            if (t === Ft) return 1;\n            if (e === Ft) return -1;\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = _t(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = Ot(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return _t(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw b();\n    }\n}\n\nfunction kt(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return _t(t, e);\n    const n = At(t), r = At(e), s = _t(n.seconds, r.seconds);\n    return 0 !== s ? s : _t(n.nanos, r.nanos);\n}\n\nfunction Ct(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function Lt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Mt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Ut(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function jt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Bt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Et(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Bt(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Bt(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Qt {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\nfunction zt(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!St(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Wt {}\n\nclass Gt extends Wt {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* Operator.IN */ === e || \"not-in\" /* Operator.NOT_IN */ === e ? this.createKeyFieldInFilter(t, e, n) : new Ht(t, e, n) : \"array-contains\" /* Operator.ARRAY_CONTAINS */ === e ? new te(t, n) : \"in\" /* Operator.IN */ === e ? new ee(t, n) : \"not-in\" /* Operator.NOT_IN */ === e ? new ne(t, n) : \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === e ? new re(t, n) : new Gt(t, e, n);\n    }\n    static createKeyFieldInFilter(t, e, n) {\n        return \"in\" /* Operator.IN */ === e ? new Jt(t, n) : new Xt(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* Operator.NOT_EQUAL */ === this.op ? null !== e && this.matchesComparison(Ot(e, this.value)) : null !== e && xt(this.value) === xt(e) && this.matchesComparison(Ot(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    matchesComparison(t) {\n        switch (this.op) {\n          case \"<\" /* Operator.LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* Operator.EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* Operator.GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return b();\n        }\n    }\n    isInequality() {\n        return [ \"<\" /* Operator.LESS_THAN */ , \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ , \">\" /* Operator.GREATER_THAN */ , \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ , \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n    getFlattenedFilters() {\n        return [ this ];\n    }\n    getFilters() {\n        return [ this ];\n    }\n    getFirstInequalityField() {\n        return this.isInequality() ? this.field : null;\n    }\n}\n\nclass Kt extends Wt {\n    constructor(t, e) {\n        super(), this.filters = t, this.op = e, this.D = null;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e) {\n        return new Kt(t, e);\n    }\n    matches(t) {\n        return \"and\" /* CompositeOperator.AND */ === this.op ? void 0 === this.filters.find((e => !e.matches(t))) : void 0 !== this.filters.find((e => e.matches(t)));\n    }\n    getFlattenedFilters() {\n        return null !== this.D || (this.D = this.filters.reduce(((t, e) => t.concat(e.getFlattenedFilters())), [])), \n        this.D;\n    }\n    // Returns a mutable copy of `this.filters`\n    getFilters() {\n        return Object.assign([], this.filters);\n    }\n    getFirstInequalityField() {\n        const t = this.F((t => t.isInequality()));\n        return null !== t ? t.field : null;\n    }\n    // Performs a depth-first search to find and return the first FieldFilter in the composite filter\n    // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the\n    // predicate.\n    F(t) {\n        for (const e of this.getFlattenedFilters()) if (t(e)) return e;\n        return null;\n    }\n}\n\nfunction Yt(t, e) {\n    return t instanceof Gt ? function(t, e) {\n        return e instanceof Gt && t.op === e.op && t.field.isEqual(e.field) && St(t.value, e.value);\n    }(t, e) : t instanceof Kt ? function(t, e) {\n        if (e instanceof Kt && t.op === e.op && t.filters.length === e.filters.length) {\n            return t.filters.reduce(((t, n, r) => t && Yt(n, e.filters[r])), !0);\n        }\n        return !1;\n    }\n    /** Filter that matches on key fields (i.e. '__name__'). */ (t, e) : void b();\n}\n\nclass Ht extends Gt {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = rt.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = rt.comparator(t.key, this.key);\n        return this.matchesComparison(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class Jt extends Gt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e), this.keys = Zt(\"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class Xt extends Gt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e), this.keys = Zt(\"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction Zt(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => rt.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class te extends Gt {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* Operator.ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return Lt(e) && qt(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class ee extends Gt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && qt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class ne extends Gt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        if (qt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !qt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class re extends Gt {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!Lt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => qt(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class se {\n    constructor(t, e = \"asc\" /* Direction.ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction ie(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class oe {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new oe(t);\n    }\n    static min() {\n        return new oe(new Vt(0, 0));\n    }\n    static max() {\n        return new oe(new Vt(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass ue {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || ae.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new ue(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, ae.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new ue(this.comparator, this.root.remove(t, this.comparator).copy(null, null, ae.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const r = this.comparator(t, n.key);\n            if (0 === r) return e + n.left.size;\n            r < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new ce(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new ce(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new ce(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new ce(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass ce {\n    constructor(t, e, n, r) {\n        this.isReverse = r, this.nodeStack = [];\n        let s = 1;\n        for (;!t.isEmpty(); ) if (s = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && r && (s *= -1), s < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === s) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass ae {\n    constructor(t, e, n, r, s) {\n        this.key = t, this.value = e, this.color = null != n ? n : ae.RED, this.left = null != r ? r : ae.EMPTY, \n        this.right = null != s ? s : ae.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, r, s) {\n        return new ae(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let r = this;\n        const s = n(t, r.key);\n        return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), \n        r.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return ae.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, r = this;\n        if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), \n        r = r.copy(null, null, null, r.left.remove(t, e), null); else {\n            if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), \n            0 === e(t, r.key)) {\n                if (r.right.isEmpty()) return ae.EMPTY;\n                n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n            }\n            r = r.copy(null, null, null, null, r.right.remove(t, e));\n        }\n        return r.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, ae.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, ae.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw b();\n        if (this.right.isRed()) throw b();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw b();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nae.EMPTY = null, ae.RED = !0, ae.BLACK = !1;\n\n// end LLRBEmptyNode\nae.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw b();\n    }\n    get value() {\n        throw b();\n    }\n    get color() {\n        throw b();\n    }\n    get left() {\n        throw b();\n    }\n    get right() {\n        throw b();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, r, s) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new ae(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass he {\n    constructor(t) {\n        this.comparator = t, this.data = new ue(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const r = n.getNext();\n            if (this.comparator(r.key, t[1]) >= 0) return;\n            e(r.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new le(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new le(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof he)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, r = n.getNext().key;\n            if (0 !== this.comparator(t, r)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new he(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass le {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class fe {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(nt.comparator);\n    }\n    static empty() {\n        return new fe([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new he(nt.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const n of t) e = e.add(n);\n        return new fe(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return vt(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ class de {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new de({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !jt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Bt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = nt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Bt(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        jt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return St(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            jt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Et(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new de(Bt(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class we {\n    constructor(t, e, n, r, s, i, o) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.createTime = s, \n        this.data = i, this.documentState = o;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new we(t, 0 /* DocumentType.INVALID */ , \n        /* version */ oe.min(), \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n, r) {\n        return new we(t, 1 /* DocumentType.FOUND_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ n, r, 0 /* DocumentState.SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new we(t, 2 /* DocumentType.NO_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new we(t, 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        // If a document is switching state from being an invalid or deleted\n        // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n        // update from Watch or due to applying a local set mutation on top\n        // of a deleted document, our best guess about its createTime would be the\n        // version at which the document transitioned to a FOUND_DOCUMENT.\n        return !this.createTime.isEqual(oe.min()) || 2 /* DocumentType.NO_DOCUMENT */ !== this.documentType && 0 /* DocumentType.INVALID */ !== this.documentType || (this.createTime = t), \n        this.version = t, this.documentType = 1 /* DocumentType.FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* DocumentType.NO_DOCUMENT */ , \n        this.data = de.empty(), this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        this.data = de.empty(), this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , \n        this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ , this.version = oe.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* DocumentType.INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* DocumentType.FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* DocumentType.NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* DocumentType.UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof we && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new we(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {createTime: ${this.createTime}}), {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass me {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.S = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function pe(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new me(t, e, n, r, s, i, o);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nclass ye {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* LimitType.First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.q = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.O = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function ge(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction _e(t) {\n    for (const e of t.filters) {\n        const t = e.getFirstInequalityField();\n        if (null !== t) return t;\n    }\n    return null;\n}\n\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction ve(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function be(t) {\n    const e = I(t);\n    if (null === e.q) {\n        e.q = [];\n        const t = _e(e), n = ge(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.q.push(new se(t)), e.q.push(new se(nt.keyField(), \"asc\" /* Direction.ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.q.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* Direction.ASCENDING */;\n                e.q.push(new se(nt.keyField(), t));\n            }\n        }\n    }\n    return e.q;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function Ee(t) {\n    const e = I(t);\n    if (!e.O) if (\"F\" /* LimitType.First */ === e.limitType) e.O = pe(e.path, e.collectionGroup, be(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of be(e)) {\n            const e = \"desc\" /* Direction.DESCENDING */ === n.dir ? \"asc\" /* Direction.ASCENDING */ : \"desc\" /* Direction.DESCENDING */;\n            t.push(new se(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new Qt(e.endAt.position, e.endAt.inclusive) : null, r = e.startAt ? new Qt(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.O = pe(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.O;\n}\n\nfunction Ie(t, e) {\n    e.getFirstInequalityField(), _e(t);\n    const n = t.filters.concat([ e ]);\n    return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n}\n\nfunction Te(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!ie(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let n = 0; n < t.filters.length; n++) if (!Yt(t.filters[n], e.filters[n])) return !1;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!zt(t.startAt, e.startAt) && zt(t.endAt, e.endAt);\n    }(Ee(t), Ee(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction Ae(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !lt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.k) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: lt(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class Re {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class Pe extends Re {}\n\n/** Transforms an array value via a union operation. */ class Ve extends Re {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class $e extends Re {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class Ne extends Re {\n    constructor(t, e) {\n        super(), this.C = t, this.L = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class De {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class Fe {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new Fe;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new Fe(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new Fe(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class xe {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class Se extends xe {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* MutationType.Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class qe extends xe {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* MutationType.Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class Oe extends xe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* MutationType.Delete */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class ke extends xe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* MutationType.Verify */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ce = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Le = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})(), Me = (() => {\n    const t = {\n        and: \"AND\",\n        or: \"OR\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Ue {\n    constructor(t, e) {\n        this.databaseId = t, this.k = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction je(t, e) {\n    if (t.k) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Be(t, e) {\n    return t.k ? e.toBase64() : e.toUint8Array();\n}\n\nfunction Qe(t, e) {\n    return je(t, e.toTimestamp());\n}\n\nfunction ze(t) {\n    return E(!!t), oe.fromTimestamp(function(t) {\n        const e = At(t);\n        return new Vt(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction We(t, e) {\n    return function(t) {\n        return new tt([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Ge(t, e) {\n    return We(t.databaseId, e.path);\n}\n\nfunction Ke(t, e) {\n    const n = function(t) {\n        const e = tt.fromString(t);\n        return E(cn(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction Ye(t, e) {\n    return We(t.databaseId, e);\n}\n\nfunction He(t) {\n    return new tt([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction Je(t, e, n) {\n    return {\n        name: Ge(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction Xe(t, e) {\n    return \"found\" in e ? function(t, e) {\n        E(!!e.found), e.found.name, e.found.updateTime;\n        const n = Ke(t, e.found.name), r = ze(e.found.updateTime), s = e.found.createTime ? ze(e.found.createTime) : oe.min(), i = new de({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return we.newFoundDocument(n, r, s, i);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        E(!!e.missing), E(!!e.readTime);\n        const n = Ke(t, e.missing), r = ze(e.readTime);\n        return we.newNoDocument(n, r);\n    }(t, e) : b();\n}\n\nfunction Ze(t, e) {\n    let n;\n    if (e instanceof Se) n = {\n        update: Je(t, e.key, e.value)\n    }; else if (e instanceof Oe) n = {\n        delete: Ge(t, e.key)\n    }; else if (e instanceof qe) n = {\n        update: Je(t, e.key, e.data),\n        updateMask: un(e.fieldMask)\n    }; else {\n        if (!(e instanceof ke)) return b();\n        n = {\n            verify: Ge(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof Pe) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof Ve) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof $e) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Ne) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.L\n        };\n        throw b();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: Qe(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : b();\n    }(t, e.precondition)), n;\n}\n\nfunction tn(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = Ye(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = Ye(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        return on(Kt.create(t, \"and\" /* CompositeOperator.AND */));\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: sn(t.field),\n                direction: en(t.dir)\n            };\n        }\n        // visible for testing\n        (t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.k || ht(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction en(t) {\n    return Ce[t];\n}\n\n// visible for testing\nfunction nn(t) {\n    return Le[t];\n}\n\nfunction rn(t) {\n    return Me[t];\n}\n\nfunction sn(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction on(t) {\n    return t instanceof Gt ? function(t) {\n        if (\"==\" /* Operator.EQUAL */ === t.op) {\n            if (Ut(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NAN\"\n                }\n            };\n            if (Mt(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NULL\"\n                }\n            };\n        } else if (\"!=\" /* Operator.NOT_EQUAL */ === t.op) {\n            if (Ut(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NOT_NAN\"\n                }\n            };\n            if (Mt(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NOT_NULL\"\n                }\n            };\n        }\n        return {\n            fieldFilter: {\n                field: sn(t.field),\n                op: nn(t.op),\n                value: t.value\n            }\n        };\n    }(t) : t instanceof Kt ? function(t) {\n        const e = t.getFilters().map((t => on(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: rn(t.op),\n                filters: e\n            }\n        };\n    }(t) : b();\n}\n\nfunction un(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction cn(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function an(t) {\n    return new Ue(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass hn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.M = t, this.timerId = e, this.U = n, this.j = r, this.B = s, this.W = 0, this.G = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.K = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.W = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    Y() {\n        this.W = this.B;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    H(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.W + this.J()), n = Math.max(0, Date.now() - this.K), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && y(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.W} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.G = this.M.enqueueAfterDelay(this.timerId, r, (() => (this.K = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.W *= this.j, this.W < this.U && (this.W = this.U), this.W > this.B && (this.W = this.B);\n    }\n    X() {\n        null !== this.G && (this.G.skipDelay(), this.G = null);\n    }\n    cancel() {\n        null !== this.G && (this.G.cancel(), this.G = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    J() {\n        return (Math.random() - .5) * this.W;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass ln extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.connection = n, \n        this.C = r, this.Z = !1;\n    }\n    tt() {\n        if (this.Z) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    I(t, e, n) {\n        return this.tt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.connection.I(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    P(t, e, n, r) {\n        return this.tt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.connection.P(t, e, n, s, i, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    terminate() {\n        this.Z = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function fn(t, e) {\n    const n = I(t), r = He(n.C) + \"/documents\", s = {\n        writes: e.map((t => Ze(n.C, t)))\n    };\n    await n.I(\"Commit\", r, s);\n}\n\nasync function dn(t, e) {\n    const n = I(t), r = He(n.C) + \"/documents\", s = {\n        documents: e.map((t => Ge(n.C, t)))\n    }, i = await n.P(\"BatchGetDocuments\", r, s, e.length), o = new Map;\n    i.forEach((t => {\n        const e = Xe(n.C, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        E(!!e), u.push(e);\n    })), u;\n}\n\nasync function wn(t, e) {\n    const n = I(t), r = tn(n.C, Ee(e));\n    return (await n.P(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = Ke(t, e.name), s = ze(e.updateTime), i = e.createTime ? ze(e.createTime) : oe.min(), o = new de({\n            mapValue: {\n                fields: e.fields\n            }\n        }), u = we.newFoundDocument(r, s, i, o);\n        return n && u.setHasCommittedMutations(), n ? u.setHasCommittedMutations() : u;\n    }(n.C, t.document, void 0)));\n}\n\nasync function mn(t, e) {\n    const n = I(t), r = function(t, e) {\n        const n = tn(t, e);\n        return {\n            structuredAggregationQuery: {\n                aggregations: [ {\n                    count: {},\n                    alias: \"count_alias\"\n                } ],\n                structuredQuery: n.structuredQuery\n            },\n            parent: n.parent\n        };\n    }(n.C, Ee(e)), s = r.parent;\n    n.connection.v || delete r.parent;\n    return (await n.P(\"RunAggregationQuery\", s, r, /*expectedResponseCount=*/ 1)).filter((t => !!t.result)).map((t => t.result.aggregateFields));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const pn = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction yn(t) {\n    if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n    if (!pn.has(t)) {\n        y(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new pt(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new J(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = an(t._databaseId), u = function(t, e, n, r) {\n            return new ln(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        pn.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return pn.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass gn {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new U(P, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */ class _n {\n    /** @hideconstructor */\n    constructor(t, e, n, r) {\n        this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, \n        this._app = r, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new gn({}), \n        this._settingsFrozen = !1;\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new gn(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new Q;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                return new K(e, t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = pn.get(t);\n            e && (y(\"ComponentProvider\", \"Removing Datastore\"), pn.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction vn(t, e, n) {\n    n || (n = \"(default)\");\n    const r = _getProvider(t, \"firestore/lite\");\n    if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n    return r.initialize({\n        options: e,\n        instanceIdentifier: n\n    });\n}\n\nfunction bn(e, n) {\n    const r = \"object\" == typeof e ? e : t(), s = \"string\" == typeof e ? e : n || \"(default)\", i = _getProvider(r, \"firestore/lite\").getImmediate({\n        identifier: s\n    });\n    if (!i._initialized) {\n        const t = a(\"firestore\");\n        t && En(i, ...t);\n    }\n    return i;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function En(t, e, n, r = {}) {\n    var s;\n    const i = (t = ct(t, _n))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && _(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = d.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = h(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new d(i);\n        }\n        t._authCredentials = new z(new B(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function In(t) {\n    return t = ct(t, _n), e(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass Tn {\n    constructor() {\n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateField\";\n    }\n}\n\n/**\n * The results of executing an aggregation query.\n */ class An {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._data = e, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateQuerySnapshot\", this.query = t;\n    }\n    /**\n     * Returns the results of the aggregations performed over the underlying\n     * query.\n     *\n     * The keys of the returned object will be the same as those of the\n     * `AggregateSpec` object specified to the aggregation method, and the values\n     * will be the corresponding aggregation result.\n     *\n     * @returns The results of the aggregations performed over the underlying\n     * query.\n     */    data() {\n        return this._data;\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * CountQueryRunner encapsulates the logic needed to run the count aggregation\n * queries.\n */ class Rn {\n    constructor(t, e, n) {\n        this.query = t, this.datastore = e, this.userDataWriter = n;\n    }\n    run() {\n        return mn(this.datastore, this.query._query).then((t => {\n            E(void 0 !== t[0]);\n            const e = Object.entries(t[0]).filter((([t, e]) => \"count_alias\" === t)).map((([t, e]) => this.userDataWriter.convertValue(e)))[0];\n            return E(\"number\" == typeof e), Promise.resolve(new An(this.query, {\n                count: e\n            }));\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */ class Pn {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new $n(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new Pn(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class Vn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new Vn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class $n extends Vn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new ye(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new Pn(this.firestore, \n        /* converter= */ null, new rt(t));\n    }\n    withConverter(t) {\n        return new $n(this.firestore, t, this._path);\n    }\n}\n\nfunction Nn(t, e, ...n) {\n    if (t = l(t), st(\"collection\", \"path\", e), t instanceof _n) {\n        const r = tt.fromString(e, ...n);\n        return ot(r), new $n(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof Pn || t instanceof $n)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return ot(r), new $n(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function Dn(t, e) {\n    if (t = ct(t, _n), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new Vn(t, \n    /* converter= */ null, function(t) {\n        return new ye(tt.emptyPath(), t);\n    }(e));\n}\n\nfunction Fn(t, e, ...n) {\n    if (t = l(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = gt.N()), st(\"doc\", \"path\", e), t instanceof _n) {\n        const r = tt.fromString(e, ...n);\n        return it(r), new Pn(t, \n        /* converter= */ null, new rt(r));\n    }\n    {\n        if (!(t instanceof Pn || t instanceof $n)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return it(r), new Pn(t.firestore, t instanceof $n ? t.converter : null, new rt(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function xn(t, e) {\n    return t = l(t), e = l(e), (t instanceof Pn || t instanceof $n) && (e instanceof Pn || e instanceof $n) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Sn(t, e) {\n    return t = l(t), e = l(e), t instanceof Vn && e instanceof Vn && (t.firestore === e.firestore && Te(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class qn {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new qn(It.fromBase64String(t));\n        } catch (t) {\n            throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new qn(It.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class On {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new nt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function kn() {\n    return new On(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class Cn {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class Ln {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return _t(this._lat, t._lat) || _t(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Mn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class Un {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new qe(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Se(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class jn {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new qe(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction Bn(t) {\n    switch (t) {\n      case 0 /* UserDataSource.Set */ :\n // fall through\n              case 2 /* UserDataSource.MergeSet */ :\n // fall through\n              case 1 /* UserDataSource.Update */ :\n        return !0;\n\n      case 3 /* UserDataSource.Argument */ :\n      case 4 /* UserDataSource.ArrayArgument */ :\n        return !1;\n\n      default:\n        throw b();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class Qn {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.C = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.et(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get nt() {\n        return this.settings.nt;\n    }\n    /** Returns a new context with the specified settings overwritten. */    rt(t) {\n        return new Qn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.C, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    st(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.rt({\n            path: n,\n            it: !1\n        });\n        return r.ot(t), r;\n    }\n    ut(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.rt({\n            path: n,\n            it: !1\n        });\n        return r.et(), r;\n    }\n    ct(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.rt({\n            path: void 0,\n            it: !0\n        });\n    }\n    at(t) {\n        return hr(t, this.settings.methodName, this.settings.ht || !1, this.path, this.settings.lt);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    et() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.ot(this.path.get(t));\n    }\n    ot(t) {\n        if (0 === t.length) throw this.at(\"Document fields must not be empty\");\n        if (Bn(this.nt) && Mn.test(t)) throw this.at('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class zn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.C = n || an(t);\n    }\n    /** Creates a new top-level parse context. */    ft(t, e, n, r = !1) {\n        return new Qn({\n            nt: t,\n            methodName: e,\n            lt: n,\n            path: nt.emptyPath(),\n            it: !1,\n            ht: r\n        }, this.databaseId, this.C, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Wn(t) {\n    const e = t._freezeSettings(), n = an(t._databaseId);\n    return new zn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Gn(t, e, n, r, s, i = {}) {\n    const o = t.ft(i.merge || i.mergeFields ? 2 /* UserDataSource.MergeSet */ : 0 /* UserDataSource.Set */ , e, n, s);\n    or(\"Data must be an object, but it was:\", o, r);\n    const u = sr(r, o);\n    let c, a;\n    if (i.merge) c = new fe(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = ur(e, r, n);\n            if (!o.contains(s)) throw new U(P, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            lr(t, s) || t.push(s);\n        }\n        c = new fe(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new Un(new de(u), c, a);\n}\n\nclass Kn extends Cn {\n    _toFieldTransform(t) {\n        if (2 /* UserDataSource.MergeSet */ !== t.nt) throw 1 /* UserDataSource.Update */ === t.nt ? t.at(`${this._methodName}() can only appear at the top level of your update data`) : t.at(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof Kn;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function Yn(t, e, n) {\n    return new Qn({\n        nt: 3 /* UserDataSource.Argument */ ,\n        lt: e.settings.lt,\n        methodName: t._methodName,\n        it: n\n    }, e.databaseId, e.C, e.ignoreUndefinedProperties);\n}\n\nclass Hn extends Cn {\n    _toFieldTransform(t) {\n        return new De(t.path, new Pe);\n    }\n    isEqual(t) {\n        return t instanceof Hn;\n    }\n}\n\nclass Jn extends Cn {\n    constructor(t, e) {\n        super(t), this.dt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Yn(this, t, \n        /*array=*/ !0), n = this.dt.map((t => rr(t, e))), r = new Ve(n);\n        return new De(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Xn extends Cn {\n    constructor(t, e) {\n        super(t), this.dt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Yn(this, t, \n        /*array=*/ !0), n = this.dt.map((t => rr(t, e))), r = new $e(n);\n        return new De(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Zn extends Cn {\n    constructor(t, e) {\n        super(t), this.wt = e;\n    }\n    _toFieldTransform(t) {\n        const e = new Ne(t.C, Ae(t.C, this.wt));\n        return new De(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function tr(t, e, n, r) {\n    const s = t.ft(1 /* UserDataSource.Update */ , e, n);\n    or(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = de.empty();\n    Et(r, ((t, r) => {\n        const u = ar(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = l(r);\n        const c = s.ut(u);\n        if (r instanceof Kn) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = rr(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new fe(i);\n    return new jn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function er(t, e, n, r, s, i) {\n    const o = t.ft(1 /* UserDataSource.Update */ , e, n), u = [ ur(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new U(P, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(ur(e, i[t])), c.push(i[t + 1]);\n    const a = [], h = de.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!lr(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = l(n);\n        const r = o.ut(e);\n        if (n instanceof Kn) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = rr(n, r);\n            null != t && (a.push(e), h.set(e, t));\n        }\n    }\n    const f = new fe(a);\n    return new jn(h, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function nr(t, e, n, r = !1) {\n    return rr(n, t.ft(r ? 4 /* UserDataSource.ArrayArgument */ : 3 /* UserDataSource.Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function rr(t, e) {\n    if (ir(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = l(t))) return or(\"Unsupported field value:\", e, t), sr(t, e);\n    if (t instanceof Cn) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Bn(e.nt)) throw e.at(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.at(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.it && 4 /* UserDataSource.ArrayArgument */ !== e.nt) throw e.at(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = rr(s, e.ct(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = l(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return Ae(e.C, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = Vt.fromDate(t);\n            return {\n                timestampValue: je(e.C, n)\n            };\n        }\n        if (t instanceof Vt) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new Vt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: je(e.C, n)\n            };\n        }\n        if (t instanceof Ln) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof qn) return {\n            bytesValue: Be(e.C, t._byteString)\n        };\n        if (t instanceof Pn) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.at(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: We(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.at(`Unsupported field value: ${ut(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction sr(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Converts a Base64 encoded string to a binary string. */ (t) ? Et(t, ((t, r) => {\n        const s = rr(r, e.st(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction ir(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof Vt || t instanceof Ln || t instanceof qn || t instanceof Pn || t instanceof Cn);\n}\n\nfunction or(t, e, n) {\n    if (!ir(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = ut(n);\n        throw \"an object\" === r ? e.at(t + \" a custom object\") : e.at(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function ur(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = l(e)) instanceof On) return e._internalPath;\n    if (\"string\" == typeof e) return ar(t, e);\n    throw hr(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const cr = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function ar(t, e, n) {\n    if (e.search(cr) >= 0) throw hr(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new On(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw hr(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction hr(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new U(P, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function lr(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class fr {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new Pn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new dr(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(pr(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class dr extends fr {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class wr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function mr(t, e) {\n    return t = l(t), e = l(e), t instanceof fr && e instanceof fr ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof wr && e instanceof wr && (Sn(t.query, e.query) && vt(t.docs, e.docs, mr));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function pr(t, e) {\n    return \"string\" == typeof e ? ar(t, e) : e instanceof On ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\nclass yr {}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link startAt}, {@link startAfter}, {@link\n * endBefore}, {@link endAt}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */ class gr extends yr {}\n\nfunction _r(t, e, ...n) {\n    let r = [];\n    e instanceof yr && r.push(e), r = r.concat(n), function(t) {\n        const e = t.filter((t => t instanceof Er)).length, n = t.filter((t => t instanceof vr)).length;\n        if (e > 1 || e > 0 && n > 0) throw new U(P, \"InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.\");\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */ (r);\n    for (const e of r) t = e._apply(t);\n    return t;\n}\n\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link query} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */ class vr extends gr {\n    /**\n     * @internal\n     */\n    constructor(t, e, n) {\n        super(), this._field = t, this._op = e, this._value = n, \n        /** The type of this query constraint */\n        this.type = \"where\";\n    }\n    static _create(t, e, n) {\n        return new vr(t, e, n);\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return Lr(t._query, e), new Vn(t.firestore, t.converter, Ie(t._query, e));\n    }\n    _parse(t) {\n        const e = Wn(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* Operator.ARRAY_CONTAINS */ === i || \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === i) throw new U(P, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i) {\n                    Cr(o, i);\n                    const e = [];\n                    for (const n of o) e.push(kr(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = kr(r, t, o);\n            } else \"in\" /* Operator.IN */ !== i && \"not-in\" /* Operator.NOT_IN */ !== i && \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ !== i || Cr(o, i), \n            u = nr(n, e, o, \n            /* allowArrays= */ \"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i);\n            return Gt.create(s, i, u);\n        }(t._query, \"where\", e, t.firestore._databaseId, this._field, this._op, this._value);\n        return n;\n    }\n}\n\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */ function br(t, e, n) {\n    const r = e, s = pr(\"where\", t);\n    return vr._create(s, r, n);\n}\n\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link query} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ class Er extends yr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e) {\n        super(), this.type = t, this._queryConstraints = e;\n    }\n    static _create(t, e) {\n        return new Er(t, e);\n    }\n    _parse(t) {\n        const e = this._queryConstraints.map((e => e._parse(t))).filter((t => t.getFilters().length > 0));\n        return 1 === e.length ? e[0] : Kt.create(e, this._getOperator());\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return 0 === e.getFilters().length ? t : (function(t, e) {\n            let n = t;\n            const r = e.getFlattenedFilters();\n            for (const t of r) Lr(n, t), n = Ie(n, t);\n        }\n        // Checks if any of the provided filter operators are included in the given list of filters and\n        // returns the first one that is, or null if none are.\n        (t._query, e), new Vn(t.firestore, t.converter, Ie(t._query, e)));\n    }\n    _getQueryConstraints() {\n        return this._queryConstraints;\n    }\n    _getOperator() {\n        return \"and\" === this.type ? \"and\" /* CompositeOperator.AND */ : \"or\" /* CompositeOperator.OR */;\n    }\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a disjunction of\n * the given filter constraints. A disjunction filter includes a document if it\n * satisfies any of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a disjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ function Ir(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => Ur(\"or\", t))), Er._create(\"or\" /* CompositeOperator.OR */ , t);\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a conjunction of\n * the given filter constraints. A conjunction filter includes a document if it\n * satisfies all of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a conjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ function Tr(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => Ur(\"and\", t))), Er._create(\"and\" /* CompositeOperator.AND */ , t);\n}\n\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link query} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */ class Ar extends gr {\n    /**\n     * @internal\n     */\n    constructor(t, e) {\n        super(), this._field = t, this._direction = e, \n        /** The type of this query constraint */\n        this.type = \"orderBy\";\n    }\n    static _create(t, e) {\n        return new Ar(t, e);\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new se(e, n);\n            return function(t, e) {\n                if (null === ge(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = _e(t);\n                    null !== n && Mr(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this._field, this._direction);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new ye(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */ function Rr(t, e = \"asc\") {\n    const n = e, r = pr(\"orderBy\", t);\n    return Ar._create(r, n);\n}\n\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */ class Pr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._limit = e, this._limitType = n;\n    }\n    static _create(t, e, n) {\n        return new Pr(t, e, n);\n    }\n    _apply(t) {\n        return new Vn(t.firestore, t.converter, function(t, e, n) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this._limit, this._limitType));\n    }\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function Vr(t) {\n    return at(\"limit\", t), Pr._create(\"limit\", t, \"F\" /* LimitType.First */);\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function $r(t) {\n    return at(\"limitToLast\", t), Pr._create(\"limitToLast\", t, \"L\" /* LimitType.Last */);\n}\n\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link query} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */ class Nr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new Nr(t, e, n);\n    }\n    _apply(t) {\n        const e = Or(t, this.type, this._docOrFields, this._inclusive);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction Dr(...t) {\n    return Nr._create(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction Fr(...t) {\n    return Nr._create(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */ class xr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new xr(t, e, n);\n    }\n    _apply(t) {\n        const e = Or(t, this.type, this._docOrFields, this._inclusive);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction Sr(...t) {\n    return xr._create(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction qr(...t) {\n    return xr._create(\"endAt\", t, \n    /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function Or(t, e, n, r) {\n    if (n[0] = l(n[0]), n[0] instanceof fr) return function(t, e, n, r, s) {\n        if (!r) throw new U($, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of be(t)) if (n.field.isKeyField()) i.push(Ct(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if ($t(t)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new U(P, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new Qt(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Wn(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new U(P, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new U(P, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!ve(t) && -1 !== c.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(tt.fromString(c));\n                    if (!rt.isDocumentKey(n)) throw new U(P, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new rt(n);\n                    u.push(Ct(e, s));\n                } else {\n                    const t = nr(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new Qt(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction kr(t, e, n) {\n    if (\"string\" == typeof (n = l(n))) {\n        if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!ve(e) && -1 !== n.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(tt.fromString(n));\n        if (!rt.isDocumentKey(r)) throw new U(P, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return Ct(t, new rt(r));\n    }\n    if (n instanceof Pn) return Ct(t, n._key);\n    throw new U(P, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${ut(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function Cr(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new U(P, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n    if (t.length > 10) throw new U(P, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */ function Lr(t, e) {\n    if (e.isInequality()) {\n        const n = _e(t), r = e.field;\n        if (null !== n && !n.isEqual(r)) throw new U(P, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${r.toString()}'`);\n        const s = ge(t);\n        null !== s && Mr(t, r, s);\n    }\n    const n = function(t, e) {\n        for (const n of t) for (const t of n.getFlattenedFilters()) if (e.indexOf(t.op) >= 0) return t.op;\n        return null;\n    }(t.filters, function(t) {\n        switch (t) {\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return [ \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains\" /* Operator.ARRAY_CONTAINS */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"in\" /* Operator.IN */ :\n            return [ \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"not-in\" /* Operator.NOT_IN */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ , \"!=\" /* Operator.NOT_EQUAL */ ];\n\n          default:\n            return [];\n        }\n    }(e.op));\n    if (null !== n) \n    // Special case when it's a duplicate op to give a slightly clearer error message.\n    throw n === e.op ? new U(P, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(P, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n}\n\nfunction Mr(t, e, n) {\n    if (!n.isEqual(e)) throw new U(P, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\nfunction Ur(t, e) {\n    if (!(e instanceof vr || e instanceof Er)) throw new U(P, `Function ${t}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction jr(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass Br extends class {\n    convertValue(t, e = \"none\") {\n        switch (xt(t)) {\n          case 0 /* TypeOrder.NullValue */ :\n            return null;\n\n          case 1 /* TypeOrder.BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* TypeOrder.NumberValue */ :\n            return Rt(t.integerValue || t.doubleValue);\n\n          case 3 /* TypeOrder.TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* TypeOrder.ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* TypeOrder.StringValue */ :\n            return t.stringValue;\n\n          case 6 /* TypeOrder.BlobValue */ :\n            return this.convertBytes(Pt(t.bytesValue));\n\n          case 7 /* TypeOrder.RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* TypeOrder.GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* TypeOrder.ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* TypeOrder.ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw b();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return Et(t.fields, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new Ln(Rt(t.latitude), Rt(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = Nt(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(Dt(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = At(t);\n        return new Vt(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = tt.fromString(t);\n        E(cn(n));\n        const r = new X(n.get(1), n.get(3)), s = new rt(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        g(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new qn(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new Pn(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function Qr(t) {\n    const e = yn((t = ct(t, Pn)).firestore), n = new Br(t.firestore);\n    return dn(e, [ t._key ]).then((e => {\n        E(1 === e.length);\n        const r = e[0];\n        return new fr(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function zr(t) {\n    !function(t) {\n        if (\"L\" /* LimitType.Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ct(t, Vn))._query);\n    const e = yn(t.firestore), n = new Br(t.firestore);\n    return wn(e, t._query).then((e => {\n        const r = e.map((e => new dr(t.firestore, n, e.key, e, t.converter)));\n        return \"L\" /* LimitType.Last */ === t._query.limitType && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new wr(t, r);\n    }));\n}\n\nfunction Wr(t, e, n) {\n    const r = jr((t = ct(t, Pn)).converter, e, n), s = Gn(Wn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return fn(yn(t.firestore), [ s.toMutation(t._key, Fe.none()) ]);\n}\n\nfunction Gr(t, e, n, ...r) {\n    const s = Wn((t = ct(t, Pn)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(s, \"updateDoc\", t._key, e, n, r) : tr(s, \"updateDoc\", t._key, e);\n    return fn(yn(t.firestore), [ i.toMutation(t._key, Fe.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Kr(t) {\n    return fn(yn((t = ct(t, Pn)).firestore), [ new Oe(t._key, Fe.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Yr(t, e) {\n    const n = Fn(t = ct(t, $n)), r = jr(t.converter, e), s = Gn(Wn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return fn(yn(t.firestore), [ s.toMutation(n._key, Fe.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */ function Hr(t) {\n    const e = ct(t.firestore, _n), n = yn(e), r = new Br(e);\n    return new Rn(t, n, r).run();\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */ function Jr(t, e) {\n    return Sn(t.query, e.query) && f(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function Xr() {\n    return new Kn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function Zr() {\n    return new Hn(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function ts(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Jn(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function es(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Xn(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function ns(t) {\n    return new Zn(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class rs {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Wn(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = ss(t, this._firestore), s = jr(r.converter, e, n), i = Gn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, Fe.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = ss(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : tr(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, Fe.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = ss(t, this._firestore);\n        return this._mutations = this._mutations.concat(new Oe(e._key, Fe.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction ss(t, e) {\n    if ((t = l(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function is(t) {\n    const e = yn(t = ct(t, _n));\n    return new rs(t, (t => fn(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class os {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await dn(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new Oe(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = rt.fromPath(e);\n            this.mutations.push(new ke(n, this.precondition(n)));\n        })), await fn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw b();\n            // Represent a deleted doc using SnapshotVersion.min().\n            e = oe.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new U(q, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(oe.min()) ? Fe.exists(!1) : Fe.updateTime(e) : Fe.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(oe.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new U(P, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Fe.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return Fe.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const us = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass cs {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, \n        this.deferred = s, this.yt = n.maxAttempts, this.gt = new hn(this.asyncQueue, \"transaction_retry\" /* TimerId.TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.yt -= 1, this._t();\n    }\n    _t() {\n        this.gt.H((async () => {\n            const t = new os(this.datastore), e = this.vt(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.bt(t);\n                }))));\n            })).catch((t => {\n                this.bt(t);\n            }));\n        }));\n    }\n    vt(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !ht(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    bt(t) {\n        this.yt > 0 && this.Et(t) ? (this.yt -= 1, this.asyncQueue.enqueueAndForget((() => (this._t(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    Et(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return b();\n\n                  case A:\n                  case R:\n                  case V:\n                  case x:\n                  case C:\n                  case L:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case F:\n                    return !1;\n\n                  case P:\n                  case $:\n                  case N:\n                  case D:\n                  case S:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case q:\n                  case O:\n                  case k:\n                  case M:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function as() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class hs {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new j, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new hs(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(A, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class ls {\n    constructor() {\n        // The last promise in the queue.\n        this.It = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Tt = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.At = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.Rt = [], \n        // visible for testing\n        this.Pt = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.Vt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.$t = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Nt = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.gt = new hn(this, \"async_queue_retry\" /* TimerId.AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Dt = () => {\n            const t = as();\n            t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.gt.X();\n        };\n        const t = as();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Dt);\n    }\n    get isShuttingDown() {\n        return this.At;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Ft(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.xt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.At) {\n            this.At = !0, this.$t = t || !1;\n            const e = as();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Dt);\n        }\n    }\n    enqueue(t) {\n        if (this.Ft(), this.At) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new j;\n        return this.xt((() => this.At && this.$t ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Tt.push(t), this.St())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async St() {\n        if (0 !== this.Tt.length) {\n            try {\n                await this.Tt[0](), this.Tt.shift(), this.gt.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                y(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Tt.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.gt.H((() => this.St()));\n        }\n    }\n    xt(t) {\n        const e = this.It.then((() => (this.Vt = !0, t().catch((t => {\n            this.Pt = t, this.Vt = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw g(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.Vt = !1, t))))));\n        return this.It = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.Ft(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Nt.indexOf(t) > -1 && (e = 0);\n        const r = hs.createAndSchedule(this, t, e, n, (t => this.qt(t)));\n        return this.Rt.push(r), r;\n    }\n    Ft() {\n        this.Pt && b();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Ot() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.It, await t;\n        } while (t !== this.It);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    kt(t) {\n        for (const e of this.Rt) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Ct(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Ot().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.Rt.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.Rt) if (e.skipDelay(), \"all\" /* TimerId.All */ !== t && e.timerId === t) break;\n            return this.Ot();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Lt(t) {\n        this.Nt.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    qt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.Rt.indexOf(t);\n        this.Rt.splice(e, 1);\n    }\n}\n\nclass fs {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Wn(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = ss(t, this._firestore), n = new Br(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return b();\n            const r = t[0];\n            if (r.isFoundDocument()) return new fr(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new fr(this._firestore, n, e._key, null, e.converter);\n            throw b();\n        }));\n    }\n    set(t, e, n) {\n        const r = ss(t, this._firestore), s = jr(r.converter, e, n), i = Gn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = ss(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(this._dataReader, \"Transaction.update\", s._key, e, n, r) : tr(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = ss(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function ds(t, e, n) {\n    const r = yn(t = ct(t, _n)), s = Object.assign(Object.assign({}, us), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n    }(s);\n    const i = new j;\n    return new cs(new ls, r, s, (n => e(new fs(t, n))), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    w = t;\n}(`${s}_lite`), n(new i(\"firestore/lite\", ((t, {instanceIdentifier: e, options: n}) => {\n    const r = t.getProvider(\"app\").getImmediate(), s = new _n(new W(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function(t, e) {\n        if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n        return new X(t.options.projectId, e);\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (r, e), r);\n    return n && s._setSettings(n), s;\n}), \"PUBLIC\").setMultipleInstances(!0)), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nr(\"firestore-lite\", \"3.8.3\", \"\"), r(\"firestore-lite\", \"3.8.3\", \"__BUILD_TARGET__\");\n\nexport { Tn as AggregateField, An as AggregateQuerySnapshot, qn as Bytes, $n as CollectionReference, Pn as DocumentReference, fr as DocumentSnapshot, On as FieldPath, Cn as FieldValue, _n as Firestore, U as FirestoreError, Ln as GeoPoint, Vn as Query, Er as QueryCompositeFilterConstraint, gr as QueryConstraint, dr as QueryDocumentSnapshot, xr as QueryEndAtConstraint, vr as QueryFieldFilterConstraint, Pr as QueryLimitConstraint, Ar as QueryOrderByConstraint, wr as QuerySnapshot, Nr as QueryStartAtConstraint, Vt as Timestamp, fs as Transaction, rs as WriteBatch, Yr as addDoc, Jr as aggregateQuerySnapshotEqual, Tr as and, es as arrayRemove, ts as arrayUnion, Nn as collection, Dn as collectionGroup, En as connectFirestoreEmulator, Kr as deleteDoc, Xr as deleteField, Fn as doc, kn as documentId, qr as endAt, Sr as endBefore, Hr as getCount, Qr as getDoc, zr as getDocs, bn as getFirestore, ns as increment, vn as initializeFirestore, Vr as limit, $r as limitToLast, Ir as or, Rr as orderBy, _r as query, Sn as queryEqual, xn as refEqual, ds as runTransaction, Zr as serverTimestamp, Wr as setDoc, p as setLogLevel, mr as snapshotEqual, Fr as startAfter, Dr as startAt, In as terminate, Gr as updateDoc, br as where, is as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n"]},"metadata":{},"sourceType":"module"}